// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/device_attributes.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/device_attributes.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr InterconnectLink::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_{0},
        strength_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterconnectLink::InterconnectLink(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterconnectLinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterconnectLinkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterconnectLinkDefaultTypeInternal() {}
  union {
    InterconnectLink _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterconnectLinkDefaultTypeInternal _InterconnectLink_default_instance_;

inline constexpr LocalLinks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : link_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LocalLinks::LocalLinks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocalLinksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalLinksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalLinksDefaultTypeInternal() {}
  union {
    LocalLinks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalLinksDefaultTypeInternal _LocalLinks_default_instance_;

inline constexpr DeviceLocality::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        links_{nullptr},
        bus_id_{0},
        numa_node_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceLocality::DeviceLocality(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceLocalityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceLocalityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceLocalityDefaultTypeInternal() {}
  union {
    DeviceLocality _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceLocalityDefaultTypeInternal _DeviceLocality_default_instance_;

inline constexpr DeviceAttributes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        physical_device_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locality_{nullptr},
        memory_limit_{::int64_t{0}},
        incarnation_{::uint64_t{0u}},
        xla_global_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceAttributes::DeviceAttributes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceAttributesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceAttributesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceAttributesDefaultTypeInternal() {}
  union {
    DeviceAttributes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceAttributesDefaultTypeInternal _DeviceAttributes_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::InterconnectLink, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::InterconnectLink, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::InterconnectLink, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::InterconnectLink, _impl_.strength_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::LocalLinks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::LocalLinks, _impl_.link_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceLocality, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceLocality, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceLocality, _impl_.bus_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceLocality, _impl_.numa_node_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceLocality, _impl_.links_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.device_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.memory_limit_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.locality_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.incarnation_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.physical_device_desc_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceAttributes, _impl_.xla_global_id_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::InterconnectLink)},
        {11, -1, -1, sizeof(::tensorflow::LocalLinks)},
        {20, 31, -1, sizeof(::tensorflow::DeviceLocality)},
        {34, 49, -1, sizeof(::tensorflow::DeviceAttributes)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_InterconnectLink_default_instance_._instance,
    &::tensorflow::_LocalLinks_default_instance_._instance,
    &::tensorflow::_DeviceLocality_default_instance_._instance,
    &::tensorflow::_DeviceAttributes_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n1tensorflow/core/framework/device_attri"
    "butes.proto\022\ntensorflow\"E\n\020InterconnectL"
    "ink\022\021\n\tdevice_id\030\001 \001(\005\022\014\n\004type\030\002 \001(\t\022\020\n\010"
    "strength\030\003 \001(\005\"8\n\nLocalLinks\022*\n\004link\030\001 \003"
    "(\0132\034.tensorflow.InterconnectLink\"Z\n\016Devi"
    "ceLocality\022\016\n\006bus_id\030\001 \001(\005\022\021\n\tnuma_node\030"
    "\002 \001(\005\022%\n\005links\030\003 \001(\0132\026.tensorflow.LocalL"
    "inks\"\303\001\n\020DeviceAttributes\022\014\n\004name\030\001 \001(\t\022"
    "\023\n\013device_type\030\002 \001(\t\022\024\n\014memory_limit\030\004 \001"
    "(\003\022,\n\010locality\030\005 \001(\0132\032.tensorflow.Device"
    "Locality\022\023\n\013incarnation\030\006 \001(\006\022\034\n\024physica"
    "l_device_desc\030\007 \001(\t\022\025\n\rxla_global_id\030\010 \001"
    "(\003B\221\001\n\030org.tensorflow.frameworkB\026DeviceA"
    "ttributesProtosP\001ZXgithub.com/tensorflow"
    "/tensorflow/tensorflow/go/core/framework"
    "/device_attributes_go_proto\370\001\001b\006proto3"
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto = {
    false,
    false,
    638,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
    "tensorflow/core/framework/device_attributes.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
};
namespace tensorflow {
// ===================================================================

class InterconnectLink::_Internal {
 public:
};

InterconnectLink::InterconnectLink(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.InterconnectLink)
}
inline PROTOBUF_NDEBUG_INLINE InterconnectLink::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::InterconnectLink& from_msg)
      : type_(arena, from.type_),
        _cached_size_{0} {}

InterconnectLink::InterconnectLink(
    ::google::protobuf::Arena* arena,
    const InterconnectLink& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterconnectLink* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, device_id_),
           offsetof(Impl_, strength_) -
               offsetof(Impl_, device_id_) +
               sizeof(Impl_::strength_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.InterconnectLink)
}
inline PROTOBUF_NDEBUG_INLINE InterconnectLink::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        _cached_size_{0} {}

inline void InterconnectLink::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_id_),
           0,
           offsetof(Impl_, strength_) -
               offsetof(Impl_, device_id_) +
               sizeof(Impl_::strength_));
}
InterconnectLink::~InterconnectLink() {
  // @@protoc_insertion_point(destructor:tensorflow.InterconnectLink)
  SharedDtor(*this);
}
inline void InterconnectLink::SharedDtor(MessageLite& self) {
  InterconnectLink& this_ = static_cast<InterconnectLink&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InterconnectLink::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterconnectLink(arena);
}
constexpr auto InterconnectLink::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InterconnectLink),
                                            alignof(InterconnectLink));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterconnectLink::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterconnectLink_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterconnectLink::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterconnectLink>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterconnectLink::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterconnectLink>(), &InterconnectLink::ByteSizeLong,
            &InterconnectLink::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_._cached_size_),
        false,
    },
    &InterconnectLink::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterconnectLink::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 40, 2> InterconnectLink::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::InterconnectLink>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 device_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterconnectLink, _impl_.device_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.device_id_)}},
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.type_)}},
    // int32 strength = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterconnectLink, _impl_.strength_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.strength_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 device_id = 1;
    {PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 strength = 3;
    {PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.strength_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\33\0\4\0\0\0\0\0"
    "tensorflow.InterconnectLink"
    "type"
  }},
};

PROTOBUF_NOINLINE void InterconnectLink::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.InterconnectLink)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  ::memset(&_impl_.device_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.strength_) -
      reinterpret_cast<char*>(&_impl_.device_id_)) + sizeof(_impl_.strength_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterconnectLink::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterconnectLink& this_ = static_cast<const InterconnectLink&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterconnectLink::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterconnectLink& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.InterconnectLink)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 device_id = 1;
          if (this_._internal_device_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_device_id(), target);
          }

          // string type = 2;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.InterconnectLink.type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 strength = 3;
          if (this_._internal_strength() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_strength(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.InterconnectLink)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterconnectLink::ByteSizeLong(const MessageLite& base) {
          const InterconnectLink& this_ = static_cast<const InterconnectLink&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterconnectLink::ByteSizeLong() const {
          const InterconnectLink& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.InterconnectLink)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 2;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // int32 device_id = 1;
            if (this_._internal_device_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_device_id());
            }
            // int32 strength = 3;
            if (this_._internal_strength() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_strength());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterconnectLink::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterconnectLink*>(&to_msg);
  auto& from = static_cast<const InterconnectLink&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.InterconnectLink)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_device_id() != 0) {
    _this->_impl_.device_id_ = from._impl_.device_id_;
  }
  if (from._internal_strength() != 0) {
    _this->_impl_.strength_ = from._impl_.strength_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterconnectLink::CopyFrom(const InterconnectLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.InterconnectLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterconnectLink::InternalSwap(InterconnectLink* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.strength_)
      + sizeof(InterconnectLink::_impl_.strength_)
      - PROTOBUF_FIELD_OFFSET(InterconnectLink, _impl_.device_id_)>(
          reinterpret_cast<char*>(&_impl_.device_id_),
          reinterpret_cast<char*>(&other->_impl_.device_id_));
}

::google::protobuf::Metadata InterconnectLink::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LocalLinks::_Internal {
 public:
};

LocalLinks::LocalLinks(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.LocalLinks)
}
inline PROTOBUF_NDEBUG_INLINE LocalLinks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::LocalLinks& from_msg)
      : link_{visibility, arena, from.link_},
        _cached_size_{0} {}

LocalLinks::LocalLinks(
    ::google::protobuf::Arena* arena,
    const LocalLinks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LocalLinks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.LocalLinks)
}
inline PROTOBUF_NDEBUG_INLINE LocalLinks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : link_{visibility, arena},
        _cached_size_{0} {}

inline void LocalLinks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LocalLinks::~LocalLinks() {
  // @@protoc_insertion_point(destructor:tensorflow.LocalLinks)
  SharedDtor(*this);
}
inline void LocalLinks::SharedDtor(MessageLite& self) {
  LocalLinks& this_ = static_cast<LocalLinks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LocalLinks::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LocalLinks(arena);
}
constexpr auto LocalLinks::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LocalLinks, _impl_.link_) +
          decltype(LocalLinks::_impl_.link_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LocalLinks), alignof(LocalLinks), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LocalLinks::PlacementNew_,
                                 sizeof(LocalLinks),
                                 alignof(LocalLinks));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LocalLinks::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LocalLinks_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LocalLinks::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LocalLinks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LocalLinks::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LocalLinks>(), &LocalLinks::ByteSizeLong,
            &LocalLinks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LocalLinks, _impl_._cached_size_),
        false,
    },
    &LocalLinks::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LocalLinks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LocalLinks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::LocalLinks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.InterconnectLink link = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocalLinks, _impl_.link_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.InterconnectLink link = 1;
    {PROTOBUF_FIELD_OFFSET(LocalLinks, _impl_.link_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::InterconnectLink>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LocalLinks::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.LocalLinks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.link_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LocalLinks::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LocalLinks& this_ = static_cast<const LocalLinks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LocalLinks::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LocalLinks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.LocalLinks)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.InterconnectLink link = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_link_size());
               i < n; i++) {
            const auto& repfield = this_._internal_link().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.LocalLinks)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LocalLinks::ByteSizeLong(const MessageLite& base) {
          const LocalLinks& this_ = static_cast<const LocalLinks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LocalLinks::ByteSizeLong() const {
          const LocalLinks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.LocalLinks)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.InterconnectLink link = 1;
            {
              total_size += 1UL * this_._internal_link_size();
              for (const auto& msg : this_._internal_link()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LocalLinks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LocalLinks*>(&to_msg);
  auto& from = static_cast<const LocalLinks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.LocalLinks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_link()->MergeFrom(
      from._internal_link());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalLinks::CopyFrom(const LocalLinks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.LocalLinks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LocalLinks::InternalSwap(LocalLinks* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.link_.InternalSwap(&other->_impl_.link_);
}

::google::protobuf::Metadata LocalLinks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceLocality::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceLocality>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_._has_bits_);
};

DeviceLocality::DeviceLocality(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeviceLocality)
}
inline PROTOBUF_NDEBUG_INLINE DeviceLocality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DeviceLocality& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeviceLocality::DeviceLocality(
    ::google::protobuf::Arena* arena,
    const DeviceLocality& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceLocality* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.links_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::LocalLinks>(
                              arena, *from._impl_.links_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bus_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, bus_id_),
           offsetof(Impl_, numa_node_) -
               offsetof(Impl_, bus_id_) +
               sizeof(Impl_::numa_node_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.DeviceLocality)
}
inline PROTOBUF_NDEBUG_INLINE DeviceLocality::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceLocality::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, links_),
           0,
           offsetof(Impl_, numa_node_) -
               offsetof(Impl_, links_) +
               sizeof(Impl_::numa_node_));
}
DeviceLocality::~DeviceLocality() {
  // @@protoc_insertion_point(destructor:tensorflow.DeviceLocality)
  SharedDtor(*this);
}
inline void DeviceLocality::SharedDtor(MessageLite& self) {
  DeviceLocality& this_ = static_cast<DeviceLocality&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.links_;
  this_._impl_.~Impl_();
}

inline void* DeviceLocality::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceLocality(arena);
}
constexpr auto DeviceLocality::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeviceLocality),
                                            alignof(DeviceLocality));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceLocality::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceLocality_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceLocality::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceLocality>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceLocality::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceLocality>(), &DeviceLocality::ByteSizeLong,
            &DeviceLocality::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_._cached_size_),
        false,
    },
    &DeviceLocality::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceLocality::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> DeviceLocality::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DeviceLocality>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 bus_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceLocality, _impl_.bus_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.bus_id_)}},
    // int32 numa_node = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceLocality, _impl_.numa_node_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.numa_node_)}},
    // .tensorflow.LocalLinks links = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.links_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 bus_id = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.bus_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 numa_node = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.numa_node_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tensorflow.LocalLinks links = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.links_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::LocalLinks>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DeviceLocality::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeviceLocality)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.links_ != nullptr);
    _impl_.links_->Clear();
  }
  ::memset(&_impl_.bus_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.numa_node_) -
      reinterpret_cast<char*>(&_impl_.bus_id_)) + sizeof(_impl_.numa_node_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceLocality::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceLocality& this_ = static_cast<const DeviceLocality&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceLocality::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceLocality& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeviceLocality)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 bus_id = 1;
          if (this_._internal_bus_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_bus_id(), target);
          }

          // int32 numa_node = 2;
          if (this_._internal_numa_node() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_numa_node(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.LocalLinks links = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.links_, this_._impl_.links_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeviceLocality)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceLocality::ByteSizeLong(const MessageLite& base) {
          const DeviceLocality& this_ = static_cast<const DeviceLocality&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceLocality::ByteSizeLong() const {
          const DeviceLocality& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DeviceLocality)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tensorflow.LocalLinks links = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.links_);
            }
          }
           {
            // int32 bus_id = 1;
            if (this_._internal_bus_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_bus_id());
            }
            // int32 numa_node = 2;
            if (this_._internal_numa_node() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_numa_node());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceLocality::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceLocality*>(&to_msg);
  auto& from = static_cast<const DeviceLocality&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeviceLocality)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.links_ != nullptr);
    if (_this->_impl_.links_ == nullptr) {
      _this->_impl_.links_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::LocalLinks>(arena, *from._impl_.links_);
    } else {
      _this->_impl_.links_->MergeFrom(*from._impl_.links_);
    }
  }
  if (from._internal_bus_id() != 0) {
    _this->_impl_.bus_id_ = from._impl_.bus_id_;
  }
  if (from._internal_numa_node() != 0) {
    _this->_impl_.numa_node_ = from._impl_.numa_node_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceLocality::CopyFrom(const DeviceLocality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeviceLocality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceLocality::InternalSwap(DeviceLocality* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.numa_node_)
      + sizeof(DeviceLocality::_impl_.numa_node_)
      - PROTOBUF_FIELD_OFFSET(DeviceLocality, _impl_.links_)>(
          reinterpret_cast<char*>(&_impl_.links_),
          reinterpret_cast<char*>(&other->_impl_.links_));
}

::google::protobuf::Metadata DeviceLocality::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceAttributes::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceAttributes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_._has_bits_);
};

DeviceAttributes::DeviceAttributes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeviceAttributes)
}
inline PROTOBUF_NDEBUG_INLINE DeviceAttributes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DeviceAttributes& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        device_type_(arena, from.device_type_),
        physical_device_desc_(arena, from.physical_device_desc_) {}

DeviceAttributes::DeviceAttributes(
    ::google::protobuf::Arena* arena,
    const DeviceAttributes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceAttributes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.locality_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::DeviceLocality>(
                              arena, *from._impl_.locality_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memory_limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, memory_limit_),
           offsetof(Impl_, xla_global_id_) -
               offsetof(Impl_, memory_limit_) +
               sizeof(Impl_::xla_global_id_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.DeviceAttributes)
}
inline PROTOBUF_NDEBUG_INLINE DeviceAttributes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        device_type_(arena),
        physical_device_desc_(arena) {}

inline void DeviceAttributes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, locality_),
           0,
           offsetof(Impl_, xla_global_id_) -
               offsetof(Impl_, locality_) +
               sizeof(Impl_::xla_global_id_));
}
DeviceAttributes::~DeviceAttributes() {
  // @@protoc_insertion_point(destructor:tensorflow.DeviceAttributes)
  SharedDtor(*this);
}
inline void DeviceAttributes::SharedDtor(MessageLite& self) {
  DeviceAttributes& this_ = static_cast<DeviceAttributes&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.device_type_.Destroy();
  this_._impl_.physical_device_desc_.Destroy();
  delete this_._impl_.locality_;
  this_._impl_.~Impl_();
}

inline void* DeviceAttributes::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceAttributes(arena);
}
constexpr auto DeviceAttributes::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceAttributes),
                                            alignof(DeviceAttributes));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceAttributes::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceAttributes_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceAttributes::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceAttributes>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceAttributes::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceAttributes>(), &DeviceAttributes::ByteSizeLong,
            &DeviceAttributes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_._cached_size_),
        false,
    },
    &DeviceAttributes::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceAttributes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 71, 2> DeviceAttributes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967044,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DeviceAttributes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 xla_global_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceAttributes, _impl_.xla_global_id_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.xla_global_id_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.name_)}},
    // string device_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.device_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 memory_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceAttributes, _impl_.memory_limit_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.memory_limit_)}},
    // .tensorflow.DeviceLocality locality = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.locality_)}},
    // fixed64 incarnation = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.incarnation_)}},
    // string physical_device_desc = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.physical_device_desc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_type = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.device_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 memory_limit = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.memory_limit_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tensorflow.DeviceLocality locality = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.locality_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // fixed64 incarnation = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.incarnation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed64)},
    // string physical_device_desc = 7;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.physical_device_desc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 xla_global_id = 8;
    {PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.xla_global_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::DeviceLocality>()},
  }}, {{
    "\33\4\13\0\0\0\24\0"
    "tensorflow.DeviceAttributes"
    "name"
    "device_type"
    "physical_device_desc"
  }},
};

PROTOBUF_NOINLINE void DeviceAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeviceAttributes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.device_type_.ClearToEmpty();
  _impl_.physical_device_desc_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.locality_ != nullptr);
    _impl_.locality_->Clear();
  }
  ::memset(&_impl_.memory_limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.xla_global_id_) -
      reinterpret_cast<char*>(&_impl_.memory_limit_)) + sizeof(_impl_.xla_global_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceAttributes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceAttributes& this_ = static_cast<const DeviceAttributes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceAttributes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceAttributes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeviceAttributes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceAttributes.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string device_type = 2;
          if (!this_._internal_device_type().empty()) {
            const std::string& _s = this_._internal_device_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceAttributes.device_type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 memory_limit = 4;
          if (this_._internal_memory_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_memory_limit(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.DeviceLocality locality = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.locality_, this_._impl_.locality_->GetCachedSize(), target,
                stream);
          }

          // fixed64 incarnation = 6;
          if (this_._internal_incarnation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
                6, this_._internal_incarnation(), target);
          }

          // string physical_device_desc = 7;
          if (!this_._internal_physical_device_desc().empty()) {
            const std::string& _s = this_._internal_physical_device_desc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceAttributes.physical_device_desc");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // int64 xla_global_id = 8;
          if (this_._internal_xla_global_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_xla_global_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeviceAttributes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceAttributes::ByteSizeLong(const MessageLite& base) {
          const DeviceAttributes& this_ = static_cast<const DeviceAttributes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceAttributes::ByteSizeLong() const {
          const DeviceAttributes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DeviceAttributes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string device_type = 2;
            if (!this_._internal_device_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_type());
            }
            // string physical_device_desc = 7;
            if (!this_._internal_physical_device_desc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_physical_device_desc());
            }
          }
           {
            // .tensorflow.DeviceLocality locality = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.locality_);
            }
          }
           {
            // int64 memory_limit = 4;
            if (this_._internal_memory_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_memory_limit());
            }
            // fixed64 incarnation = 6;
            if (this_._internal_incarnation() != 0) {
              total_size += 9;
            }
            // int64 xla_global_id = 8;
            if (this_._internal_xla_global_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_xla_global_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceAttributes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceAttributes*>(&to_msg);
  auto& from = static_cast<const DeviceAttributes&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeviceAttributes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_device_type().empty()) {
    _this->_internal_set_device_type(from._internal_device_type());
  }
  if (!from._internal_physical_device_desc().empty()) {
    _this->_internal_set_physical_device_desc(from._internal_physical_device_desc());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.locality_ != nullptr);
    if (_this->_impl_.locality_ == nullptr) {
      _this->_impl_.locality_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::DeviceLocality>(arena, *from._impl_.locality_);
    } else {
      _this->_impl_.locality_->MergeFrom(*from._impl_.locality_);
    }
  }
  if (from._internal_memory_limit() != 0) {
    _this->_impl_.memory_limit_ = from._impl_.memory_limit_;
  }
  if (from._internal_incarnation() != 0) {
    _this->_impl_.incarnation_ = from._impl_.incarnation_;
  }
  if (from._internal_xla_global_id() != 0) {
    _this->_impl_.xla_global_id_ = from._impl_.xla_global_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceAttributes::CopyFrom(const DeviceAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeviceAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceAttributes::InternalSwap(DeviceAttributes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_type_, &other->_impl_.device_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.physical_device_desc_, &other->_impl_.physical_device_desc_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.xla_global_id_)
      + sizeof(DeviceAttributes::_impl_.xla_global_id_)
      - PROTOBUF_FIELD_OFFSET(DeviceAttributes, _impl_.locality_)>(
          reinterpret_cast<char*>(&_impl_.locality_),
          reinterpret_cast<char*>(&other->_impl_.locality_));
}

::google::protobuf::Metadata DeviceAttributes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
