// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/tensor_description.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/tensor_description.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr TensorDescription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{nullptr},
        allocation_description_{nullptr},
        dtype_{static_cast< ::tensorflow::DataType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TensorDescription::TensorDescription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorDescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorDescriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorDescriptionDefaultTypeInternal() {}
  union {
    TensorDescription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorDescriptionDefaultTypeInternal _TensorDescription_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorDescription, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorDescription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorDescription, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorDescription, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorDescription, _impl_.allocation_description_),
        ~0u,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::tensorflow::TensorDescription)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_TensorDescription_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n2tensorflow/core/framework/tensor_descr"
    "iption.proto\022\ntensorflow\0326tensorflow/cor"
    "e/framework/allocation_description.proto"
    "\032,tensorflow/core/framework/tensor_shape"
    ".proto\032%tensorflow/core/framework/types."
    "proto\"\250\001\n\021TensorDescription\022#\n\005dtype\030\001 \001"
    "(\0162\024.tensorflow.DataType\022+\n\005shape\030\002 \001(\0132"
    "\034.tensorflow.TensorShapeProto\022A\n\026allocat"
    "ion_description\030\004 \001(\0132!.tensorflow.Alloc"
    "ationDescriptionB\223\001\n\030org.tensorflow.fram"
    "eworkB\027TensorDescriptionProtosP\001ZYgithub"
    ".com/tensorflow/tensorflow/tensorflow/go"
    "/core/framework/tensor_description_go_pr"
    "oto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto_deps[3] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto = {
    false,
    false,
    534,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto,
    "tensorflow/core/framework/tensor_description.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto,
};
namespace tensorflow {
// ===================================================================

class TensorDescription::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TensorDescription>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_._has_bits_);
};

void TensorDescription::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ != nullptr) _impl_.shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TensorDescription::clear_allocation_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allocation_description_ != nullptr) _impl_.allocation_description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TensorDescription::TensorDescription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TensorDescription)
}
inline PROTOBUF_NDEBUG_INLINE TensorDescription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::TensorDescription& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TensorDescription::TensorDescription(
    ::google::protobuf::Arena* arena,
    const TensorDescription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorDescription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(
                              arena, *from._impl_.shape_)
                        : nullptr;
  _impl_.allocation_description_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::AllocationDescription>(
                              arena, *from._impl_.allocation_description_)
                        : nullptr;
  _impl_.dtype_ = from._impl_.dtype_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.TensorDescription)
}
inline PROTOBUF_NDEBUG_INLINE TensorDescription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TensorDescription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, dtype_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::dtype_));
}
TensorDescription::~TensorDescription() {
  // @@protoc_insertion_point(destructor:tensorflow.TensorDescription)
  SharedDtor(*this);
}
inline void TensorDescription::SharedDtor(MessageLite& self) {
  TensorDescription& this_ = static_cast<TensorDescription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  delete this_._impl_.allocation_description_;
  this_._impl_.~Impl_();
}

inline void* TensorDescription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TensorDescription(arena);
}
constexpr auto TensorDescription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TensorDescription),
                                            alignof(TensorDescription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TensorDescription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TensorDescription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TensorDescription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TensorDescription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TensorDescription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TensorDescription>(), &TensorDescription::ByteSizeLong,
            &TensorDescription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_._cached_size_),
        false,
    },
    &TensorDescription::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TensorDescription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> TensorDescription::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::TensorDescription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.AllocationDescription allocation_description = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.allocation_description_)}},
    // .tensorflow.DataType dtype = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TensorDescription, _impl_.dtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.dtype_)}},
    // .tensorflow.TensorShapeProto shape = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.shape_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.DataType dtype = 1;
    {PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.dtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.TensorShapeProto shape = 2;
    {PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.AllocationDescription allocation_description = 4;
    {PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.allocation_description_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::AllocationDescription>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TensorDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TensorDescription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.shape_ != nullptr);
      _impl_.shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.allocation_description_ != nullptr);
      _impl_.allocation_description_->Clear();
    }
  }
  _impl_.dtype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TensorDescription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TensorDescription& this_ = static_cast<const TensorDescription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TensorDescription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TensorDescription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TensorDescription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tensorflow.DataType dtype = 1;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_dtype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorShapeProto shape = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.AllocationDescription allocation_description = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.allocation_description_, this_._impl_.allocation_description_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TensorDescription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TensorDescription::ByteSizeLong(const MessageLite& base) {
          const TensorDescription& this_ = static_cast<const TensorDescription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TensorDescription::ByteSizeLong() const {
          const TensorDescription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.TensorDescription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.TensorShapeProto shape = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
            }
            // .tensorflow.AllocationDescription allocation_description = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.allocation_description_);
            }
          }
           {
            // .tensorflow.DataType dtype = 1;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TensorDescription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorDescription*>(&to_msg);
  auto& from = static_cast<const TensorDescription&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TensorDescription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.allocation_description_ != nullptr);
      if (_this->_impl_.allocation_description_ == nullptr) {
        _this->_impl_.allocation_description_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::AllocationDescription>(arena, *from._impl_.allocation_description_);
      } else {
        _this->_impl_.allocation_description_->MergeFrom(*from._impl_.allocation_description_);
      }
    }
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TensorDescription::CopyFrom(const TensorDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TensorDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorDescription::InternalSwap(TensorDescription* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.dtype_)
      + sizeof(TensorDescription::_impl_.dtype_)
      - PROTOBUF_FIELD_OFFSET(TensorDescription, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::google::protobuf::Metadata TensorDescription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
