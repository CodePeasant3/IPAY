// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/cpp_shape_inference.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/cpp_shape_inference.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
namespace core {

inline constexpr CppShapeInferenceInputsNeeded::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input_tensors_needed_{},
        _input_tensors_needed_cached_byte_size_{0},
        input_tensors_as_shapes_needed_{},
        _input_tensors_as_shapes_needed_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CppShapeInferenceInputsNeeded::CppShapeInferenceInputsNeeded(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CppShapeInferenceInputsNeededDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CppShapeInferenceInputsNeededDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CppShapeInferenceInputsNeededDefaultTypeInternal() {}
  union {
    CppShapeInferenceInputsNeeded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CppShapeInferenceInputsNeededDefaultTypeInternal _CppShapeInferenceInputsNeeded_default_instance_;

inline constexpr CppShapeInferenceResult_HandleShapeAndType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{nullptr},
        type_{nullptr},
        dtype_{static_cast< ::tensorflow::DataType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CppShapeInferenceResult_HandleShapeAndType::CppShapeInferenceResult_HandleShapeAndType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CppShapeInferenceResult_HandleShapeAndTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CppShapeInferenceResult_HandleShapeAndTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CppShapeInferenceResult_HandleShapeAndTypeDefaultTypeInternal() {}
  union {
    CppShapeInferenceResult_HandleShapeAndType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CppShapeInferenceResult_HandleShapeAndTypeDefaultTypeInternal _CppShapeInferenceResult_HandleShapeAndType_default_instance_;

inline constexpr CppShapeInferenceResult_HandleData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_and_type_{},
        is_set_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CppShapeInferenceResult_HandleData::CppShapeInferenceResult_HandleData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CppShapeInferenceResult_HandleDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CppShapeInferenceResult_HandleDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CppShapeInferenceResult_HandleDataDefaultTypeInternal() {}
  union {
    CppShapeInferenceResult_HandleData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CppShapeInferenceResult_HandleDataDefaultTypeInternal _CppShapeInferenceResult_HandleData_default_instance_;

inline constexpr CppShapeInferenceResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{nullptr},
        handle_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CppShapeInferenceResult::CppShapeInferenceResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CppShapeInferenceResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CppShapeInferenceResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CppShapeInferenceResultDefaultTypeInternal() {}
  union {
    CppShapeInferenceResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CppShapeInferenceResultDefaultTypeInternal _CppShapeInferenceResult_default_instance_;
}  // namespace core
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType, _impl_.type_),
        0,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleData, _impl_.is_set_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult_HandleData, _impl_.shape_and_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceResult, _impl_.handle_data_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceInputsNeeded, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceInputsNeeded, _impl_.input_tensors_needed_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::core::CppShapeInferenceInputsNeeded, _impl_.input_tensors_as_shapes_needed_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType)},
        {14, -1, -1, sizeof(::tensorflow::core::CppShapeInferenceResult_HandleData)},
        {24, 34, -1, sizeof(::tensorflow::core::CppShapeInferenceResult)},
        {36, -1, -1, sizeof(::tensorflow::core::CppShapeInferenceInputsNeeded)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::core::_CppShapeInferenceResult_HandleShapeAndType_default_instance_._instance,
    &::tensorflow::core::_CppShapeInferenceResult_HandleData_default_instance_._instance,
    &::tensorflow::core::_CppShapeInferenceResult_default_instance_._instance,
    &::tensorflow::core::_CppShapeInferenceInputsNeeded_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n3tensorflow/core/framework/cpp_shape_in"
    "ference.proto\022\017tensorflow.core\032)tensorfl"
    "ow/core/framework/full_type.proto\032,tenso"
    "rflow/core/framework/tensor_shape.proto\032"
    "%tensorflow/core/framework/types.proto\"\245"
    "\003\n\027CppShapeInferenceResult\022+\n\005shape\030\001 \001("
    "\0132\034.tensorflow.TensorShapeProto\022H\n\013handl"
    "e_data\030\004 \001(\01323.tensorflow.core.CppShapeI"
    "nferenceResult.HandleData\032\223\001\n\022HandleShap"
    "eAndType\022+\n\005shape\030\001 \001(\0132\034.tensorflow.Ten"
    "sorShapeProto\022#\n\005dtype\030\002 \001(\0162\024.tensorflo"
    "w.DataType\022%\n\004type\030\004 \001(\0132\027.tensorflow.Fu"
    "llTypeDefJ\004\010\003\020\004\032q\n\nHandleData\022\016\n\006is_set\030"
    "\001 \001(\010\022S\n\016shape_and_type\030\002 \003(\0132;.tensorfl"
    "ow.core.CppShapeInferenceResult.HandleSh"
    "apeAndTypeJ\004\010\002\020\003J\004\010\003\020\004\"e\n\035CppShapeInfere"
    "nceInputsNeeded\022\034\n\024input_tensors_needed\030"
    "\001 \003(\005\022&\n\036input_tensors_as_shapes_needed\030"
    "\002 \003(\005BaZ\\github.com/tensorflow/tensorflo"
    "w/tensorflow/go/python/framework/cpp_sha"
    "pe_inference_go_proto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto_deps[3] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2ffull_5ftype_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto = {
    false,
    false,
    832,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
    "tensorflow/core/framework/cpp_shape_inference.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
};
namespace tensorflow {
namespace core {
// ===================================================================

class CppShapeInferenceResult_HandleShapeAndType::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CppShapeInferenceResult_HandleShapeAndType>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_._has_bits_);
};

void CppShapeInferenceResult_HandleShapeAndType::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ != nullptr) _impl_.shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CppShapeInferenceResult_HandleShapeAndType::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.type_ != nullptr) _impl_.type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CppShapeInferenceResult_HandleShapeAndType::CppShapeInferenceResult_HandleShapeAndType(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceResult_HandleShapeAndType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CppShapeInferenceResult_HandleShapeAndType::CppShapeInferenceResult_HandleShapeAndType(
    ::google::protobuf::Arena* arena,
    const CppShapeInferenceResult_HandleShapeAndType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CppShapeInferenceResult_HandleShapeAndType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(
                              arena, *from._impl_.shape_)
                        : nullptr;
  _impl_.type_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::FullTypeDef>(
                              arena, *from._impl_.type_)
                        : nullptr;
  _impl_.dtype_ = from._impl_.dtype_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceResult_HandleShapeAndType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CppShapeInferenceResult_HandleShapeAndType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, dtype_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::dtype_));
}
CppShapeInferenceResult_HandleShapeAndType::~CppShapeInferenceResult_HandleShapeAndType() {
  // @@protoc_insertion_point(destructor:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
  SharedDtor(*this);
}
inline void CppShapeInferenceResult_HandleShapeAndType::SharedDtor(MessageLite& self) {
  CppShapeInferenceResult_HandleShapeAndType& this_ = static_cast<CppShapeInferenceResult_HandleShapeAndType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  delete this_._impl_.type_;
  this_._impl_.~Impl_();
}

inline void* CppShapeInferenceResult_HandleShapeAndType::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CppShapeInferenceResult_HandleShapeAndType(arena);
}
constexpr auto CppShapeInferenceResult_HandleShapeAndType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CppShapeInferenceResult_HandleShapeAndType),
                                            alignof(CppShapeInferenceResult_HandleShapeAndType));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CppShapeInferenceResult_HandleShapeAndType::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CppShapeInferenceResult_HandleShapeAndType_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CppShapeInferenceResult_HandleShapeAndType::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CppShapeInferenceResult_HandleShapeAndType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CppShapeInferenceResult_HandleShapeAndType::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CppShapeInferenceResult_HandleShapeAndType>(), &CppShapeInferenceResult_HandleShapeAndType::ByteSizeLong,
            &CppShapeInferenceResult_HandleShapeAndType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_._cached_size_),
        false,
    },
    &CppShapeInferenceResult_HandleShapeAndType::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CppShapeInferenceResult_HandleShapeAndType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> CppShapeInferenceResult_HandleShapeAndType::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.FullTypeDef type = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.type_)}},
    // .tensorflow.TensorShapeProto shape = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.shape_)}},
    // .tensorflow.DataType dtype = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CppShapeInferenceResult_HandleShapeAndType, _impl_.dtype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.dtype_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.TensorShapeProto shape = 1;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.DataType dtype = 2;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.dtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.FullTypeDef type = 4;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.type_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::FullTypeDef>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CppShapeInferenceResult_HandleShapeAndType::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.shape_ != nullptr);
      _impl_.shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.type_ != nullptr);
      _impl_.type_->Clear();
    }
  }
  _impl_.dtype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CppShapeInferenceResult_HandleShapeAndType::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CppShapeInferenceResult_HandleShapeAndType& this_ = static_cast<const CppShapeInferenceResult_HandleShapeAndType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CppShapeInferenceResult_HandleShapeAndType::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CppShapeInferenceResult_HandleShapeAndType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorShapeProto shape = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.DataType dtype = 2;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_dtype(), target);
          }

          // .tensorflow.FullTypeDef type = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.type_, this_._impl_.type_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CppShapeInferenceResult_HandleShapeAndType::ByteSizeLong(const MessageLite& base) {
          const CppShapeInferenceResult_HandleShapeAndType& this_ = static_cast<const CppShapeInferenceResult_HandleShapeAndType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CppShapeInferenceResult_HandleShapeAndType::ByteSizeLong() const {
          const CppShapeInferenceResult_HandleShapeAndType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.TensorShapeProto shape = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
            }
            // .tensorflow.FullTypeDef type = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_);
            }
          }
           {
            // .tensorflow.DataType dtype = 2;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CppShapeInferenceResult_HandleShapeAndType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CppShapeInferenceResult_HandleShapeAndType*>(&to_msg);
  auto& from = static_cast<const CppShapeInferenceResult_HandleShapeAndType&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.type_ != nullptr);
      if (_this->_impl_.type_ == nullptr) {
        _this->_impl_.type_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::FullTypeDef>(arena, *from._impl_.type_);
      } else {
        _this->_impl_.type_->MergeFrom(*from._impl_.type_);
      }
    }
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CppShapeInferenceResult_HandleShapeAndType::CopyFrom(const CppShapeInferenceResult_HandleShapeAndType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.core.CppShapeInferenceResult.HandleShapeAndType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CppShapeInferenceResult_HandleShapeAndType::InternalSwap(CppShapeInferenceResult_HandleShapeAndType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.dtype_)
      + sizeof(CppShapeInferenceResult_HandleShapeAndType::_impl_.dtype_)
      - PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleShapeAndType, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::google::protobuf::Metadata CppShapeInferenceResult_HandleShapeAndType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CppShapeInferenceResult_HandleData::_Internal {
 public:
};

CppShapeInferenceResult_HandleData::CppShapeInferenceResult_HandleData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.core.CppShapeInferenceResult.HandleData)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceResult_HandleData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::core::CppShapeInferenceResult_HandleData& from_msg)
      : shape_and_type_{visibility, arena, from.shape_and_type_},
        _cached_size_{0} {}

CppShapeInferenceResult_HandleData::CppShapeInferenceResult_HandleData(
    ::google::protobuf::Arena* arena,
    const CppShapeInferenceResult_HandleData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CppShapeInferenceResult_HandleData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_set_ = from._impl_.is_set_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.core.CppShapeInferenceResult.HandleData)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceResult_HandleData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_and_type_{visibility, arena},
        _cached_size_{0} {}

inline void CppShapeInferenceResult_HandleData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_set_ = {};
}
CppShapeInferenceResult_HandleData::~CppShapeInferenceResult_HandleData() {
  // @@protoc_insertion_point(destructor:tensorflow.core.CppShapeInferenceResult.HandleData)
  SharedDtor(*this);
}
inline void CppShapeInferenceResult_HandleData::SharedDtor(MessageLite& self) {
  CppShapeInferenceResult_HandleData& this_ = static_cast<CppShapeInferenceResult_HandleData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CppShapeInferenceResult_HandleData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CppShapeInferenceResult_HandleData(arena);
}
constexpr auto CppShapeInferenceResult_HandleData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleData, _impl_.shape_and_type_) +
          decltype(CppShapeInferenceResult_HandleData::_impl_.shape_and_type_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CppShapeInferenceResult_HandleData), alignof(CppShapeInferenceResult_HandleData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CppShapeInferenceResult_HandleData::PlacementNew_,
                                 sizeof(CppShapeInferenceResult_HandleData),
                                 alignof(CppShapeInferenceResult_HandleData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CppShapeInferenceResult_HandleData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CppShapeInferenceResult_HandleData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CppShapeInferenceResult_HandleData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CppShapeInferenceResult_HandleData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CppShapeInferenceResult_HandleData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CppShapeInferenceResult_HandleData>(), &CppShapeInferenceResult_HandleData::ByteSizeLong,
            &CppShapeInferenceResult_HandleData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleData, _impl_._cached_size_),
        false,
    },
    &CppShapeInferenceResult_HandleData::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CppShapeInferenceResult_HandleData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CppShapeInferenceResult_HandleData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::core::CppShapeInferenceResult_HandleData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleData, _impl_.shape_and_type_)}},
    // bool is_set = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CppShapeInferenceResult_HandleData, _impl_.is_set_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleData, _impl_.is_set_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_set = 1;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleData, _impl_.is_set_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult_HandleData, _impl_.shape_and_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::core::CppShapeInferenceResult_HandleShapeAndType>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CppShapeInferenceResult_HandleData::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.core.CppShapeInferenceResult.HandleData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_and_type_.Clear();
  _impl_.is_set_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CppShapeInferenceResult_HandleData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CppShapeInferenceResult_HandleData& this_ = static_cast<const CppShapeInferenceResult_HandleData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CppShapeInferenceResult_HandleData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CppShapeInferenceResult_HandleData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.core.CppShapeInferenceResult.HandleData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_set = 1;
          if (this_._internal_is_set() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_set(), target);
          }

          // repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_shape_and_type_size());
               i < n; i++) {
            const auto& repfield = this_._internal_shape_and_type().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.core.CppShapeInferenceResult.HandleData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CppShapeInferenceResult_HandleData::ByteSizeLong(const MessageLite& base) {
          const CppShapeInferenceResult_HandleData& this_ = static_cast<const CppShapeInferenceResult_HandleData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CppShapeInferenceResult_HandleData::ByteSizeLong() const {
          const CppShapeInferenceResult_HandleData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.core.CppShapeInferenceResult.HandleData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.core.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;
            {
              total_size += 1UL * this_._internal_shape_and_type_size();
              for (const auto& msg : this_._internal_shape_and_type()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bool is_set = 1;
            if (this_._internal_is_set() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CppShapeInferenceResult_HandleData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CppShapeInferenceResult_HandleData*>(&to_msg);
  auto& from = static_cast<const CppShapeInferenceResult_HandleData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.core.CppShapeInferenceResult.HandleData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape_and_type()->MergeFrom(
      from._internal_shape_and_type());
  if (from._internal_is_set() != 0) {
    _this->_impl_.is_set_ = from._impl_.is_set_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CppShapeInferenceResult_HandleData::CopyFrom(const CppShapeInferenceResult_HandleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.core.CppShapeInferenceResult.HandleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CppShapeInferenceResult_HandleData::InternalSwap(CppShapeInferenceResult_HandleData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_and_type_.InternalSwap(&other->_impl_.shape_and_type_);
        swap(_impl_.is_set_, other->_impl_.is_set_);
}

::google::protobuf::Metadata CppShapeInferenceResult_HandleData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CppShapeInferenceResult::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CppShapeInferenceResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_._has_bits_);
};

void CppShapeInferenceResult::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ != nullptr) _impl_.shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CppShapeInferenceResult::CppShapeInferenceResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.core.CppShapeInferenceResult)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::core::CppShapeInferenceResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CppShapeInferenceResult::CppShapeInferenceResult(
    ::google::protobuf::Arena* arena,
    const CppShapeInferenceResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CppShapeInferenceResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(
                              arena, *from._impl_.shape_)
                        : nullptr;
  _impl_.handle_data_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::core::CppShapeInferenceResult_HandleData>(
                              arena, *from._impl_.handle_data_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.core.CppShapeInferenceResult)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CppShapeInferenceResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, handle_data_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::handle_data_));
}
CppShapeInferenceResult::~CppShapeInferenceResult() {
  // @@protoc_insertion_point(destructor:tensorflow.core.CppShapeInferenceResult)
  SharedDtor(*this);
}
inline void CppShapeInferenceResult::SharedDtor(MessageLite& self) {
  CppShapeInferenceResult& this_ = static_cast<CppShapeInferenceResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  delete this_._impl_.handle_data_;
  this_._impl_.~Impl_();
}

inline void* CppShapeInferenceResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CppShapeInferenceResult(arena);
}
constexpr auto CppShapeInferenceResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CppShapeInferenceResult),
                                            alignof(CppShapeInferenceResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CppShapeInferenceResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CppShapeInferenceResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CppShapeInferenceResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CppShapeInferenceResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CppShapeInferenceResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CppShapeInferenceResult>(), &CppShapeInferenceResult::ByteSizeLong,
            &CppShapeInferenceResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_._cached_size_),
        false,
    },
    &CppShapeInferenceResult::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CppShapeInferenceResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> CppShapeInferenceResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967286,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::core::CppShapeInferenceResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_.handle_data_)}},
    // .tensorflow.TensorShapeProto shape = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_.shape_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.TensorShapeProto shape = 1;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_.handle_data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::core::CppShapeInferenceResult_HandleData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CppShapeInferenceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.core.CppShapeInferenceResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.shape_ != nullptr);
      _impl_.shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.handle_data_ != nullptr);
      _impl_.handle_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CppShapeInferenceResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CppShapeInferenceResult& this_ = static_cast<const CppShapeInferenceResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CppShapeInferenceResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CppShapeInferenceResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.core.CppShapeInferenceResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorShapeProto shape = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.handle_data_, this_._impl_.handle_data_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.core.CppShapeInferenceResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CppShapeInferenceResult::ByteSizeLong(const MessageLite& base) {
          const CppShapeInferenceResult& this_ = static_cast<const CppShapeInferenceResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CppShapeInferenceResult::ByteSizeLong() const {
          const CppShapeInferenceResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.core.CppShapeInferenceResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.TensorShapeProto shape = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
            }
            // .tensorflow.core.CppShapeInferenceResult.HandleData handle_data = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.handle_data_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CppShapeInferenceResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CppShapeInferenceResult*>(&to_msg);
  auto& from = static_cast<const CppShapeInferenceResult&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.core.CppShapeInferenceResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.handle_data_ != nullptr);
      if (_this->_impl_.handle_data_ == nullptr) {
        _this->_impl_.handle_data_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::core::CppShapeInferenceResult_HandleData>(arena, *from._impl_.handle_data_);
      } else {
        _this->_impl_.handle_data_->MergeFrom(*from._impl_.handle_data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CppShapeInferenceResult::CopyFrom(const CppShapeInferenceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.core.CppShapeInferenceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CppShapeInferenceResult::InternalSwap(CppShapeInferenceResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_.handle_data_)
      + sizeof(CppShapeInferenceResult::_impl_.handle_data_)
      - PROTOBUF_FIELD_OFFSET(CppShapeInferenceResult, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::google::protobuf::Metadata CppShapeInferenceResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CppShapeInferenceInputsNeeded::_Internal {
 public:
};

CppShapeInferenceInputsNeeded::CppShapeInferenceInputsNeeded(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.core.CppShapeInferenceInputsNeeded)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceInputsNeeded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::core::CppShapeInferenceInputsNeeded& from_msg)
      : input_tensors_needed_{visibility, arena, from.input_tensors_needed_},
        _input_tensors_needed_cached_byte_size_{0},
        input_tensors_as_shapes_needed_{visibility, arena, from.input_tensors_as_shapes_needed_},
        _input_tensors_as_shapes_needed_cached_byte_size_{0},
        _cached_size_{0} {}

CppShapeInferenceInputsNeeded::CppShapeInferenceInputsNeeded(
    ::google::protobuf::Arena* arena,
    const CppShapeInferenceInputsNeeded& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CppShapeInferenceInputsNeeded* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.core.CppShapeInferenceInputsNeeded)
}
inline PROTOBUF_NDEBUG_INLINE CppShapeInferenceInputsNeeded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input_tensors_needed_{visibility, arena},
        _input_tensors_needed_cached_byte_size_{0},
        input_tensors_as_shapes_needed_{visibility, arena},
        _input_tensors_as_shapes_needed_cached_byte_size_{0},
        _cached_size_{0} {}

inline void CppShapeInferenceInputsNeeded::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CppShapeInferenceInputsNeeded::~CppShapeInferenceInputsNeeded() {
  // @@protoc_insertion_point(destructor:tensorflow.core.CppShapeInferenceInputsNeeded)
  SharedDtor(*this);
}
inline void CppShapeInferenceInputsNeeded::SharedDtor(MessageLite& self) {
  CppShapeInferenceInputsNeeded& this_ = static_cast<CppShapeInferenceInputsNeeded&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CppShapeInferenceInputsNeeded::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CppShapeInferenceInputsNeeded(arena);
}
constexpr auto CppShapeInferenceInputsNeeded::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_.input_tensors_needed_) +
          decltype(CppShapeInferenceInputsNeeded::_impl_.input_tensors_needed_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_.input_tensors_as_shapes_needed_) +
          decltype(CppShapeInferenceInputsNeeded::_impl_.input_tensors_as_shapes_needed_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CppShapeInferenceInputsNeeded), alignof(CppShapeInferenceInputsNeeded), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CppShapeInferenceInputsNeeded::PlacementNew_,
                                 sizeof(CppShapeInferenceInputsNeeded),
                                 alignof(CppShapeInferenceInputsNeeded));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CppShapeInferenceInputsNeeded::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CppShapeInferenceInputsNeeded_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CppShapeInferenceInputsNeeded::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CppShapeInferenceInputsNeeded>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CppShapeInferenceInputsNeeded::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CppShapeInferenceInputsNeeded>(), &CppShapeInferenceInputsNeeded::ByteSizeLong,
            &CppShapeInferenceInputsNeeded::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_._cached_size_),
        false,
    },
    &CppShapeInferenceInputsNeeded::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CppShapeInferenceInputsNeeded::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CppShapeInferenceInputsNeeded::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::core::CppShapeInferenceInputsNeeded>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 input_tensors_as_shapes_needed = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_.input_tensors_as_shapes_needed_)}},
    // repeated int32 input_tensors_needed = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_.input_tensors_needed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 input_tensors_needed = 1;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_.input_tensors_needed_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 input_tensors_as_shapes_needed = 2;
    {PROTOBUF_FIELD_OFFSET(CppShapeInferenceInputsNeeded, _impl_.input_tensors_as_shapes_needed_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CppShapeInferenceInputsNeeded::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.core.CppShapeInferenceInputsNeeded)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_tensors_needed_.Clear();
  _impl_.input_tensors_as_shapes_needed_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CppShapeInferenceInputsNeeded::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CppShapeInferenceInputsNeeded& this_ = static_cast<const CppShapeInferenceInputsNeeded&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CppShapeInferenceInputsNeeded::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CppShapeInferenceInputsNeeded& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.core.CppShapeInferenceInputsNeeded)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 input_tensors_needed = 1;
          {
            int byte_size = this_._impl_._input_tensors_needed_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  1, this_._internal_input_tensors_needed(), byte_size, target);
            }
          }

          // repeated int32 input_tensors_as_shapes_needed = 2;
          {
            int byte_size = this_._impl_._input_tensors_as_shapes_needed_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  2, this_._internal_input_tensors_as_shapes_needed(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.core.CppShapeInferenceInputsNeeded)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CppShapeInferenceInputsNeeded::ByteSizeLong(const MessageLite& base) {
          const CppShapeInferenceInputsNeeded& this_ = static_cast<const CppShapeInferenceInputsNeeded&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CppShapeInferenceInputsNeeded::ByteSizeLong() const {
          const CppShapeInferenceInputsNeeded& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.core.CppShapeInferenceInputsNeeded)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 input_tensors_needed = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_input_tensors_needed(), 1,
                      this_._impl_._input_tensors_needed_cached_byte_size_);
            }
            // repeated int32 input_tensors_as_shapes_needed = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_input_tensors_as_shapes_needed(), 1,
                      this_._impl_._input_tensors_as_shapes_needed_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CppShapeInferenceInputsNeeded::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CppShapeInferenceInputsNeeded*>(&to_msg);
  auto& from = static_cast<const CppShapeInferenceInputsNeeded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.core.CppShapeInferenceInputsNeeded)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_tensors_needed()->MergeFrom(from._internal_input_tensors_needed());
  _this->_internal_mutable_input_tensors_as_shapes_needed()->MergeFrom(from._internal_input_tensors_as_shapes_needed());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CppShapeInferenceInputsNeeded::CopyFrom(const CppShapeInferenceInputsNeeded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.core.CppShapeInferenceInputsNeeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CppShapeInferenceInputsNeeded::InternalSwap(CppShapeInferenceInputsNeeded* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.input_tensors_needed_.InternalSwap(&other->_impl_.input_tensors_needed_);
  _impl_.input_tensors_as_shapes_needed_.InternalSwap(&other->_impl_.input_tensors_as_shapes_needed_);
}

::google::protobuf::Metadata CppShapeInferenceInputsNeeded::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fcpp_5fshape_5finference_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
