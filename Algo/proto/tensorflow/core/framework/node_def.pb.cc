// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/node_def.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/node_def.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr NodeDef_ExperimentalDebugInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : original_node_names_{},
        original_func_names_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeDef_ExperimentalDebugInfo::NodeDef_ExperimentalDebugInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDef_ExperimentalDebugInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDef_ExperimentalDebugInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDef_ExperimentalDebugInfoDefaultTypeInternal() {}
  union {
    NodeDef_ExperimentalDebugInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDef_ExperimentalDebugInfoDefaultTypeInternal _NodeDef_ExperimentalDebugInfo_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NodeDef_AttrEntry_DoNotUse::NodeDef_AttrEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NodeDef_AttrEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NodeDef_AttrEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NodeDef_AttrEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDef_AttrEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDef_AttrEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NodeDef_AttrEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDef_AttrEntry_DoNotUseDefaultTypeInternal _NodeDef_AttrEntry_DoNotUse_default_instance_;

inline constexpr NodeDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_{},
        attr_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        experimental_debug_info_{nullptr},
        experimental_type_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeDef::NodeDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefDefaultTypeInternal() {}
  union {
    NodeDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefDefaultTypeInternal _NodeDef_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_AttrEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_AttrEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_AttrEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_AttrEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_ExperimentalDebugInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_ExperimentalDebugInfo, _impl_.original_node_names_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef_ExperimentalDebugInfo, _impl_.original_func_names_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.op_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.input_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.device_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.attr_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.experimental_debug_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NodeDef, _impl_.experimental_type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::tensorflow::NodeDef_AttrEntry_DoNotUse)},
        {12, -1, -1, sizeof(::tensorflow::NodeDef_ExperimentalDebugInfo)},
        {22, 37, -1, sizeof(::tensorflow::NodeDef)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_NodeDef_AttrEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_NodeDef_ExperimentalDebugInfo_default_instance_._instance,
    &::tensorflow::_NodeDef_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(tensorflow/core/framework/node_def.pro"
    "to\022\ntensorflow\032*tensorflow/core/framewor"
    "k/attr_value.proto\032)tensorflow/core/fram"
    "ework/full_type.proto\"\206\003\n\007NodeDef\022\014\n\004nam"
    "e\030\001 \001(\t\022\n\n\002op\030\002 \001(\t\022\r\n\005input\030\003 \003(\t\022\016\n\006de"
    "vice\030\004 \001(\t\022+\n\004attr\030\005 \003(\0132\035.tensorflow.No"
    "deDef.AttrEntry\022J\n\027experimental_debug_in"
    "fo\030\006 \001(\0132).tensorflow.NodeDef.Experiment"
    "alDebugInfo\0222\n\021experimental_type\030\007 \001(\0132\027"
    ".tensorflow.FullTypeDef\032B\n\tAttrEntry\022\013\n\003"
    "key\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025.tensorflow.At"
    "trValue:\0028\001\032Q\n\025ExperimentalDebugInfo\022\033\n\023"
    "original_node_names\030\001 \003(\t\022\033\n\023original_fu"
    "nc_names\030\002 \003(\tB{\n\030org.tensorflow.framewo"
    "rkB\tNodeProtoP\001ZOgithub.com/tensorflow/t"
    "ensorflow/tensorflow/go/core/framework/n"
    "ode_def_go_proto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto_deps[2] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ffull_5ftype_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto = {
    false,
    false,
    667,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
    "tensorflow/core/framework/node_def.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
};
namespace tensorflow {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NodeDef_AttrEntry_DoNotUse::NodeDef_AttrEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NodeDef_AttrEntry_DoNotUse::NodeDef_AttrEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NodeDef_AttrEntry_DoNotUse::NodeDef_AttrEntry_DoNotUse() : SuperType() {}
              NodeDef_AttrEntry_DoNotUse::NodeDef_AttrEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NodeDef_AttrEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NodeDef_AttrEntry_DoNotUse(arena);
              }
              constexpr auto NodeDef_AttrEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NodeDef_AttrEntry_DoNotUse),
                                                          alignof(NodeDef_AttrEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NodeDef_AttrEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NodeDef_AttrEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NodeDef_AttrEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NodeDef_AttrEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NodeDef_AttrEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NodeDef_AttrEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NodeDef_AttrEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NodeDef_AttrEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NodeDef_AttrEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 40, 2> NodeDef_AttrEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeDef_AttrEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::NodeDef_AttrEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.AttrValue value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NodeDef_AttrEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef_AttrEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NodeDef_AttrEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.AttrValue value = 2;
    {PROTOBUF_FIELD_OFFSET(NodeDef_AttrEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::AttrValue>()},
  }}, {{
    "\34\3\0\0\0\0\0\0"
    "tensorflow.NodeDef.AttrEntry"
    "key"
  }},
};

// ===================================================================

class NodeDef_ExperimentalDebugInfo::_Internal {
 public:
};

NodeDef_ExperimentalDebugInfo::NodeDef_ExperimentalDebugInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.NodeDef.ExperimentalDebugInfo)
}
inline PROTOBUF_NDEBUG_INLINE NodeDef_ExperimentalDebugInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::NodeDef_ExperimentalDebugInfo& from_msg)
      : original_node_names_{visibility, arena, from.original_node_names_},
        original_func_names_{visibility, arena, from.original_func_names_},
        _cached_size_{0} {}

NodeDef_ExperimentalDebugInfo::NodeDef_ExperimentalDebugInfo(
    ::google::protobuf::Arena* arena,
    const NodeDef_ExperimentalDebugInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeDef_ExperimentalDebugInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.NodeDef.ExperimentalDebugInfo)
}
inline PROTOBUF_NDEBUG_INLINE NodeDef_ExperimentalDebugInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : original_node_names_{visibility, arena},
        original_func_names_{visibility, arena},
        _cached_size_{0} {}

inline void NodeDef_ExperimentalDebugInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeDef_ExperimentalDebugInfo::~NodeDef_ExperimentalDebugInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.NodeDef.ExperimentalDebugInfo)
  SharedDtor(*this);
}
inline void NodeDef_ExperimentalDebugInfo::SharedDtor(MessageLite& self) {
  NodeDef_ExperimentalDebugInfo& this_ = static_cast<NodeDef_ExperimentalDebugInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NodeDef_ExperimentalDebugInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeDef_ExperimentalDebugInfo(arena);
}
constexpr auto NodeDef_ExperimentalDebugInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_.original_node_names_) +
          decltype(NodeDef_ExperimentalDebugInfo::_impl_.original_node_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_.original_func_names_) +
          decltype(NodeDef_ExperimentalDebugInfo::_impl_.original_func_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NodeDef_ExperimentalDebugInfo), alignof(NodeDef_ExperimentalDebugInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeDef_ExperimentalDebugInfo::PlacementNew_,
                                 sizeof(NodeDef_ExperimentalDebugInfo),
                                 alignof(NodeDef_ExperimentalDebugInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeDef_ExperimentalDebugInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeDef_ExperimentalDebugInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeDef_ExperimentalDebugInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeDef_ExperimentalDebugInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeDef_ExperimentalDebugInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeDef_ExperimentalDebugInfo>(), &NodeDef_ExperimentalDebugInfo::ByteSizeLong,
            &NodeDef_ExperimentalDebugInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_._cached_size_),
        false,
    },
    &NodeDef_ExperimentalDebugInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeDef_ExperimentalDebugInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 87, 2> NodeDef_ExperimentalDebugInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::NodeDef_ExperimentalDebugInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string original_func_names = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_.original_func_names_)}},
    // repeated string original_node_names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_.original_node_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string original_node_names = 1;
    {PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_.original_node_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string original_func_names = 2;
    {PROTOBUF_FIELD_OFFSET(NodeDef_ExperimentalDebugInfo, _impl_.original_func_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\50\23\23\0\0\0\0\0"
    "tensorflow.NodeDef.ExperimentalDebugInfo"
    "original_node_names"
    "original_func_names"
  }},
};

PROTOBUF_NOINLINE void NodeDef_ExperimentalDebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.NodeDef.ExperimentalDebugInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.original_node_names_.Clear();
  _impl_.original_func_names_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeDef_ExperimentalDebugInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeDef_ExperimentalDebugInfo& this_ = static_cast<const NodeDef_ExperimentalDebugInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeDef_ExperimentalDebugInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeDef_ExperimentalDebugInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.NodeDef.ExperimentalDebugInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string original_node_names = 1;
          for (int i = 0, n = this_._internal_original_node_names_size(); i < n; ++i) {
            const auto& s = this_._internal_original_node_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.ExperimentalDebugInfo.original_node_names");
            target = stream->WriteString(1, s, target);
          }

          // repeated string original_func_names = 2;
          for (int i = 0, n = this_._internal_original_func_names_size(); i < n; ++i) {
            const auto& s = this_._internal_original_func_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.ExperimentalDebugInfo.original_func_names");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.NodeDef.ExperimentalDebugInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeDef_ExperimentalDebugInfo::ByteSizeLong(const MessageLite& base) {
          const NodeDef_ExperimentalDebugInfo& this_ = static_cast<const NodeDef_ExperimentalDebugInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeDef_ExperimentalDebugInfo::ByteSizeLong() const {
          const NodeDef_ExperimentalDebugInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.NodeDef.ExperimentalDebugInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string original_node_names = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_original_node_names().size());
              for (int i = 0, n = this_._internal_original_node_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_original_node_names().Get(i));
              }
            }
            // repeated string original_func_names = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_original_func_names().size());
              for (int i = 0, n = this_._internal_original_func_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_original_func_names().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeDef_ExperimentalDebugInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeDef_ExperimentalDebugInfo*>(&to_msg);
  auto& from = static_cast<const NodeDef_ExperimentalDebugInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.NodeDef.ExperimentalDebugInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_original_node_names()->MergeFrom(from._internal_original_node_names());
  _this->_internal_mutable_original_func_names()->MergeFrom(from._internal_original_func_names());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeDef_ExperimentalDebugInfo::CopyFrom(const NodeDef_ExperimentalDebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.NodeDef.ExperimentalDebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeDef_ExperimentalDebugInfo::InternalSwap(NodeDef_ExperimentalDebugInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.original_node_names_.InternalSwap(&other->_impl_.original_node_names_);
  _impl_.original_func_names_.InternalSwap(&other->_impl_.original_func_names_);
}

::google::protobuf::Metadata NodeDef_ExperimentalDebugInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeDef, _impl_._has_bits_);
};

void NodeDef::clear_attr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attr_.Clear();
}
void NodeDef::clear_experimental_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.experimental_type_ != nullptr) _impl_.experimental_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
NodeDef::NodeDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.NodeDef)
}
inline PROTOBUF_NDEBUG_INLINE NodeDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::NodeDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_{visibility, arena, from.input_},
        attr_{visibility, arena, from.attr_},
        name_(arena, from.name_),
        op_(arena, from.op_),
        device_(arena, from.device_) {}

NodeDef::NodeDef(
    ::google::protobuf::Arena* arena,
    const NodeDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.experimental_debug_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::NodeDef_ExperimentalDebugInfo>(
                              arena, *from._impl_.experimental_debug_info_)
                        : nullptr;
  _impl_.experimental_type_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::FullTypeDef>(
                              arena, *from._impl_.experimental_type_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.NodeDef)
}
inline PROTOBUF_NDEBUG_INLINE NodeDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_{visibility, arena},
        attr_{visibility, arena},
        name_(arena),
        op_(arena),
        device_(arena) {}

inline void NodeDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, experimental_debug_info_),
           0,
           offsetof(Impl_, experimental_type_) -
               offsetof(Impl_, experimental_debug_info_) +
               sizeof(Impl_::experimental_type_));
}
NodeDef::~NodeDef() {
  // @@protoc_insertion_point(destructor:tensorflow.NodeDef)
  SharedDtor(*this);
}
inline void NodeDef::SharedDtor(MessageLite& self) {
  NodeDef& this_ = static_cast<NodeDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.op_.Destroy();
  this_._impl_.device_.Destroy();
  delete this_._impl_.experimental_debug_info_;
  delete this_._impl_.experimental_type_;
  this_._impl_.~Impl_();
}

inline void* NodeDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeDef(arena);
}
constexpr auto NodeDef::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.input_) +
          decltype(NodeDef::_impl_.input_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.attr_) +
          decltype(NodeDef::_impl_.attr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.attr_) +
          decltype(NodeDef::_impl_.attr_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NodeDef), alignof(NodeDef), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeDef::PlacementNew_,
                                 sizeof(NodeDef),
                                 alignof(NodeDef));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeDef>(), &NodeDef::ByteSizeLong,
            &NodeDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeDef, _impl_._cached_size_),
        false,
    },
    &NodeDef::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 48, 2> NodeDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeDef, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::NodeDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.name_)}},
    // string op = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.op_)}},
    // repeated string input = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.input_)}},
    // string device = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.device_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tensorflow.NodeDef.ExperimentalDebugInfo experimental_debug_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.experimental_debug_info_)}},
    // .tensorflow.FullTypeDef experimental_type = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.experimental_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op = 2;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.op_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string input = 3;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.input_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string device = 4;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.device_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .tensorflow.AttrValue> attr = 5;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.attr_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .tensorflow.NodeDef.ExperimentalDebugInfo experimental_debug_info = 6;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.experimental_debug_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.FullTypeDef experimental_type = 7;
    {PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.experimental_type_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::NodeDef_ExperimentalDebugInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::FullTypeDef>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NodeDef()._impl_.attr_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::tensorflow::AttrValue>()},
  }}, {{
    "\22\4\2\5\6\4\0\0"
    "tensorflow.NodeDef"
    "name"
    "op"
    "input"
    "device"
    "attr"
  }},
};

PROTOBUF_NOINLINE void NodeDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.NodeDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_.Clear();
  _impl_.attr_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.op_.ClearToEmpty();
  _impl_.device_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.experimental_debug_info_ != nullptr);
      _impl_.experimental_debug_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.experimental_type_ != nullptr);
      _impl_.experimental_type_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeDef& this_ = static_cast<const NodeDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.NodeDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string op = 2;
          if (!this_._internal_op().empty()) {
            const std::string& _s = this_._internal_op();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.op");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string input = 3;
          for (int i = 0, n = this_._internal_input_size(); i < n; ++i) {
            const auto& s = this_._internal_input().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.input");
            target = stream->WriteString(3, s, target);
          }

          // string device = 4;
          if (!this_._internal_device().empty()) {
            const std::string& _s = this_._internal_device();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.device");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // map<string, .tensorflow.AttrValue> attr = 5;
          if (!this_._internal_attr().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::tensorflow::AttrValue,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_attr();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.attr");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NodeDef.attr");
              }
            }
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.NodeDef.ExperimentalDebugInfo experimental_debug_info = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.experimental_debug_info_, this_._impl_.experimental_debug_info_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.FullTypeDef experimental_type = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.experimental_type_, this_._impl_.experimental_type_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.NodeDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeDef::ByteSizeLong(const MessageLite& base) {
          const NodeDef& this_ = static_cast<const NodeDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeDef::ByteSizeLong() const {
          const NodeDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.NodeDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string input = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_input().size());
              for (int i = 0, n = this_._internal_input().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input().Get(i));
              }
            }
            // map<string, .tensorflow.AttrValue> attr = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_attr_size());
              for (const auto& entry : this_._internal_attr()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::tensorflow::AttrValue,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string op = 2;
            if (!this_._internal_op().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_op());
            }
            // string device = 4;
            if (!this_._internal_device().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.NodeDef.ExperimentalDebugInfo experimental_debug_info = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.experimental_debug_info_);
            }
            // .tensorflow.FullTypeDef experimental_type = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.experimental_type_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeDef*>(&to_msg);
  auto& from = static_cast<const NodeDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.NodeDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input()->MergeFrom(from._internal_input());
  _this->_impl_.attr_.MergeFrom(from._impl_.attr_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_op().empty()) {
    _this->_internal_set_op(from._internal_op());
  }
  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.experimental_debug_info_ != nullptr);
      if (_this->_impl_.experimental_debug_info_ == nullptr) {
        _this->_impl_.experimental_debug_info_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::NodeDef_ExperimentalDebugInfo>(arena, *from._impl_.experimental_debug_info_);
      } else {
        _this->_impl_.experimental_debug_info_->MergeFrom(*from._impl_.experimental_debug_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.experimental_type_ != nullptr);
      if (_this->_impl_.experimental_type_ == nullptr) {
        _this->_impl_.experimental_type_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::FullTypeDef>(arena, *from._impl_.experimental_type_);
      } else {
        _this->_impl_.experimental_type_->MergeFrom(*from._impl_.experimental_type_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeDef::CopyFrom(const NodeDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.NodeDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeDef::InternalSwap(NodeDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_.InternalSwap(&other->_impl_.input_);
  _impl_.attr_.InternalSwap(&other->_impl_.attr_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_, &other->_impl_.op_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.experimental_type_)
      + sizeof(NodeDef::_impl_.experimental_type_)
      - PROTOBUF_FIELD_OFFSET(NodeDef, _impl_.experimental_debug_info_)>(
          reinterpret_cast<char*>(&_impl_.experimental_debug_info_),
          reinterpret_cast<char*>(&other->_impl_.experimental_debug_info_));
}

::google::protobuf::Metadata NodeDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
