// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/graph_debug_info.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/graph_debug_info.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
              template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo_NameToTraceIdEntry_DoNotUse::GraphDebugInfo_NameToTraceIdEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GraphDebugInfo_NameToTraceIdEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GraphDebugInfo_NameToTraceIdEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GraphDebugInfo_NameToTraceIdEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfo_NameToTraceIdEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfo_NameToTraceIdEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GraphDebugInfo_NameToTraceIdEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfo_NameToTraceIdEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_NameToTraceIdEntry_DoNotUse_default_instance_;

inline constexpr GraphDebugInfo_FileLineCol::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        func_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_index_{0},
        line_{0},
        col_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo_FileLineCol::GraphDebugInfo_FileLineCol(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphDebugInfo_FileLineColDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfo_FileLineColDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfo_FileLineColDefaultTypeInternal() {}
  union {
    GraphDebugInfo_FileLineCol _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfo_FileLineColDefaultTypeInternal _GraphDebugInfo_FileLineCol_default_instance_;

inline constexpr GraphDebugInfo_StackTrace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : file_line_cols_{},
        frame_id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo_StackTrace::GraphDebugInfo_StackTrace(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphDebugInfo_StackTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfo_StackTraceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfo_StackTraceDefaultTypeInternal() {}
  union {
    GraphDebugInfo_StackTrace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfo_StackTraceDefaultTypeInternal _GraphDebugInfo_StackTrace_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo_FramesByIdEntry_DoNotUse::GraphDebugInfo_FramesByIdEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GraphDebugInfo_FramesByIdEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GraphDebugInfo_FramesByIdEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GraphDebugInfo_FramesByIdEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfo_FramesByIdEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfo_FramesByIdEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GraphDebugInfo_FramesByIdEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfo_FramesByIdEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_FramesByIdEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo_TracesEntry_DoNotUse::GraphDebugInfo_TracesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GraphDebugInfo_TracesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GraphDebugInfo_TracesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GraphDebugInfo_TracesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfo_TracesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfo_TracesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GraphDebugInfo_TracesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfo_TracesEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_TracesEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo_TracesByIdEntry_DoNotUse::GraphDebugInfo_TracesByIdEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GraphDebugInfo_TracesByIdEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GraphDebugInfo_TracesByIdEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GraphDebugInfo_TracesByIdEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfo_TracesByIdEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfo_TracesByIdEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GraphDebugInfo_TracesByIdEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfo_TracesByIdEntry_DoNotUseDefaultTypeInternal _GraphDebugInfo_TracesByIdEntry_DoNotUse_default_instance_;

inline constexpr GraphDebugInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : files_{},
        traces_{},
        frames_by_id_{},
        name_to_trace_id_{},
        traces_by_id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphDebugInfo::GraphDebugInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphDebugInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphDebugInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphDebugInfoDefaultTypeInternal() {}
  union {
    GraphDebugInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphDebugInfoDefaultTypeInternal _GraphDebugInfo_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _impl_.file_index_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _impl_.line_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _impl_.col_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _impl_.func_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FileLineCol, _impl_.code_),
        2,
        3,
        4,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_StackTrace, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_StackTrace, _impl_.file_line_cols_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_StackTrace, _impl_.frame_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FramesByIdEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesByIdEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_TracesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo, _impl_.files_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo, _impl_.frames_by_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo, _impl_.traces_by_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo, _impl_.traces_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphDebugInfo, _impl_.name_to_trace_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::tensorflow::GraphDebugInfo_FileLineCol)},
        {18, -1, -1, sizeof(::tensorflow::GraphDebugInfo_StackTrace)},
        {28, 38, -1, sizeof(::tensorflow::GraphDebugInfo_FramesByIdEntry_DoNotUse)},
        {40, 50, -1, sizeof(::tensorflow::GraphDebugInfo_TracesByIdEntry_DoNotUse)},
        {52, 62, -1, sizeof(::tensorflow::GraphDebugInfo_TracesEntry_DoNotUse)},
        {64, 74, -1, sizeof(::tensorflow::GraphDebugInfo_NameToTraceIdEntry_DoNotUse)},
        {76, -1, -1, sizeof(::tensorflow::GraphDebugInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_GraphDebugInfo_FileLineCol_default_instance_._instance,
    &::tensorflow::_GraphDebugInfo_StackTrace_default_instance_._instance,
    &::tensorflow::_GraphDebugInfo_FramesByIdEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_GraphDebugInfo_TracesByIdEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_GraphDebugInfo_TracesEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_GraphDebugInfo_NameToTraceIdEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_GraphDebugInfo_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n0tensorflow/core/framework/graph_debug_"
    "info.proto\022\ntensorflow\"\243\006\n\016GraphDebugInf"
    "o\022\r\n\005files\030\001 \003(\t\022@\n\014frames_by_id\030\004 \003(\0132*"
    ".tensorflow.GraphDebugInfo.FramesByIdEnt"
    "ry\022@\n\014traces_by_id\030\006 \003(\0132*.tensorflow.Gr"
    "aphDebugInfo.TracesByIdEntry\0226\n\006traces\030\002"
    " \003(\0132&.tensorflow.GraphDebugInfo.TracesE"
    "ntry\022G\n\020name_to_trace_id\030\005 \003(\0132-.tensorf"
    "low.GraphDebugInfo.NameToTraceIdEntry\032X\n"
    "\013FileLineCol\022\022\n\nfile_index\030\001 \001(\005\022\014\n\004line"
    "\030\002 \001(\005\022\013\n\003col\030\003 \001(\005\022\014\n\004func\030\004 \001(\t\022\014\n\004cod"
    "e\030\005 \001(\t\032b\n\nStackTrace\022>\n\016file_line_cols\030"
    "\001 \003(\0132&.tensorflow.GraphDebugInfo.FileLi"
    "neCol\022\024\n\010frame_id\030\002 \003(\006B\002\020\001\032Y\n\017FramesByI"
    "dEntry\022\013\n\003key\030\001 \001(\006\0225\n\005value\030\002 \001(\0132&.ten"
    "sorflow.GraphDebugInfo.FileLineCol:\0028\001\032X"
    "\n\017TracesByIdEntry\022\013\n\003key\030\001 \001(\006\0224\n\005value\030"
    "\002 \001(\0132%.tensorflow.GraphDebugInfo.StackT"
    "race:\0028\001\032T\n\013TracesEntry\022\013\n\003key\030\001 \001(\t\0224\n\005"
    "value\030\002 \001(\0132%.tensorflow.GraphDebugInfo."
    "StackTrace:\0028\001\0324\n\022NameToTraceIdEntry\022\013\n\003"
    "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\006:\0028\001B\214\001\n\030org.ten"
    "sorflow.frameworkB\024GraphDebugInfoProtosP"
    "\001ZUgithub.com/tensorflow/tensorflow/tens"
    "orflow/go/core/protobuf/for_core_protos_"
    "go_proto\370\001\001"
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto = {
    false,
    false,
    1011,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
    "tensorflow/core/framework/graph_debug_info.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
};
namespace tensorflow {
// ===================================================================

class GraphDebugInfo_FileLineCol::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GraphDebugInfo_FileLineCol>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_._has_bits_);
};

GraphDebugInfo_FileLineCol::GraphDebugInfo_FileLineCol(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphDebugInfo.FileLineCol)
}
inline PROTOBUF_NDEBUG_INLINE GraphDebugInfo_FileLineCol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphDebugInfo_FileLineCol& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        func_(arena, from.func_),
        code_(arena, from.code_) {}

GraphDebugInfo_FileLineCol::GraphDebugInfo_FileLineCol(
    ::google::protobuf::Arena* arena,
    const GraphDebugInfo_FileLineCol& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphDebugInfo_FileLineCol* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, file_index_),
           offsetof(Impl_, col_) -
               offsetof(Impl_, file_index_) +
               sizeof(Impl_::col_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphDebugInfo.FileLineCol)
}
inline PROTOBUF_NDEBUG_INLINE GraphDebugInfo_FileLineCol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        func_(arena),
        code_(arena) {}

inline void GraphDebugInfo_FileLineCol::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_index_),
           0,
           offsetof(Impl_, col_) -
               offsetof(Impl_, file_index_) +
               sizeof(Impl_::col_));
}
GraphDebugInfo_FileLineCol::~GraphDebugInfo_FileLineCol() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphDebugInfo.FileLineCol)
  SharedDtor(*this);
}
inline void GraphDebugInfo_FileLineCol::SharedDtor(MessageLite& self) {
  GraphDebugInfo_FileLineCol& this_ = static_cast<GraphDebugInfo_FileLineCol&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.func_.Destroy();
  this_._impl_.code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GraphDebugInfo_FileLineCol::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphDebugInfo_FileLineCol(arena);
}
constexpr auto GraphDebugInfo_FileLineCol::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GraphDebugInfo_FileLineCol),
                                            alignof(GraphDebugInfo_FileLineCol));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphDebugInfo_FileLineCol::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphDebugInfo_FileLineCol_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphDebugInfo_FileLineCol::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphDebugInfo_FileLineCol>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphDebugInfo_FileLineCol::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphDebugInfo_FileLineCol>(), &GraphDebugInfo_FileLineCol::ByteSizeLong,
            &GraphDebugInfo_FileLineCol::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_._cached_size_),
        false,
    },
    &GraphDebugInfo_FileLineCol::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphDebugInfo_FileLineCol::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 54, 2> GraphDebugInfo_FileLineCol::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_FileLineCol>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 file_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphDebugInfo_FileLineCol, _impl_.file_index_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.file_index_)}},
    // optional int32 line = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphDebugInfo_FileLineCol, _impl_.line_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.line_)}},
    // optional int32 col = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphDebugInfo_FileLineCol, _impl_.col_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.col_)}},
    // optional string func = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.func_)}},
    // optional string code = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.code_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 file_index = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.file_index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 line = 2;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.line_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 col = 3;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.col_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string func = 4;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.func_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string code = 5;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.code_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\0\0\4\4\0\0"
    "tensorflow.GraphDebugInfo.FileLineCol"
    "func"
    "code"
  }},
};

PROTOBUF_NOINLINE void GraphDebugInfo_FileLineCol::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphDebugInfo.FileLineCol)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.func_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.code_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.file_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.col_) -
        reinterpret_cast<char*>(&_impl_.file_index_)) + sizeof(_impl_.col_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphDebugInfo_FileLineCol::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphDebugInfo_FileLineCol& this_ = static_cast<const GraphDebugInfo_FileLineCol&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphDebugInfo_FileLineCol::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphDebugInfo_FileLineCol& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphDebugInfo.FileLineCol)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 file_index = 1;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_file_index(), target);
          }

          // optional int32 line = 2;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_line(), target);
          }

          // optional int32 col = 3;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_col(), target);
          }

          // optional string func = 4;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_func();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "tensorflow.GraphDebugInfo.FileLineCol.func");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional string code = 5;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_code();
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "tensorflow.GraphDebugInfo.FileLineCol.code");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphDebugInfo.FileLineCol)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphDebugInfo_FileLineCol::ByteSizeLong(const MessageLite& base) {
          const GraphDebugInfo_FileLineCol& this_ = static_cast<const GraphDebugInfo_FileLineCol&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphDebugInfo_FileLineCol::ByteSizeLong() const {
          const GraphDebugInfo_FileLineCol& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphDebugInfo.FileLineCol)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // optional string func = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_func());
            }
            // optional string code = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_code());
            }
            // optional int32 file_index = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_file_index());
            }
            // optional int32 line = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_line());
            }
            // optional int32 col = 3;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_col());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphDebugInfo_FileLineCol::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphDebugInfo_FileLineCol*>(&to_msg);
  auto& from = static_cast<const GraphDebugInfo_FileLineCol&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphDebugInfo.FileLineCol)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_func(from._internal_func());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_code(from._internal_code());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.file_index_ = from._impl_.file_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.line_ = from._impl_.line_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.col_ = from._impl_.col_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphDebugInfo_FileLineCol::CopyFrom(const GraphDebugInfo_FileLineCol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphDebugInfo.FileLineCol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphDebugInfo_FileLineCol::InternalSwap(GraphDebugInfo_FileLineCol* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.func_, &other->_impl_.func_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.col_)
      + sizeof(GraphDebugInfo_FileLineCol::_impl_.col_)
      - PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FileLineCol, _impl_.file_index_)>(
          reinterpret_cast<char*>(&_impl_.file_index_),
          reinterpret_cast<char*>(&other->_impl_.file_index_));
}

::google::protobuf::Metadata GraphDebugInfo_FileLineCol::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphDebugInfo_StackTrace::_Internal {
 public:
};

GraphDebugInfo_StackTrace::GraphDebugInfo_StackTrace(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphDebugInfo.StackTrace)
}
inline PROTOBUF_NDEBUG_INLINE GraphDebugInfo_StackTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphDebugInfo_StackTrace& from_msg)
      : file_line_cols_{visibility, arena, from.file_line_cols_},
        frame_id_{visibility, arena, from.frame_id_},
        _cached_size_{0} {}

GraphDebugInfo_StackTrace::GraphDebugInfo_StackTrace(
    ::google::protobuf::Arena* arena,
    const GraphDebugInfo_StackTrace& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphDebugInfo_StackTrace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphDebugInfo.StackTrace)
}
inline PROTOBUF_NDEBUG_INLINE GraphDebugInfo_StackTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : file_line_cols_{visibility, arena},
        frame_id_{visibility, arena},
        _cached_size_{0} {}

inline void GraphDebugInfo_StackTrace::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GraphDebugInfo_StackTrace::~GraphDebugInfo_StackTrace() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphDebugInfo.StackTrace)
  SharedDtor(*this);
}
inline void GraphDebugInfo_StackTrace::SharedDtor(MessageLite& self) {
  GraphDebugInfo_StackTrace& this_ = static_cast<GraphDebugInfo_StackTrace&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphDebugInfo_StackTrace::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphDebugInfo_StackTrace(arena);
}
constexpr auto GraphDebugInfo_StackTrace::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_.file_line_cols_) +
          decltype(GraphDebugInfo_StackTrace::_impl_.file_line_cols_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_.frame_id_) +
          decltype(GraphDebugInfo_StackTrace::_impl_.frame_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GraphDebugInfo_StackTrace), alignof(GraphDebugInfo_StackTrace), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphDebugInfo_StackTrace::PlacementNew_,
                                 sizeof(GraphDebugInfo_StackTrace),
                                 alignof(GraphDebugInfo_StackTrace));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphDebugInfo_StackTrace::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphDebugInfo_StackTrace_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphDebugInfo_StackTrace::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphDebugInfo_StackTrace>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphDebugInfo_StackTrace::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphDebugInfo_StackTrace>(), &GraphDebugInfo_StackTrace::ByteSizeLong,
            &GraphDebugInfo_StackTrace::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_._cached_size_),
        false,
    },
    &GraphDebugInfo_StackTrace::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphDebugInfo_StackTrace::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GraphDebugInfo_StackTrace::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_StackTrace>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated fixed64 frame_id = 2 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_.frame_id_)}},
    // repeated .tensorflow.GraphDebugInfo.FileLineCol file_line_cols = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_.file_line_cols_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.GraphDebugInfo.FileLineCol file_line_cols = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_.file_line_cols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated fixed64 frame_id = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_StackTrace, _impl_.frame_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_FileLineCol>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GraphDebugInfo_StackTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphDebugInfo.StackTrace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_line_cols_.Clear();
  _impl_.frame_id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphDebugInfo_StackTrace::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphDebugInfo_StackTrace& this_ = static_cast<const GraphDebugInfo_StackTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphDebugInfo_StackTrace::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphDebugInfo_StackTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphDebugInfo.StackTrace)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.GraphDebugInfo.FileLineCol file_line_cols = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_file_line_cols_size());
               i < n; i++) {
            const auto& repfield = this_._internal_file_line_cols().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated fixed64 frame_id = 2 [packed = true];
          if (this_._internal_frame_id_size() > 0) {
            target = stream->WriteFixedPacked(2, this_._internal_frame_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphDebugInfo.StackTrace)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphDebugInfo_StackTrace::ByteSizeLong(const MessageLite& base) {
          const GraphDebugInfo_StackTrace& this_ = static_cast<const GraphDebugInfo_StackTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphDebugInfo_StackTrace::ByteSizeLong() const {
          const GraphDebugInfo_StackTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphDebugInfo.StackTrace)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.GraphDebugInfo.FileLineCol file_line_cols = 1;
            {
              total_size += 1UL * this_._internal_file_line_cols_size();
              for (const auto& msg : this_._internal_file_line_cols()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated fixed64 frame_id = 2 [packed = true];
            {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_frame_id_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphDebugInfo_StackTrace::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphDebugInfo_StackTrace*>(&to_msg);
  auto& from = static_cast<const GraphDebugInfo_StackTrace&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphDebugInfo.StackTrace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_file_line_cols()->MergeFrom(
      from._internal_file_line_cols());
  _this->_internal_mutable_frame_id()->MergeFrom(from._internal_frame_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphDebugInfo_StackTrace::CopyFrom(const GraphDebugInfo_StackTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphDebugInfo.StackTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphDebugInfo_StackTrace::InternalSwap(GraphDebugInfo_StackTrace* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.file_line_cols_.InternalSwap(&other->_impl_.file_line_cols_);
  _impl_.frame_id_.InternalSwap(&other->_impl_.frame_id_);
}

::google::protobuf::Metadata GraphDebugInfo_StackTrace::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GraphDebugInfo_FramesByIdEntry_DoNotUse::GraphDebugInfo_FramesByIdEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GraphDebugInfo_FramesByIdEntry_DoNotUse::GraphDebugInfo_FramesByIdEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GraphDebugInfo_FramesByIdEntry_DoNotUse::GraphDebugInfo_FramesByIdEntry_DoNotUse() : SuperType() {}
              GraphDebugInfo_FramesByIdEntry_DoNotUse::GraphDebugInfo_FramesByIdEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GraphDebugInfo_FramesByIdEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GraphDebugInfo_FramesByIdEntry_DoNotUse(arena);
              }
              constexpr auto GraphDebugInfo_FramesByIdEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GraphDebugInfo_FramesByIdEntry_DoNotUse),
                                                          alignof(GraphDebugInfo_FramesByIdEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GraphDebugInfo_FramesByIdEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GraphDebugInfo_FramesByIdEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GraphDebugInfo_FramesByIdEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GraphDebugInfo_FramesByIdEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GraphDebugInfo_FramesByIdEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GraphDebugInfo_FramesByIdEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GraphDebugInfo_FramesByIdEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GraphDebugInfo_FramesByIdEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GraphDebugInfo_FramesByIdEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_FramesByIdEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .tensorflow.GraphDebugInfo.FileLineCol value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_.value_)}},
    // optional fixed64 key = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 key = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional .tensorflow.GraphDebugInfo.FileLineCol value = 2;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_FramesByIdEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_FileLineCol>()},
  }}, {{
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GraphDebugInfo_TracesByIdEntry_DoNotUse::GraphDebugInfo_TracesByIdEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GraphDebugInfo_TracesByIdEntry_DoNotUse::GraphDebugInfo_TracesByIdEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GraphDebugInfo_TracesByIdEntry_DoNotUse::GraphDebugInfo_TracesByIdEntry_DoNotUse() : SuperType() {}
              GraphDebugInfo_TracesByIdEntry_DoNotUse::GraphDebugInfo_TracesByIdEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GraphDebugInfo_TracesByIdEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GraphDebugInfo_TracesByIdEntry_DoNotUse(arena);
              }
              constexpr auto GraphDebugInfo_TracesByIdEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GraphDebugInfo_TracesByIdEntry_DoNotUse),
                                                          alignof(GraphDebugInfo_TracesByIdEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GraphDebugInfo_TracesByIdEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GraphDebugInfo_TracesByIdEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GraphDebugInfo_TracesByIdEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GraphDebugInfo_TracesByIdEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GraphDebugInfo_TracesByIdEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GraphDebugInfo_TracesByIdEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GraphDebugInfo_TracesByIdEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GraphDebugInfo_TracesByIdEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GraphDebugInfo_TracesByIdEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_TracesByIdEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .tensorflow.GraphDebugInfo.StackTrace value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_.value_)}},
    // optional fixed64 key = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 key = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional .tensorflow.GraphDebugInfo.StackTrace value = 2;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesByIdEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_StackTrace>()},
  }}, {{
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GraphDebugInfo_TracesEntry_DoNotUse::GraphDebugInfo_TracesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GraphDebugInfo_TracesEntry_DoNotUse::GraphDebugInfo_TracesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GraphDebugInfo_TracesEntry_DoNotUse::GraphDebugInfo_TracesEntry_DoNotUse() : SuperType() {}
              GraphDebugInfo_TracesEntry_DoNotUse::GraphDebugInfo_TracesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GraphDebugInfo_TracesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GraphDebugInfo_TracesEntry_DoNotUse(arena);
              }
              constexpr auto GraphDebugInfo_TracesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GraphDebugInfo_TracesEntry_DoNotUse),
                                                          alignof(GraphDebugInfo_TracesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GraphDebugInfo_TracesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GraphDebugInfo_TracesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GraphDebugInfo_TracesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GraphDebugInfo_TracesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GraphDebugInfo_TracesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GraphDebugInfo_TracesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GraphDebugInfo_TracesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GraphDebugInfo_TracesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> GraphDebugInfo_TracesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_TracesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .tensorflow.GraphDebugInfo.StackTrace value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesEntry_DoNotUse, _impl_.value_)}},
    // optional string key = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string key = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .tensorflow.GraphDebugInfo.StackTrace value = 2;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_TracesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_StackTrace>()},
  }}, {{
    "\45\3\0\0\0\0\0\0"
    "tensorflow.GraphDebugInfo.TracesEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GraphDebugInfo_NameToTraceIdEntry_DoNotUse::GraphDebugInfo_NameToTraceIdEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GraphDebugInfo_NameToTraceIdEntry_DoNotUse::GraphDebugInfo_NameToTraceIdEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GraphDebugInfo_NameToTraceIdEntry_DoNotUse::GraphDebugInfo_NameToTraceIdEntry_DoNotUse() : SuperType() {}
              GraphDebugInfo_NameToTraceIdEntry_DoNotUse::GraphDebugInfo_NameToTraceIdEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GraphDebugInfo_NameToTraceIdEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GraphDebugInfo_NameToTraceIdEntry_DoNotUse(arena);
              }
              constexpr auto GraphDebugInfo_NameToTraceIdEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GraphDebugInfo_NameToTraceIdEntry_DoNotUse),
                                                          alignof(GraphDebugInfo_NameToTraceIdEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GraphDebugInfo_NameToTraceIdEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GraphDebugInfo_NameToTraceIdEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GraphDebugInfo_NameToTraceIdEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GraphDebugInfo_NameToTraceIdEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GraphDebugInfo_NameToTraceIdEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GraphDebugInfo_NameToTraceIdEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GraphDebugInfo_NameToTraceIdEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GraphDebugInfo_NameToTraceIdEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> GraphDebugInfo_NameToTraceIdEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_NameToTraceIdEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional fixed64 value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_.value_)}},
    // optional string key = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string key = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed64 value = 2;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo_NameToTraceIdEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
  }},
  // no aux_entries
  {{
    "\54\3\0\0\0\0\0\0"
    "tensorflow.GraphDebugInfo.NameToTraceIdEntry"
    "key"
  }},
};

// ===================================================================

class GraphDebugInfo::_Internal {
 public:
};

GraphDebugInfo::GraphDebugInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphDebugInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphDebugInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphDebugInfo& from_msg)
      : files_{visibility, arena, from.files_},
        traces_{visibility, arena, from.traces_},
        frames_by_id_{visibility, arena, from.frames_by_id_},
        name_to_trace_id_{visibility, arena, from.name_to_trace_id_},
        traces_by_id_{visibility, arena, from.traces_by_id_},
        _cached_size_{0} {}

GraphDebugInfo::GraphDebugInfo(
    ::google::protobuf::Arena* arena,
    const GraphDebugInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphDebugInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphDebugInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphDebugInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : files_{visibility, arena},
        traces_{visibility, arena},
        frames_by_id_{visibility, arena},
        name_to_trace_id_{visibility, arena},
        traces_by_id_{visibility, arena},
        _cached_size_{0} {}

inline void GraphDebugInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GraphDebugInfo::~GraphDebugInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphDebugInfo)
  SharedDtor(*this);
}
inline void GraphDebugInfo::SharedDtor(MessageLite& self) {
  GraphDebugInfo& this_ = static_cast<GraphDebugInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphDebugInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphDebugInfo(arena);
}
constexpr auto GraphDebugInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.files_) +
          decltype(GraphDebugInfo::_impl_.files_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.frames_by_id_) +
          decltype(GraphDebugInfo::_impl_.frames_by_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.frames_by_id_) +
          decltype(GraphDebugInfo::_impl_.frames_by_id_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.traces_by_id_) +
          decltype(GraphDebugInfo::_impl_.traces_by_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.traces_by_id_) +
          decltype(GraphDebugInfo::_impl_.traces_by_id_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.traces_) +
          decltype(GraphDebugInfo::_impl_.traces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.traces_) +
          decltype(GraphDebugInfo::_impl_.traces_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.name_to_trace_id_) +
          decltype(GraphDebugInfo::_impl_.name_to_trace_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.name_to_trace_id_) +
          decltype(GraphDebugInfo::_impl_.name_to_trace_id_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GraphDebugInfo), alignof(GraphDebugInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphDebugInfo::PlacementNew_,
                                 sizeof(GraphDebugInfo),
                                 alignof(GraphDebugInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphDebugInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphDebugInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphDebugInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphDebugInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphDebugInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphDebugInfo>(), &GraphDebugInfo::ByteSizeLong,
            &GraphDebugInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_._cached_size_),
        false,
    },
    &GraphDebugInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphDebugInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 7, 61, 2> GraphDebugInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967236,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string files = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.files_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string files = 1;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.files_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // map<string, .tensorflow.GraphDebugInfo.StackTrace> traces = 2;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.traces_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<fixed64, .tensorflow.GraphDebugInfo.FileLineCol> frames_by_id = 4;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.frames_by_id_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, fixed64> name_to_trace_id = 5;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.name_to_trace_id_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<fixed64, .tensorflow.GraphDebugInfo.StackTrace> traces_by_id = 6;
    {PROTOBUF_FIELD_OFFSET(GraphDebugInfo, _impl_.traces_by_id_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GraphDebugInfo()._impl_.traces_)>(
        0, 1, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_StackTrace>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GraphDebugInfo()._impl_.frames_by_id_)>(
        0, 0, 0, 6,
        11)},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_FileLineCol>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GraphDebugInfo()._impl_.name_to_trace_id_)>(
        0, 1, 0, 9,
        6)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GraphDebugInfo()._impl_.traces_by_id_)>(
        0, 0, 0, 6,
        11)},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_StackTrace>()},
  }}, {{
    "\31\5\6\0\20\0\0\0"
    "tensorflow.GraphDebugInfo"
    "files"
    "traces"
    "name_to_trace_id"
  }},
};

PROTOBUF_NOINLINE void GraphDebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphDebugInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.files_.Clear();
  _impl_.traces_.Clear();
  _impl_.frames_by_id_.Clear();
  _impl_.name_to_trace_id_.Clear();
  _impl_.traces_by_id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphDebugInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphDebugInfo& this_ = static_cast<const GraphDebugInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphDebugInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphDebugInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphDebugInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string files = 1;
          for (int i = 0, n = this_._internal_files_size(); i < n; ++i) {
            const auto& s = this_._internal_files().Get(i);
            ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                        "tensorflow.GraphDebugInfo.files");
            target = stream->WriteString(1, s, target);
          }

          // map<string, .tensorflow.GraphDebugInfo.StackTrace> traces = 2;
          if (!this_._internal_traces().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::tensorflow::GraphDebugInfo_StackTrace>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::tensorflow::GraphDebugInfo_StackTrace,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_traces();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                            "tensorflow.GraphDebugInfo.traces");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                            "tensorflow.GraphDebugInfo.traces");
              }
            }
          }

          // map<fixed64, .tensorflow.GraphDebugInfo.FileLineCol> frames_by_id = 4;
          if (!this_._internal_frames_by_id().empty()) {
            using MapType = ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol>;
            using WireHelper = _pbi::MapEntryFuncs<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol,
                                           _pbi::WireFormatLite::TYPE_FIXED64,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_frames_by_id();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
              }
            }
          }

          // map<string, fixed64> name_to_trace_id = 5;
          if (!this_._internal_name_to_trace_id().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::uint64_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::uint64_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_FIXED64>;
            const auto& field = this_._internal_name_to_trace_id();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                            "tensorflow.GraphDebugInfo.name_to_trace_id");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormat::SERIALIZE,
                                            "tensorflow.GraphDebugInfo.name_to_trace_id");
              }
            }
          }

          // map<fixed64, .tensorflow.GraphDebugInfo.StackTrace> traces_by_id = 6;
          if (!this_._internal_traces_by_id().empty()) {
            using MapType = ::google::protobuf::Map<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace>;
            using WireHelper = _pbi::MapEntryFuncs<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace,
                                           _pbi::WireFormatLite::TYPE_FIXED64,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_traces_by_id();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphDebugInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphDebugInfo::ByteSizeLong(const MessageLite& base) {
          const GraphDebugInfo& this_ = static_cast<const GraphDebugInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphDebugInfo::ByteSizeLong() const {
          const GraphDebugInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphDebugInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string files = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_files().size());
              for (int i = 0, n = this_._internal_files().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_files().Get(i));
              }
            }
            // map<string, .tensorflow.GraphDebugInfo.StackTrace> traces = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_traces_size());
              for (const auto& entry : this_._internal_traces()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::tensorflow::GraphDebugInfo_StackTrace,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<fixed64, .tensorflow.GraphDebugInfo.FileLineCol> frames_by_id = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_frames_by_id_size());
              for (const auto& entry : this_._internal_frames_by_id()) {
                total_size += _pbi::MapEntryFuncs<::uint64_t, ::tensorflow::GraphDebugInfo_FileLineCol,
                                               _pbi::WireFormatLite::TYPE_FIXED64,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, fixed64> name_to_trace_id = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_name_to_trace_id_size());
              for (const auto& entry : this_._internal_name_to_trace_id()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::uint64_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_FIXED64>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<fixed64, .tensorflow.GraphDebugInfo.StackTrace> traces_by_id = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_traces_by_id_size());
              for (const auto& entry : this_._internal_traces_by_id()) {
                total_size += _pbi::MapEntryFuncs<::uint64_t, ::tensorflow::GraphDebugInfo_StackTrace,
                                               _pbi::WireFormatLite::TYPE_FIXED64,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphDebugInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphDebugInfo*>(&to_msg);
  auto& from = static_cast<const GraphDebugInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphDebugInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_files()->MergeFrom(from._internal_files());
  _this->_impl_.traces_.MergeFrom(from._impl_.traces_);
  _this->_impl_.frames_by_id_.MergeFrom(from._impl_.frames_by_id_);
  _this->_impl_.name_to_trace_id_.MergeFrom(from._impl_.name_to_trace_id_);
  _this->_impl_.traces_by_id_.MergeFrom(from._impl_.traces_by_id_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphDebugInfo::CopyFrom(const GraphDebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphDebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphDebugInfo::InternalSwap(GraphDebugInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.files_.InternalSwap(&other->_impl_.files_);
  _impl_.traces_.InternalSwap(&other->_impl_.traces_);
  _impl_.frames_by_id_.InternalSwap(&other->_impl_.frames_by_id_);
  _impl_.name_to_trace_id_.InternalSwap(&other->_impl_.name_to_trace_id_);
  _impl_.traces_by_id_.InternalSwap(&other->_impl_.traces_by_id_);
}

::google::protobuf::Metadata GraphDebugInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
