// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/resource_handle.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/resource_handle.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr ResourceHandleProto_DtypeAndShape::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_{nullptr},
        dtype_{static_cast< ::tensorflow::DataType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ResourceHandleProto_DtypeAndShape::ResourceHandleProto_DtypeAndShape(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResourceHandleProto_DtypeAndShapeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceHandleProto_DtypeAndShapeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceHandleProto_DtypeAndShapeDefaultTypeInternal() {}
  union {
    ResourceHandleProto_DtypeAndShape _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceHandleProto_DtypeAndShapeDefaultTypeInternal _ResourceHandleProto_DtypeAndShape_default_instance_;

inline constexpr ResourceHandleProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dtypes_and_shapes_{},
        device_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        container_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        maybe_type_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hash_code_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResourceHandleProto::ResourceHandleProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResourceHandleProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceHandleProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceHandleProtoDefaultTypeInternal() {}
  union {
    ResourceHandleProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceHandleProtoDefaultTypeInternal _ResourceHandleProto_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto_DtypeAndShape, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto_DtypeAndShape, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto_DtypeAndShape, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto_DtypeAndShape, _impl_.shape_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _impl_.device_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _impl_.container_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _impl_.hash_code_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _impl_.maybe_type_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ResourceHandleProto, _impl_.dtypes_and_shapes_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::tensorflow::ResourceHandleProto_DtypeAndShape)},
        {12, -1, -1, sizeof(::tensorflow::ResourceHandleProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_ResourceHandleProto_DtypeAndShape_default_instance_._instance,
    &::tensorflow::_ResourceHandleProto_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n/tensorflow/core/framework/resource_han"
    "dle.proto\022\ntensorflow\032,tensorflow/core/f"
    "ramework/tensor_shape.proto\032%tensorflow/"
    "core/framework/types.proto\"\245\002\n\023ResourceH"
    "andleProto\022\016\n\006device\030\001 \001(\t\022\021\n\tcontainer\030"
    "\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\021\n\thash_code\030\004 \001(\004\022\027"
    "\n\017maybe_type_name\030\005 \001(\t\022H\n\021dtypes_and_sh"
    "apes\030\006 \003(\0132-.tensorflow.ResourceHandlePr"
    "oto.DtypeAndShape\032a\n\rDtypeAndShape\022#\n\005dt"
    "ype\030\001 \001(\0162\024.tensorflow.DataType\022+\n\005shape"
    "\030\002 \001(\0132\034.tensorflow.TensorShapeProtoJ\004\010\007"
    "\020\010B\207\001\n\030org.tensorflow.frameworkB\016Resourc"
    "eHandleP\001ZVgithub.com/tensorflow/tensorf"
    "low/tensorflow/go/core/framework/resourc"
    "e_handle_go_proto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto_deps[2] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto = {
    false,
    false,
    588,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto,
    "tensorflow/core/framework/resource_handle.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto,
};
namespace tensorflow {
// ===================================================================

class ResourceHandleProto_DtypeAndShape::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResourceHandleProto_DtypeAndShape>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_._has_bits_);
};

void ResourceHandleProto_DtypeAndShape::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ != nullptr) _impl_.shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResourceHandleProto_DtypeAndShape::ResourceHandleProto_DtypeAndShape(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ResourceHandleProto.DtypeAndShape)
}
inline PROTOBUF_NDEBUG_INLINE ResourceHandleProto_DtypeAndShape::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::ResourceHandleProto_DtypeAndShape& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ResourceHandleProto_DtypeAndShape::ResourceHandleProto_DtypeAndShape(
    ::google::protobuf::Arena* arena,
    const ResourceHandleProto_DtypeAndShape& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResourceHandleProto_DtypeAndShape* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(
                              arena, *from._impl_.shape_)
                        : nullptr;
  _impl_.dtype_ = from._impl_.dtype_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.ResourceHandleProto.DtypeAndShape)
}
inline PROTOBUF_NDEBUG_INLINE ResourceHandleProto_DtypeAndShape::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResourceHandleProto_DtypeAndShape::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, dtype_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::dtype_));
}
ResourceHandleProto_DtypeAndShape::~ResourceHandleProto_DtypeAndShape() {
  // @@protoc_insertion_point(destructor:tensorflow.ResourceHandleProto.DtypeAndShape)
  SharedDtor(*this);
}
inline void ResourceHandleProto_DtypeAndShape::SharedDtor(MessageLite& self) {
  ResourceHandleProto_DtypeAndShape& this_ = static_cast<ResourceHandleProto_DtypeAndShape&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  this_._impl_.~Impl_();
}

inline void* ResourceHandleProto_DtypeAndShape::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResourceHandleProto_DtypeAndShape(arena);
}
constexpr auto ResourceHandleProto_DtypeAndShape::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResourceHandleProto_DtypeAndShape),
                                            alignof(ResourceHandleProto_DtypeAndShape));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResourceHandleProto_DtypeAndShape::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResourceHandleProto_DtypeAndShape_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResourceHandleProto_DtypeAndShape::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResourceHandleProto_DtypeAndShape>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResourceHandleProto_DtypeAndShape::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResourceHandleProto_DtypeAndShape>(), &ResourceHandleProto_DtypeAndShape::ByteSizeLong,
            &ResourceHandleProto_DtypeAndShape::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_._cached_size_),
        false,
    },
    &ResourceHandleProto_DtypeAndShape::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResourceHandleProto_DtypeAndShape::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ResourceHandleProto_DtypeAndShape::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::ResourceHandleProto_DtypeAndShape>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.TensorShapeProto shape = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_.shape_)}},
    // .tensorflow.DataType dtype = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResourceHandleProto_DtypeAndShape, _impl_.dtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_.dtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.DataType dtype = 1;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_.dtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.TensorShapeProto shape = 2;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorShapeProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ResourceHandleProto_DtypeAndShape::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ResourceHandleProto.DtypeAndShape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.shape_ != nullptr);
    _impl_.shape_->Clear();
  }
  _impl_.dtype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResourceHandleProto_DtypeAndShape::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResourceHandleProto_DtypeAndShape& this_ = static_cast<const ResourceHandleProto_DtypeAndShape&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResourceHandleProto_DtypeAndShape::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResourceHandleProto_DtypeAndShape& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ResourceHandleProto.DtypeAndShape)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tensorflow.DataType dtype = 1;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_dtype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorShapeProto shape = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ResourceHandleProto.DtypeAndShape)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResourceHandleProto_DtypeAndShape::ByteSizeLong(const MessageLite& base) {
          const ResourceHandleProto_DtypeAndShape& this_ = static_cast<const ResourceHandleProto_DtypeAndShape&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResourceHandleProto_DtypeAndShape::ByteSizeLong() const {
          const ResourceHandleProto_DtypeAndShape& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.ResourceHandleProto.DtypeAndShape)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tensorflow.TensorShapeProto shape = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
            }
          }
           {
            // .tensorflow.DataType dtype = 1;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResourceHandleProto_DtypeAndShape::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResourceHandleProto_DtypeAndShape*>(&to_msg);
  auto& from = static_cast<const ResourceHandleProto_DtypeAndShape&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ResourceHandleProto.DtypeAndShape)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.shape_ != nullptr);
    if (_this->_impl_.shape_ == nullptr) {
      _this->_impl_.shape_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(arena, *from._impl_.shape_);
    } else {
      _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
    }
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceHandleProto_DtypeAndShape::CopyFrom(const ResourceHandleProto_DtypeAndShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ResourceHandleProto.DtypeAndShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResourceHandleProto_DtypeAndShape::InternalSwap(ResourceHandleProto_DtypeAndShape* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_.dtype_)
      + sizeof(ResourceHandleProto_DtypeAndShape::_impl_.dtype_)
      - PROTOBUF_FIELD_OFFSET(ResourceHandleProto_DtypeAndShape, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::google::protobuf::Metadata ResourceHandleProto_DtypeAndShape::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResourceHandleProto::_Internal {
 public:
};

ResourceHandleProto::ResourceHandleProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ResourceHandleProto)
}
inline PROTOBUF_NDEBUG_INLINE ResourceHandleProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::ResourceHandleProto& from_msg)
      : dtypes_and_shapes_{visibility, arena, from.dtypes_and_shapes_},
        device_(arena, from.device_),
        container_(arena, from.container_),
        name_(arena, from.name_),
        maybe_type_name_(arena, from.maybe_type_name_),
        _cached_size_{0} {}

ResourceHandleProto::ResourceHandleProto(
    ::google::protobuf::Arena* arena,
    const ResourceHandleProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResourceHandleProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.hash_code_ = from._impl_.hash_code_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.ResourceHandleProto)
}
inline PROTOBUF_NDEBUG_INLINE ResourceHandleProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dtypes_and_shapes_{visibility, arena},
        device_(arena),
        container_(arena),
        name_(arena),
        maybe_type_name_(arena),
        _cached_size_{0} {}

inline void ResourceHandleProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hash_code_ = {};
}
ResourceHandleProto::~ResourceHandleProto() {
  // @@protoc_insertion_point(destructor:tensorflow.ResourceHandleProto)
  SharedDtor(*this);
}
inline void ResourceHandleProto::SharedDtor(MessageLite& self) {
  ResourceHandleProto& this_ = static_cast<ResourceHandleProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_.Destroy();
  this_._impl_.container_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.maybe_type_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResourceHandleProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResourceHandleProto(arena);
}
constexpr auto ResourceHandleProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.dtypes_and_shapes_) +
          decltype(ResourceHandleProto::_impl_.dtypes_and_shapes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ResourceHandleProto), alignof(ResourceHandleProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResourceHandleProto::PlacementNew_,
                                 sizeof(ResourceHandleProto),
                                 alignof(ResourceHandleProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResourceHandleProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResourceHandleProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResourceHandleProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResourceHandleProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResourceHandleProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResourceHandleProto>(), &ResourceHandleProto::ByteSizeLong,
            &ResourceHandleProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_._cached_size_),
        false,
    },
    &ResourceHandleProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResourceHandleProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 73, 2> ResourceHandleProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::ResourceHandleProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.device_)}},
    // string container = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.container_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.name_)}},
    // uint64 hash_code = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResourceHandleProto, _impl_.hash_code_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.hash_code_)}},
    // string maybe_type_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.maybe_type_name_)}},
    // repeated .tensorflow.ResourceHandleProto.DtypeAndShape dtypes_and_shapes = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.dtypes_and_shapes_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device = 1;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.device_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string container = 2;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.container_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 hash_code = 4;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.hash_code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string maybe_type_name = 5;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.maybe_type_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tensorflow.ResourceHandleProto.DtypeAndShape dtypes_and_shapes = 6;
    {PROTOBUF_FIELD_OFFSET(ResourceHandleProto, _impl_.dtypes_and_shapes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::ResourceHandleProto_DtypeAndShape>()},
  }}, {{
    "\36\6\11\4\0\17\0\0"
    "tensorflow.ResourceHandleProto"
    "device"
    "container"
    "name"
    "maybe_type_name"
  }},
};

PROTOBUF_NOINLINE void ResourceHandleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ResourceHandleProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dtypes_and_shapes_.Clear();
  _impl_.device_.ClearToEmpty();
  _impl_.container_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.maybe_type_name_.ClearToEmpty();
  _impl_.hash_code_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResourceHandleProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResourceHandleProto& this_ = static_cast<const ResourceHandleProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResourceHandleProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResourceHandleProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ResourceHandleProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device = 1;
          if (!this_._internal_device().empty()) {
            const std::string& _s = this_._internal_device();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.ResourceHandleProto.device");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string container = 2;
          if (!this_._internal_container().empty()) {
            const std::string& _s = this_._internal_container();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.ResourceHandleProto.container");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string name = 3;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.ResourceHandleProto.name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 hash_code = 4;
          if (this_._internal_hash_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_hash_code(), target);
          }

          // string maybe_type_name = 5;
          if (!this_._internal_maybe_type_name().empty()) {
            const std::string& _s = this_._internal_maybe_type_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.ResourceHandleProto.maybe_type_name");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated .tensorflow.ResourceHandleProto.DtypeAndShape dtypes_and_shapes = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_dtypes_and_shapes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_dtypes_and_shapes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ResourceHandleProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResourceHandleProto::ByteSizeLong(const MessageLite& base) {
          const ResourceHandleProto& this_ = static_cast<const ResourceHandleProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResourceHandleProto::ByteSizeLong() const {
          const ResourceHandleProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.ResourceHandleProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.ResourceHandleProto.DtypeAndShape dtypes_and_shapes = 6;
            {
              total_size += 1UL * this_._internal_dtypes_and_shapes_size();
              for (const auto& msg : this_._internal_dtypes_and_shapes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string device = 1;
            if (!this_._internal_device().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device());
            }
            // string container = 2;
            if (!this_._internal_container().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_container());
            }
            // string name = 3;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string maybe_type_name = 5;
            if (!this_._internal_maybe_type_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_maybe_type_name());
            }
            // uint64 hash_code = 4;
            if (this_._internal_hash_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_hash_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResourceHandleProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResourceHandleProto*>(&to_msg);
  auto& from = static_cast<const ResourceHandleProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ResourceHandleProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dtypes_and_shapes()->MergeFrom(
      from._internal_dtypes_and_shapes());
  if (!from._internal_device().empty()) {
    _this->_internal_set_device(from._internal_device());
  }
  if (!from._internal_container().empty()) {
    _this->_internal_set_container(from._internal_container());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_maybe_type_name().empty()) {
    _this->_internal_set_maybe_type_name(from._internal_maybe_type_name());
  }
  if (from._internal_hash_code() != 0) {
    _this->_impl_.hash_code_ = from._impl_.hash_code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceHandleProto::CopyFrom(const ResourceHandleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ResourceHandleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResourceHandleProto::InternalSwap(ResourceHandleProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dtypes_and_shapes_.InternalSwap(&other->_impl_.dtypes_and_shapes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_, &other->_impl_.device_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.container_, &other->_impl_.container_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.maybe_type_name_, &other->_impl_.maybe_type_name_, arena);
        swap(_impl_.hash_code_, other->_impl_.hash_code_);
}

::google::protobuf::Metadata ResourceHandleProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
