// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/graph_transfer_info.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/graph_transfer_info.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr GraphTransferNodeOutputInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : max_byte_size_{},
        _max_byte_size_cached_byte_size_{0},
        node_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferNodeOutputInfo::GraphTransferNodeOutputInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferNodeOutputInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferNodeOutputInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferNodeOutputInfoDefaultTypeInternal() {}
  union {
    GraphTransferNodeOutputInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferNodeOutputInfoDefaultTypeInternal _GraphTransferNodeOutputInfo_default_instance_;

inline constexpr GraphTransferNodeInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_{0},
        output_port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferNodeInput::GraphTransferNodeInput(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferNodeInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferNodeInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferNodeInputDefaultTypeInternal() {}
  union {
    GraphTransferNodeInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferNodeInputDefaultTypeInternal _GraphTransferNodeInput_default_instance_;

inline constexpr GraphTransferNodeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_{0},
        soc_op_id_{0},
        padding_id_{0},
        input_count_{0},
        output_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferNodeInfo::GraphTransferNodeInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferNodeInfoDefaultTypeInternal() {}
  union {
    GraphTransferNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferNodeInfoDefaultTypeInternal _GraphTransferNodeInfo_default_instance_;

inline constexpr GraphTransferGraphOutputNodeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_{},
        _shape_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dtype_{static_cast< ::tensorflow::DataType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferGraphOutputNodeInfo::GraphTransferGraphOutputNodeInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferGraphOutputNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferGraphOutputNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferGraphOutputNodeInfoDefaultTypeInternal() {}
  union {
    GraphTransferGraphOutputNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferGraphOutputNodeInfoDefaultTypeInternal _GraphTransferGraphOutputNodeInfo_default_instance_;

inline constexpr GraphTransferGraphInputNodeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_{},
        _shape_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dtype_{static_cast< ::tensorflow::DataType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferGraphInputNodeInfo::GraphTransferGraphInputNodeInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferGraphInputNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferGraphInputNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferGraphInputNodeInfoDefaultTypeInternal() {}
  union {
    GraphTransferGraphInputNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferGraphInputNodeInfoDefaultTypeInternal _GraphTransferGraphInputNodeInfo_default_instance_;

inline constexpr GraphTransferConstNodeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_{},
        _shape_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        node_id_{0},
        dtype_{static_cast< ::tensorflow::DataType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferConstNodeInfo::GraphTransferConstNodeInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferConstNodeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferConstNodeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferConstNodeInfoDefaultTypeInternal() {}
  union {
    GraphTransferConstNodeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferConstNodeInfoDefaultTypeInternal _GraphTransferConstNodeInfo_default_instance_;

inline constexpr GraphTransferNodeInputInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_input_{},
        node_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferNodeInputInfo::GraphTransferNodeInputInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferNodeInputInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferNodeInputInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferNodeInputInfoDefaultTypeInternal() {}
  union {
    GraphTransferNodeInputInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferNodeInputInfoDefaultTypeInternal _GraphTransferNodeInputInfo_default_instance_;

inline constexpr GraphTransferInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_info_{},
        const_node_info_{},
        node_input_info_{},
        node_output_info_{},
        graph_input_node_info_{},
        graph_output_node_info_{},
        destination_{static_cast< ::tensorflow::GraphTransferInfo_Destination >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphTransferInfo::GraphTransferInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphTransferInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphTransferInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphTransferInfoDefaultTypeInternal() {}
  union {
    GraphTransferInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphTransferInfoDefaultTypeInternal _GraphTransferInfo_default_instance_;
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInput, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInput, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInput, _impl_.output_port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.type_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.soc_op_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.padding_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.input_count_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInfo, _impl_.output_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferConstNodeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferConstNodeInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferConstNodeInfo, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferConstNodeInfo, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferConstNodeInfo, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferConstNodeInfo, _impl_.dtype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInputInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInputInfo, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeInputInfo, _impl_.node_input_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeOutputInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeOutputInfo, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferNodeOutputInfo, _impl_.max_byte_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphInputNodeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphInputNodeInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphInputNodeInfo, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphInputNodeInfo, _impl_.dtype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphOutputNodeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphOutputNodeInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphOutputNodeInfo, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferGraphOutputNodeInfo, _impl_.dtype_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.node_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.const_node_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.node_input_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.node_output_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.graph_input_node_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.graph_output_node_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphTransferInfo, _impl_.destination_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::GraphTransferNodeInput)},
        {10, -1, -1, sizeof(::tensorflow::GraphTransferNodeInfo)},
        {25, -1, -1, sizeof(::tensorflow::GraphTransferConstNodeInfo)},
        {38, -1, -1, sizeof(::tensorflow::GraphTransferNodeInputInfo)},
        {48, -1, -1, sizeof(::tensorflow::GraphTransferNodeOutputInfo)},
        {58, -1, -1, sizeof(::tensorflow::GraphTransferGraphInputNodeInfo)},
        {69, -1, -1, sizeof(::tensorflow::GraphTransferGraphOutputNodeInfo)},
        {80, -1, -1, sizeof(::tensorflow::GraphTransferInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_GraphTransferNodeInput_default_instance_._instance,
    &::tensorflow::_GraphTransferNodeInfo_default_instance_._instance,
    &::tensorflow::_GraphTransferConstNodeInfo_default_instance_._instance,
    &::tensorflow::_GraphTransferNodeInputInfo_default_instance_._instance,
    &::tensorflow::_GraphTransferNodeOutputInfo_default_instance_._instance,
    &::tensorflow::_GraphTransferGraphInputNodeInfo_default_instance_._instance,
    &::tensorflow::_GraphTransferGraphOutputNodeInfo_default_instance_._instance,
    &::tensorflow::_GraphTransferInfo_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n3tensorflow/core/framework/graph_transf"
    "er_info.proto\022\ntensorflow\032%tensorflow/co"
    "re/framework/types.proto\">\n\026GraphTransfe"
    "rNodeInput\022\017\n\007node_id\030\001 \001(\005\022\023\n\013output_po"
    "rt\030\002 \001(\005\"\233\001\n\025GraphTransferNodeInfo\022\014\n\004na"
    "me\030\001 \001(\t\022\017\n\007node_id\030\002 \001(\005\022\021\n\ttype_name\030\003"
    " \001(\t\022\021\n\tsoc_op_id\030\004 \001(\005\022\022\n\npadding_id\030\005 "
    "\001(\005\022\023\n\013input_count\030\006 \001(\005\022\024\n\014output_count"
    "\030\007 \001(\005\"}\n\032GraphTransferConstNodeInfo\022\014\n\004"
    "name\030\001 \001(\t\022\017\n\007node_id\030\002 \001(\005\022\r\n\005shape\030\003 \003"
    "(\003\022\014\n\004data\030\004 \001(\014\022#\n\005dtype\030\005 \001(\0162\024.tensor"
    "flow.DataType\"e\n\032GraphTransferNodeInputI"
    "nfo\022\017\n\007node_id\030\001 \001(\005\0226\n\nnode_input\030\002 \003(\013"
    "2\".tensorflow.GraphTransferNodeInput\"E\n\033"
    "GraphTransferNodeOutputInfo\022\017\n\007node_id\030\001"
    " \001(\005\022\025\n\rmax_byte_size\030\002 \003(\005\"c\n\037GraphTran"
    "sferGraphInputNodeInfo\022\014\n\004name\030\001 \001(\t\022\r\n\005"
    "shape\030\002 \003(\003\022#\n\005dtype\030\003 \001(\0162\024.tensorflow."
    "DataType\"d\n GraphTransferGraphOutputNode"
    "Info\022\014\n\004name\030\001 \001(\t\022\r\n\005shape\030\002 \003(\003\022#\n\005dty"
    "pe\030\003 \001(\0162\024.tensorflow.DataType\"\215\004\n\021Graph"
    "TransferInfo\0224\n\tnode_info\030\001 \003(\0132!.tensor"
    "flow.GraphTransferNodeInfo\022\?\n\017const_node"
    "_info\030\002 \003(\0132&.tensorflow.GraphTransferCo"
    "nstNodeInfo\022\?\n\017node_input_info\030\003 \003(\0132&.t"
    "ensorflow.GraphTransferNodeInputInfo\022A\n\020"
    "node_output_info\030\004 \003(\0132\'.tensorflow.Grap"
    "hTransferNodeOutputInfo\022J\n\025graph_input_n"
    "ode_info\030\005 \003(\0132+.tensorflow.GraphTransfe"
    "rGraphInputNodeInfo\022L\n\026graph_output_node"
    "_info\030\006 \003(\0132,.tensorflow.GraphTransferGr"
    "aphOutputNodeInfo\022>\n\013destination\030\007 \001(\0162)"
    ".tensorflow.GraphTransferInfo.Destinatio"
    "n\"#\n\013Destination\022\007\n\003NOP\020\000\022\013\n\007HEXAGON\020\001B\223"
    "\001\n\030org.tensorflow.frameworkB\026GraphTransf"
    "erInfoProtoP\001ZZgithub.com/tensorflow/ten"
    "sorflow/tensorflow/go/core/framework/gra"
    "ph_transfer_info_go_proto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_deps[1] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto = {
    false,
    false,
    1516,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    "tensorflow/core/framework/graph_transfer_info.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
};
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* GraphTransferInfo_Destination_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GraphTransferInfo_Destination_internal_data_[] = {
    131072u, 0u, };
bool GraphTransferInfo_Destination_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GraphTransferInfo_Destination GraphTransferInfo::NOP;
constexpr GraphTransferInfo_Destination GraphTransferInfo::HEXAGON;
constexpr GraphTransferInfo_Destination GraphTransferInfo::Destination_MIN;
constexpr GraphTransferInfo_Destination GraphTransferInfo::Destination_MAX;
constexpr int GraphTransferInfo::Destination_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class GraphTransferNodeInput::_Internal {
 public:
};

GraphTransferNodeInput::GraphTransferNodeInput(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferNodeInput)
}
GraphTransferNodeInput::GraphTransferNodeInput(
    ::google::protobuf::Arena* arena, const GraphTransferNodeInput& from)
    : GraphTransferNodeInput(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GraphTransferNodeInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_id_),
           0,
           offsetof(Impl_, output_port_) -
               offsetof(Impl_, node_id_) +
               sizeof(Impl_::output_port_));
}
GraphTransferNodeInput::~GraphTransferNodeInput() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferNodeInput)
  SharedDtor(*this);
}
inline void GraphTransferNodeInput::SharedDtor(MessageLite& self) {
  GraphTransferNodeInput& this_ = static_cast<GraphTransferNodeInput&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphTransferNodeInput::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferNodeInput(arena);
}
constexpr auto GraphTransferNodeInput::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GraphTransferNodeInput),
                                            alignof(GraphTransferNodeInput));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferNodeInput::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferNodeInput_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferNodeInput::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferNodeInput>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferNodeInput::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferNodeInput>(), &GraphTransferNodeInput::ByteSizeLong,
            &GraphTransferNodeInput::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_._cached_size_),
        false,
    },
    &GraphTransferNodeInput::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferNodeInput::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GraphTransferNodeInput::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 output_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInput, _impl_.output_port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_.output_port_)}},
    // int32 node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInput, _impl_.node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 node_id = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 output_port = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_.output_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GraphTransferNodeInput::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferNodeInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_port_) -
      reinterpret_cast<char*>(&_impl_.node_id_)) + sizeof(_impl_.output_port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferNodeInput::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferNodeInput& this_ = static_cast<const GraphTransferNodeInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferNodeInput::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferNodeInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferNodeInput)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 node_id = 1;
          if (this_._internal_node_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_node_id(), target);
          }

          // int32 output_port = 2;
          if (this_._internal_output_port() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_output_port(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferNodeInput)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferNodeInput::ByteSizeLong(const MessageLite& base) {
          const GraphTransferNodeInput& this_ = static_cast<const GraphTransferNodeInput&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferNodeInput::ByteSizeLong() const {
          const GraphTransferNodeInput& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferNodeInput)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 node_id = 1;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_node_id());
            }
            // int32 output_port = 2;
            if (this_._internal_output_port() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_output_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferNodeInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferNodeInput*>(&to_msg);
  auto& from = static_cast<const GraphTransferNodeInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferNodeInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  if (from._internal_output_port() != 0) {
    _this->_impl_.output_port_ = from._impl_.output_port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferNodeInput::CopyFrom(const GraphTransferNodeInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferNodeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferNodeInput::InternalSwap(GraphTransferNodeInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_.output_port_)
      + sizeof(GraphTransferNodeInput::_impl_.output_port_)
      - PROTOBUF_FIELD_OFFSET(GraphTransferNodeInput, _impl_.node_id_)>(
          reinterpret_cast<char*>(&_impl_.node_id_),
          reinterpret_cast<char*>(&other->_impl_.node_id_));
}

::google::protobuf::Metadata GraphTransferNodeInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferNodeInfo::_Internal {
 public:
};

GraphTransferNodeInfo::GraphTransferNodeInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferNodeInfo& from_msg)
      : name_(arena, from.name_),
        type_name_(arena, from.type_name_),
        _cached_size_{0} {}

GraphTransferNodeInfo::GraphTransferNodeInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferNodeInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferNodeInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, node_id_),
           offsetof(Impl_, output_count_) -
               offsetof(Impl_, node_id_) +
               sizeof(Impl_::output_count_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        type_name_(arena),
        _cached_size_{0} {}

inline void GraphTransferNodeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_id_),
           0,
           offsetof(Impl_, output_count_) -
               offsetof(Impl_, node_id_) +
               sizeof(Impl_::output_count_));
}
GraphTransferNodeInfo::~GraphTransferNodeInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferNodeInfo)
  SharedDtor(*this);
}
inline void GraphTransferNodeInfo::SharedDtor(MessageLite& self) {
  GraphTransferNodeInfo& this_ = static_cast<GraphTransferNodeInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.type_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GraphTransferNodeInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferNodeInfo(arena);
}
constexpr auto GraphTransferNodeInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GraphTransferNodeInfo),
                                            alignof(GraphTransferNodeInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferNodeInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferNodeInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferNodeInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferNodeInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferNodeInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferNodeInfo>(), &GraphTransferNodeInfo::ByteSizeLong,
            &GraphTransferNodeInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferNodeInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferNodeInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 54, 2> GraphTransferNodeInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.name_)}},
    // int32 node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInfo, _impl_.node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.node_id_)}},
    // string type_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.type_name_)}},
    // int32 soc_op_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInfo, _impl_.soc_op_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.soc_op_id_)}},
    // int32 padding_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInfo, _impl_.padding_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.padding_id_)}},
    // int32 input_count = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInfo, _impl_.input_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.input_count_)}},
    // int32 output_count = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInfo, _impl_.output_count_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.output_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 node_id = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string type_name = 3;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.type_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 soc_op_id = 4;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.soc_op_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 padding_id = 5;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.padding_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 input_count = 6;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.input_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 output_count = 7;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.output_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\4\0\11\0\0\0\0"
    "tensorflow.GraphTransferNodeInfo"
    "name"
    "type_name"
  }},
};

PROTOBUF_NOINLINE void GraphTransferNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferNodeInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_name_.ClearToEmpty();
  ::memset(&_impl_.node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_count_) -
      reinterpret_cast<char*>(&_impl_.node_id_)) + sizeof(_impl_.output_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferNodeInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferNodeInfo& this_ = static_cast<const GraphTransferNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferNodeInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferNodeInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphTransferNodeInfo.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 node_id = 2;
          if (this_._internal_node_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_node_id(), target);
          }

          // string type_name = 3;
          if (!this_._internal_type_name().empty()) {
            const std::string& _s = this_._internal_type_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphTransferNodeInfo.type_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 soc_op_id = 4;
          if (this_._internal_soc_op_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_soc_op_id(), target);
          }

          // int32 padding_id = 5;
          if (this_._internal_padding_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_padding_id(), target);
          }

          // int32 input_count = 6;
          if (this_._internal_input_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_input_count(), target);
          }

          // int32 output_count = 7;
          if (this_._internal_output_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_output_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferNodeInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferNodeInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferNodeInfo& this_ = static_cast<const GraphTransferNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferNodeInfo::ByteSizeLong() const {
          const GraphTransferNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferNodeInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string type_name = 3;
            if (!this_._internal_type_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type_name());
            }
            // int32 node_id = 2;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_node_id());
            }
            // int32 soc_op_id = 4;
            if (this_._internal_soc_op_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_soc_op_id());
            }
            // int32 padding_id = 5;
            if (this_._internal_padding_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_padding_id());
            }
            // int32 input_count = 6;
            if (this_._internal_input_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_input_count());
            }
            // int32 output_count = 7;
            if (this_._internal_output_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_output_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferNodeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferNodeInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferNodeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type_name().empty()) {
    _this->_internal_set_type_name(from._internal_type_name());
  }
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  if (from._internal_soc_op_id() != 0) {
    _this->_impl_.soc_op_id_ = from._impl_.soc_op_id_;
  }
  if (from._internal_padding_id() != 0) {
    _this->_impl_.padding_id_ = from._impl_.padding_id_;
  }
  if (from._internal_input_count() != 0) {
    _this->_impl_.input_count_ = from._impl_.input_count_;
  }
  if (from._internal_output_count() != 0) {
    _this->_impl_.output_count_ = from._impl_.output_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferNodeInfo::CopyFrom(const GraphTransferNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferNodeInfo::InternalSwap(GraphTransferNodeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_name_, &other->_impl_.type_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.output_count_)
      + sizeof(GraphTransferNodeInfo::_impl_.output_count_)
      - PROTOBUF_FIELD_OFFSET(GraphTransferNodeInfo, _impl_.node_id_)>(
          reinterpret_cast<char*>(&_impl_.node_id_),
          reinterpret_cast<char*>(&other->_impl_.node_id_));
}

::google::protobuf::Metadata GraphTransferNodeInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferConstNodeInfo::_Internal {
 public:
};

GraphTransferConstNodeInfo::GraphTransferConstNodeInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferConstNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferConstNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferConstNodeInfo& from_msg)
      : shape_{visibility, arena, from.shape_},
        _shape_cached_byte_size_{0},
        name_(arena, from.name_),
        data_(arena, from.data_),
        _cached_size_{0} {}

GraphTransferConstNodeInfo::GraphTransferConstNodeInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferConstNodeInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferConstNodeInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, node_id_),
           offsetof(Impl_, dtype_) -
               offsetof(Impl_, node_id_) +
               sizeof(Impl_::dtype_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferConstNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferConstNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_{visibility, arena},
        _shape_cached_byte_size_{0},
        name_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void GraphTransferConstNodeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_id_),
           0,
           offsetof(Impl_, dtype_) -
               offsetof(Impl_, node_id_) +
               sizeof(Impl_::dtype_));
}
GraphTransferConstNodeInfo::~GraphTransferConstNodeInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferConstNodeInfo)
  SharedDtor(*this);
}
inline void GraphTransferConstNodeInfo::SharedDtor(MessageLite& self) {
  GraphTransferConstNodeInfo& this_ = static_cast<GraphTransferConstNodeInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GraphTransferConstNodeInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferConstNodeInfo(arena);
}
constexpr auto GraphTransferConstNodeInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.shape_) +
          decltype(GraphTransferConstNodeInfo::_impl_.shape_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GraphTransferConstNodeInfo), alignof(GraphTransferConstNodeInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphTransferConstNodeInfo::PlacementNew_,
                                 sizeof(GraphTransferConstNodeInfo),
                                 alignof(GraphTransferConstNodeInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferConstNodeInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferConstNodeInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferConstNodeInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferConstNodeInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferConstNodeInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferConstNodeInfo>(), &GraphTransferConstNodeInfo::ByteSizeLong,
            &GraphTransferConstNodeInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferConstNodeInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferConstNodeInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 50, 2> GraphTransferConstNodeInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferConstNodeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.name_)}},
    // int32 node_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferConstNodeInfo, _impl_.node_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.node_id_)}},
    // repeated int64 shape = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.shape_)}},
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.data_)}},
    // .tensorflow.DataType dtype = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferConstNodeInfo, _impl_.dtype_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.dtype_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 node_id = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int64 shape = 3;
    {PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.shape_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tensorflow.DataType dtype = 5;
    {PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.dtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\45\4\0\0\0\0\0\0"
    "tensorflow.GraphTransferConstNodeInfo"
    "name"
  }},
};

PROTOBUF_NOINLINE void GraphTransferConstNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferConstNodeInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.node_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dtype_) -
      reinterpret_cast<char*>(&_impl_.node_id_)) + sizeof(_impl_.dtype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferConstNodeInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferConstNodeInfo& this_ = static_cast<const GraphTransferConstNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferConstNodeInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferConstNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferConstNodeInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphTransferConstNodeInfo.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 node_id = 2;
          if (this_._internal_node_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_node_id(), target);
          }

          // repeated int64 shape = 3;
          {
            int byte_size = this_._impl_._shape_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  3, this_._internal_shape(), byte_size, target);
            }
          }

          // bytes data = 4;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // .tensorflow.DataType dtype = 5;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_dtype(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferConstNodeInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferConstNodeInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferConstNodeInfo& this_ = static_cast<const GraphTransferConstNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferConstNodeInfo::ByteSizeLong() const {
          const GraphTransferConstNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferConstNodeInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 shape = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_shape(), 1,
                      this_._impl_._shape_cached_byte_size_);
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bytes data = 4;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // int32 node_id = 2;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_node_id());
            }
            // .tensorflow.DataType dtype = 5;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferConstNodeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferConstNodeInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferConstNodeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferConstNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape()->MergeFrom(from._internal_shape());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferConstNodeInfo::CopyFrom(const GraphTransferConstNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferConstNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferConstNodeInfo::InternalSwap(GraphTransferConstNodeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.dtype_)
      + sizeof(GraphTransferConstNodeInfo::_impl_.dtype_)
      - PROTOBUF_FIELD_OFFSET(GraphTransferConstNodeInfo, _impl_.node_id_)>(
          reinterpret_cast<char*>(&_impl_.node_id_),
          reinterpret_cast<char*>(&other->_impl_.node_id_));
}

::google::protobuf::Metadata GraphTransferConstNodeInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferNodeInputInfo::_Internal {
 public:
};

GraphTransferNodeInputInfo::GraphTransferNodeInputInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferNodeInputInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeInputInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferNodeInputInfo& from_msg)
      : node_input_{visibility, arena, from.node_input_},
        _cached_size_{0} {}

GraphTransferNodeInputInfo::GraphTransferNodeInputInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferNodeInputInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferNodeInputInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.node_id_ = from._impl_.node_id_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferNodeInputInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeInputInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_input_{visibility, arena},
        _cached_size_{0} {}

inline void GraphTransferNodeInputInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.node_id_ = {};
}
GraphTransferNodeInputInfo::~GraphTransferNodeInputInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferNodeInputInfo)
  SharedDtor(*this);
}
inline void GraphTransferNodeInputInfo::SharedDtor(MessageLite& self) {
  GraphTransferNodeInputInfo& this_ = static_cast<GraphTransferNodeInputInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphTransferNodeInputInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferNodeInputInfo(arena);
}
constexpr auto GraphTransferNodeInputInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphTransferNodeInputInfo, _impl_.node_input_) +
          decltype(GraphTransferNodeInputInfo::_impl_.node_input_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GraphTransferNodeInputInfo), alignof(GraphTransferNodeInputInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphTransferNodeInputInfo::PlacementNew_,
                                 sizeof(GraphTransferNodeInputInfo),
                                 alignof(GraphTransferNodeInputInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferNodeInputInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferNodeInputInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferNodeInputInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferNodeInputInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferNodeInputInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferNodeInputInfo>(), &GraphTransferNodeInputInfo::ByteSizeLong,
            &GraphTransferNodeInputInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferNodeInputInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferNodeInputInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferNodeInputInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GraphTransferNodeInputInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeInputInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.GraphTransferNodeInput node_input = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInputInfo, _impl_.node_input_)}},
    // int32 node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeInputInfo, _impl_.node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeInputInfo, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 node_id = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInputInfo, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .tensorflow.GraphTransferNodeInput node_input = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeInputInfo, _impl_.node_input_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeInput>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GraphTransferNodeInputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferNodeInputInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_input_.Clear();
  _impl_.node_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferNodeInputInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferNodeInputInfo& this_ = static_cast<const GraphTransferNodeInputInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferNodeInputInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferNodeInputInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferNodeInputInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 node_id = 1;
          if (this_._internal_node_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_node_id(), target);
          }

          // repeated .tensorflow.GraphTransferNodeInput node_input = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_input_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_input().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferNodeInputInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferNodeInputInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferNodeInputInfo& this_ = static_cast<const GraphTransferNodeInputInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferNodeInputInfo::ByteSizeLong() const {
          const GraphTransferNodeInputInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferNodeInputInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.GraphTransferNodeInput node_input = 2;
            {
              total_size += 1UL * this_._internal_node_input_size();
              for (const auto& msg : this_._internal_node_input()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 node_id = 1;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferNodeInputInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferNodeInputInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferNodeInputInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferNodeInputInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_input()->MergeFrom(
      from._internal_node_input());
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferNodeInputInfo::CopyFrom(const GraphTransferNodeInputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferNodeInputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferNodeInputInfo::InternalSwap(GraphTransferNodeInputInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_input_.InternalSwap(&other->_impl_.node_input_);
        swap(_impl_.node_id_, other->_impl_.node_id_);
}

::google::protobuf::Metadata GraphTransferNodeInputInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferNodeOutputInfo::_Internal {
 public:
};

GraphTransferNodeOutputInfo::GraphTransferNodeOutputInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferNodeOutputInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeOutputInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferNodeOutputInfo& from_msg)
      : max_byte_size_{visibility, arena, from.max_byte_size_},
        _max_byte_size_cached_byte_size_{0},
        _cached_size_{0} {}

GraphTransferNodeOutputInfo::GraphTransferNodeOutputInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferNodeOutputInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferNodeOutputInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.node_id_ = from._impl_.node_id_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferNodeOutputInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferNodeOutputInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : max_byte_size_{visibility, arena},
        _max_byte_size_cached_byte_size_{0},
        _cached_size_{0} {}

inline void GraphTransferNodeOutputInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.node_id_ = {};
}
GraphTransferNodeOutputInfo::~GraphTransferNodeOutputInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferNodeOutputInfo)
  SharedDtor(*this);
}
inline void GraphTransferNodeOutputInfo::SharedDtor(MessageLite& self) {
  GraphTransferNodeOutputInfo& this_ = static_cast<GraphTransferNodeOutputInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphTransferNodeOutputInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferNodeOutputInfo(arena);
}
constexpr auto GraphTransferNodeOutputInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphTransferNodeOutputInfo, _impl_.max_byte_size_) +
          decltype(GraphTransferNodeOutputInfo::_impl_.max_byte_size_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GraphTransferNodeOutputInfo), alignof(GraphTransferNodeOutputInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphTransferNodeOutputInfo::PlacementNew_,
                                 sizeof(GraphTransferNodeOutputInfo),
                                 alignof(GraphTransferNodeOutputInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferNodeOutputInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferNodeOutputInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferNodeOutputInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferNodeOutputInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferNodeOutputInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferNodeOutputInfo>(), &GraphTransferNodeOutputInfo::ByteSizeLong,
            &GraphTransferNodeOutputInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferNodeOutputInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferNodeOutputInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferNodeOutputInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GraphTransferNodeOutputInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeOutputInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 max_byte_size = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeOutputInfo, _impl_.max_byte_size_)}},
    // int32 node_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferNodeOutputInfo, _impl_.node_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferNodeOutputInfo, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 node_id = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeOutputInfo, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 max_byte_size = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferNodeOutputInfo, _impl_.max_byte_size_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GraphTransferNodeOutputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferNodeOutputInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.max_byte_size_.Clear();
  _impl_.node_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferNodeOutputInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferNodeOutputInfo& this_ = static_cast<const GraphTransferNodeOutputInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferNodeOutputInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferNodeOutputInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferNodeOutputInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 node_id = 1;
          if (this_._internal_node_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_node_id(), target);
          }

          // repeated int32 max_byte_size = 2;
          {
            int byte_size = this_._impl_._max_byte_size_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  2, this_._internal_max_byte_size(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferNodeOutputInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferNodeOutputInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferNodeOutputInfo& this_ = static_cast<const GraphTransferNodeOutputInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferNodeOutputInfo::ByteSizeLong() const {
          const GraphTransferNodeOutputInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferNodeOutputInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 max_byte_size = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_max_byte_size(), 1,
                      this_._impl_._max_byte_size_cached_byte_size_);
            }
          }
           {
            // int32 node_id = 1;
            if (this_._internal_node_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferNodeOutputInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferNodeOutputInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferNodeOutputInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferNodeOutputInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_max_byte_size()->MergeFrom(from._internal_max_byte_size());
  if (from._internal_node_id() != 0) {
    _this->_impl_.node_id_ = from._impl_.node_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferNodeOutputInfo::CopyFrom(const GraphTransferNodeOutputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferNodeOutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferNodeOutputInfo::InternalSwap(GraphTransferNodeOutputInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.max_byte_size_.InternalSwap(&other->_impl_.max_byte_size_);
        swap(_impl_.node_id_, other->_impl_.node_id_);
}

::google::protobuf::Metadata GraphTransferNodeOutputInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferGraphInputNodeInfo::_Internal {
 public:
};

GraphTransferGraphInputNodeInfo::GraphTransferGraphInputNodeInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferGraphInputNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferGraphInputNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferGraphInputNodeInfo& from_msg)
      : shape_{visibility, arena, from.shape_},
        _shape_cached_byte_size_{0},
        name_(arena, from.name_),
        _cached_size_{0} {}

GraphTransferGraphInputNodeInfo::GraphTransferGraphInputNodeInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferGraphInputNodeInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferGraphInputNodeInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.dtype_ = from._impl_.dtype_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferGraphInputNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferGraphInputNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_{visibility, arena},
        _shape_cached_byte_size_{0},
        name_(arena),
        _cached_size_{0} {}

inline void GraphTransferGraphInputNodeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.dtype_ = {};
}
GraphTransferGraphInputNodeInfo::~GraphTransferGraphInputNodeInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferGraphInputNodeInfo)
  SharedDtor(*this);
}
inline void GraphTransferGraphInputNodeInfo::SharedDtor(MessageLite& self) {
  GraphTransferGraphInputNodeInfo& this_ = static_cast<GraphTransferGraphInputNodeInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GraphTransferGraphInputNodeInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferGraphInputNodeInfo(arena);
}
constexpr auto GraphTransferGraphInputNodeInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.shape_) +
          decltype(GraphTransferGraphInputNodeInfo::_impl_.shape_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GraphTransferGraphInputNodeInfo), alignof(GraphTransferGraphInputNodeInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphTransferGraphInputNodeInfo::PlacementNew_,
                                 sizeof(GraphTransferGraphInputNodeInfo),
                                 alignof(GraphTransferGraphInputNodeInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferGraphInputNodeInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferGraphInputNodeInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferGraphInputNodeInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferGraphInputNodeInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferGraphInputNodeInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferGraphInputNodeInfo>(), &GraphTransferGraphInputNodeInfo::ByteSizeLong,
            &GraphTransferGraphInputNodeInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferGraphInputNodeInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferGraphInputNodeInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 55, 2> GraphTransferGraphInputNodeInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferGraphInputNodeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.name_)}},
    // repeated int64 shape = 2;
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.shape_)}},
    // .tensorflow.DataType dtype = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferGraphInputNodeInfo, _impl_.dtype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.dtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int64 shape = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.shape_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .tensorflow.DataType dtype = 3;
    {PROTOBUF_FIELD_OFFSET(GraphTransferGraphInputNodeInfo, _impl_.dtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\52\4\0\0\0\0\0\0"
    "tensorflow.GraphTransferGraphInputNodeInfo"
    "name"
  }},
};

PROTOBUF_NOINLINE void GraphTransferGraphInputNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferGraphInputNodeInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.dtype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferGraphInputNodeInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferGraphInputNodeInfo& this_ = static_cast<const GraphTransferGraphInputNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferGraphInputNodeInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferGraphInputNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferGraphInputNodeInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphTransferGraphInputNodeInfo.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated int64 shape = 2;
          {
            int byte_size = this_._impl_._shape_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  2, this_._internal_shape(), byte_size, target);
            }
          }

          // .tensorflow.DataType dtype = 3;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_dtype(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferGraphInputNodeInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferGraphInputNodeInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferGraphInputNodeInfo& this_ = static_cast<const GraphTransferGraphInputNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferGraphInputNodeInfo::ByteSizeLong() const {
          const GraphTransferGraphInputNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferGraphInputNodeInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 shape = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_shape(), 1,
                      this_._impl_._shape_cached_byte_size_);
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // .tensorflow.DataType dtype = 3;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferGraphInputNodeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferGraphInputNodeInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferGraphInputNodeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferGraphInputNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape()->MergeFrom(from._internal_shape());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferGraphInputNodeInfo::CopyFrom(const GraphTransferGraphInputNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferGraphInputNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferGraphInputNodeInfo::InternalSwap(GraphTransferGraphInputNodeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.dtype_, other->_impl_.dtype_);
}

::google::protobuf::Metadata GraphTransferGraphInputNodeInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferGraphOutputNodeInfo::_Internal {
 public:
};

GraphTransferGraphOutputNodeInfo::GraphTransferGraphOutputNodeInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferGraphOutputNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferGraphOutputNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferGraphOutputNodeInfo& from_msg)
      : shape_{visibility, arena, from.shape_},
        _shape_cached_byte_size_{0},
        name_(arena, from.name_),
        _cached_size_{0} {}

GraphTransferGraphOutputNodeInfo::GraphTransferGraphOutputNodeInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferGraphOutputNodeInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferGraphOutputNodeInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.dtype_ = from._impl_.dtype_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferGraphOutputNodeInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferGraphOutputNodeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_{visibility, arena},
        _shape_cached_byte_size_{0},
        name_(arena),
        _cached_size_{0} {}

inline void GraphTransferGraphOutputNodeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.dtype_ = {};
}
GraphTransferGraphOutputNodeInfo::~GraphTransferGraphOutputNodeInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferGraphOutputNodeInfo)
  SharedDtor(*this);
}
inline void GraphTransferGraphOutputNodeInfo::SharedDtor(MessageLite& self) {
  GraphTransferGraphOutputNodeInfo& this_ = static_cast<GraphTransferGraphOutputNodeInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GraphTransferGraphOutputNodeInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferGraphOutputNodeInfo(arena);
}
constexpr auto GraphTransferGraphOutputNodeInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.shape_) +
          decltype(GraphTransferGraphOutputNodeInfo::_impl_.shape_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GraphTransferGraphOutputNodeInfo), alignof(GraphTransferGraphOutputNodeInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphTransferGraphOutputNodeInfo::PlacementNew_,
                                 sizeof(GraphTransferGraphOutputNodeInfo),
                                 alignof(GraphTransferGraphOutputNodeInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferGraphOutputNodeInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferGraphOutputNodeInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferGraphOutputNodeInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferGraphOutputNodeInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferGraphOutputNodeInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferGraphOutputNodeInfo>(), &GraphTransferGraphOutputNodeInfo::ByteSizeLong,
            &GraphTransferGraphOutputNodeInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferGraphOutputNodeInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferGraphOutputNodeInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> GraphTransferGraphOutputNodeInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferGraphOutputNodeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.name_)}},
    // repeated int64 shape = 2;
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.shape_)}},
    // .tensorflow.DataType dtype = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferGraphOutputNodeInfo, _impl_.dtype_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.dtype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int64 shape = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.shape_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .tensorflow.DataType dtype = 3;
    {PROTOBUF_FIELD_OFFSET(GraphTransferGraphOutputNodeInfo, _impl_.dtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\53\4\0\0\0\0\0\0"
    "tensorflow.GraphTransferGraphOutputNodeInfo"
    "name"
  }},
};

PROTOBUF_NOINLINE void GraphTransferGraphOutputNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferGraphOutputNodeInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.dtype_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferGraphOutputNodeInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferGraphOutputNodeInfo& this_ = static_cast<const GraphTransferGraphOutputNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferGraphOutputNodeInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferGraphOutputNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferGraphOutputNodeInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphTransferGraphOutputNodeInfo.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated int64 shape = 2;
          {
            int byte_size = this_._impl_._shape_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  2, this_._internal_shape(), byte_size, target);
            }
          }

          // .tensorflow.DataType dtype = 3;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_dtype(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferGraphOutputNodeInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferGraphOutputNodeInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferGraphOutputNodeInfo& this_ = static_cast<const GraphTransferGraphOutputNodeInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferGraphOutputNodeInfo::ByteSizeLong() const {
          const GraphTransferGraphOutputNodeInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferGraphOutputNodeInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 shape = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_shape(), 1,
                      this_._impl_._shape_cached_byte_size_);
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // .tensorflow.DataType dtype = 3;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferGraphOutputNodeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferGraphOutputNodeInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferGraphOutputNodeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferGraphOutputNodeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape()->MergeFrom(from._internal_shape());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferGraphOutputNodeInfo::CopyFrom(const GraphTransferGraphOutputNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferGraphOutputNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferGraphOutputNodeInfo::InternalSwap(GraphTransferGraphOutputNodeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_.InternalSwap(&other->_impl_.shape_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.dtype_, other->_impl_.dtype_);
}

::google::protobuf::Metadata GraphTransferGraphOutputNodeInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphTransferInfo::_Internal {
 public:
};

GraphTransferInfo::GraphTransferInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphTransferInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphTransferInfo& from_msg)
      : node_info_{visibility, arena, from.node_info_},
        const_node_info_{visibility, arena, from.const_node_info_},
        node_input_info_{visibility, arena, from.node_input_info_},
        node_output_info_{visibility, arena, from.node_output_info_},
        graph_input_node_info_{visibility, arena, from.graph_input_node_info_},
        graph_output_node_info_{visibility, arena, from.graph_output_node_info_},
        _cached_size_{0} {}

GraphTransferInfo::GraphTransferInfo(
    ::google::protobuf::Arena* arena,
    const GraphTransferInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphTransferInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.destination_ = from._impl_.destination_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphTransferInfo)
}
inline PROTOBUF_NDEBUG_INLINE GraphTransferInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_info_{visibility, arena},
        const_node_info_{visibility, arena},
        node_input_info_{visibility, arena},
        node_output_info_{visibility, arena},
        graph_input_node_info_{visibility, arena},
        graph_output_node_info_{visibility, arena},
        _cached_size_{0} {}

inline void GraphTransferInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.destination_ = {};
}
GraphTransferInfo::~GraphTransferInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphTransferInfo)
  SharedDtor(*this);
}
inline void GraphTransferInfo::SharedDtor(MessageLite& self) {
  GraphTransferInfo& this_ = static_cast<GraphTransferInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GraphTransferInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphTransferInfo(arena);
}
constexpr auto GraphTransferInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_info_) +
          decltype(GraphTransferInfo::_impl_.node_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.const_node_info_) +
          decltype(GraphTransferInfo::_impl_.const_node_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_input_info_) +
          decltype(GraphTransferInfo::_impl_.node_input_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_output_info_) +
          decltype(GraphTransferInfo::_impl_.node_output_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.graph_input_node_info_) +
          decltype(GraphTransferInfo::_impl_.graph_input_node_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.graph_output_node_info_) +
          decltype(GraphTransferInfo::_impl_.graph_output_node_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GraphTransferInfo), alignof(GraphTransferInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphTransferInfo::PlacementNew_,
                                 sizeof(GraphTransferInfo),
                                 alignof(GraphTransferInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphTransferInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphTransferInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphTransferInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphTransferInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphTransferInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphTransferInfo>(), &GraphTransferInfo::ByteSizeLong,
            &GraphTransferInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_._cached_size_),
        false,
    },
    &GraphTransferInfo::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphTransferInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> GraphTransferInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphTransferInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tensorflow.GraphTransferNodeInfo node_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_info_)}},
    // repeated .tensorflow.GraphTransferConstNodeInfo const_node_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.const_node_info_)}},
    // repeated .tensorflow.GraphTransferNodeInputInfo node_input_info = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_input_info_)}},
    // repeated .tensorflow.GraphTransferNodeOutputInfo node_output_info = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_output_info_)}},
    // repeated .tensorflow.GraphTransferGraphInputNodeInfo graph_input_node_info = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.graph_input_node_info_)}},
    // repeated .tensorflow.GraphTransferGraphOutputNodeInfo graph_output_node_info = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 5, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.graph_output_node_info_)}},
    // .tensorflow.GraphTransferInfo.Destination destination = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphTransferInfo, _impl_.destination_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.destination_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.GraphTransferNodeInfo node_info = 1;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.GraphTransferConstNodeInfo const_node_info = 2;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.const_node_info_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.GraphTransferNodeInputInfo node_input_info = 3;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_input_info_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.GraphTransferNodeOutputInfo node_output_info = 4;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.node_output_info_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.GraphTransferGraphInputNodeInfo graph_input_node_info = 5;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.graph_input_node_info_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.GraphTransferGraphOutputNodeInfo graph_output_node_info = 6;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.graph_output_node_info_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.GraphTransferInfo.Destination destination = 7;
    {PROTOBUF_FIELD_OFFSET(GraphTransferInfo, _impl_.destination_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferConstNodeInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeInputInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferNodeOutputInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferGraphInputNodeInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphTransferGraphOutputNodeInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GraphTransferInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphTransferInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_info_.Clear();
  _impl_.const_node_info_.Clear();
  _impl_.node_input_info_.Clear();
  _impl_.node_output_info_.Clear();
  _impl_.graph_input_node_info_.Clear();
  _impl_.graph_output_node_info_.Clear();
  _impl_.destination_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphTransferInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphTransferInfo& this_ = static_cast<const GraphTransferInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphTransferInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphTransferInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphTransferInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.GraphTransferNodeInfo node_info = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.GraphTransferConstNodeInfo const_node_info = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_const_node_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_const_node_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.GraphTransferNodeInputInfo node_input_info = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_input_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_input_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.GraphTransferNodeOutputInfo node_output_info = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_node_output_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_node_output_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.GraphTransferGraphInputNodeInfo graph_input_node_info = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_graph_input_node_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_graph_input_node_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.GraphTransferGraphOutputNodeInfo graph_output_node_info = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_graph_output_node_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_graph_output_node_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tensorflow.GraphTransferInfo.Destination destination = 7;
          if (this_._internal_destination() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_destination(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphTransferInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphTransferInfo::ByteSizeLong(const MessageLite& base) {
          const GraphTransferInfo& this_ = static_cast<const GraphTransferInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphTransferInfo::ByteSizeLong() const {
          const GraphTransferInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphTransferInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.GraphTransferNodeInfo node_info = 1;
            {
              total_size += 1UL * this_._internal_node_info_size();
              for (const auto& msg : this_._internal_node_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.GraphTransferConstNodeInfo const_node_info = 2;
            {
              total_size += 1UL * this_._internal_const_node_info_size();
              for (const auto& msg : this_._internal_const_node_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.GraphTransferNodeInputInfo node_input_info = 3;
            {
              total_size += 1UL * this_._internal_node_input_info_size();
              for (const auto& msg : this_._internal_node_input_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.GraphTransferNodeOutputInfo node_output_info = 4;
            {
              total_size += 1UL * this_._internal_node_output_info_size();
              for (const auto& msg : this_._internal_node_output_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.GraphTransferGraphInputNodeInfo graph_input_node_info = 5;
            {
              total_size += 1UL * this_._internal_graph_input_node_info_size();
              for (const auto& msg : this_._internal_graph_input_node_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.GraphTransferGraphOutputNodeInfo graph_output_node_info = 6;
            {
              total_size += 1UL * this_._internal_graph_output_node_info_size();
              for (const auto& msg : this_._internal_graph_output_node_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tensorflow.GraphTransferInfo.Destination destination = 7;
            if (this_._internal_destination() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_destination());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphTransferInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphTransferInfo*>(&to_msg);
  auto& from = static_cast<const GraphTransferInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphTransferInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_info()->MergeFrom(
      from._internal_node_info());
  _this->_internal_mutable_const_node_info()->MergeFrom(
      from._internal_const_node_info());
  _this->_internal_mutable_node_input_info()->MergeFrom(
      from._internal_node_input_info());
  _this->_internal_mutable_node_output_info()->MergeFrom(
      from._internal_node_output_info());
  _this->_internal_mutable_graph_input_node_info()->MergeFrom(
      from._internal_graph_input_node_info());
  _this->_internal_mutable_graph_output_node_info()->MergeFrom(
      from._internal_graph_output_node_info());
  if (from._internal_destination() != 0) {
    _this->_impl_.destination_ = from._impl_.destination_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphTransferInfo::CopyFrom(const GraphTransferInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphTransferInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphTransferInfo::InternalSwap(GraphTransferInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_info_.InternalSwap(&other->_impl_.node_info_);
  _impl_.const_node_info_.InternalSwap(&other->_impl_.const_node_info_);
  _impl_.node_input_info_.InternalSwap(&other->_impl_.node_input_info_);
  _impl_.node_output_info_.InternalSwap(&other->_impl_.node_output_info_);
  _impl_.graph_input_node_info_.InternalSwap(&other->_impl_.graph_input_node_info_);
  _impl_.graph_output_node_info_.InternalSwap(&other->_impl_.graph_output_node_info_);
  swap(_impl_.destination_, other->_impl_.destination_);
}

::google::protobuf::Metadata GraphTransferInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
