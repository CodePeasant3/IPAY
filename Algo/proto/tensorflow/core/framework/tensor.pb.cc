// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/framework/tensor.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/framework/tensor.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr TensorProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        float_val_{},
        double_val_{},
        int_val_{},
        _int_val_cached_byte_size_{0},
        string_val_{},
        scomplex_val_{},
        int64_val_{},
        _int64_val_cached_byte_size_{0},
        bool_val_{},
        dcomplex_val_{},
        half_val_{},
        _half_val_cached_byte_size_{0},
        resource_handle_val_{},
        variant_val_{},
        uint32_val_{},
        _uint32_val_cached_byte_size_{0},
        uint64_val_{},
        _uint64_val_cached_byte_size_{0},
        tensor_content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        float8_val_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tensor_shape_{nullptr},
        dtype_{static_cast< ::tensorflow::DataType >(0)},
        version_number_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TensorProto::TensorProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorProtoDefaultTypeInternal() {}
  union {
    TensorProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorProtoDefaultTypeInternal _TensorProto_default_instance_;

inline constexpr VariantTensorDataProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tensors_{},
        type_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VariantTensorDataProto::VariantTensorDataProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VariantTensorDataProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VariantTensorDataProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VariantTensorDataProtoDefaultTypeInternal() {}
  union {
    VariantTensorDataProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VariantTensorDataProtoDefaultTypeInternal _VariantTensorDataProto_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2ftensor_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2ftensor_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fframework_2ftensor_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.tensor_shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.version_number_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.tensor_content_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.half_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.float_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.double_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.int_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.string_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.scomplex_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.int64_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.bool_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.dcomplex_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.resource_handle_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.variant_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.uint32_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.uint64_val_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TensorProto, _impl_.float8_val_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::VariantTensorDataProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::VariantTensorDataProto, _impl_.type_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::VariantTensorDataProto, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::VariantTensorDataProto, _impl_.tensors_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 26, -1, sizeof(::tensorflow::TensorProto)},
        {44, -1, -1, sizeof(::tensorflow::VariantTensorDataProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_TensorProto_default_instance_._instance,
    &::tensorflow::_VariantTensorDataProto_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2ftensor_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&tensorflow/core/framework/tensor.proto"
    "\022\ntensorflow\032/tensorflow/core/framework/"
    "resource_handle.proto\032,tensorflow/core/f"
    "ramework/tensor_shape.proto\032%tensorflow/"
    "core/framework/types.proto\"\240\004\n\013TensorPro"
    "to\022#\n\005dtype\030\001 \001(\0162\024.tensorflow.DataType\022"
    "2\n\014tensor_shape\030\002 \001(\0132\034.tensorflow.Tenso"
    "rShapeProto\022\026\n\016version_number\030\003 \001(\005\022\026\n\016t"
    "ensor_content\030\004 \001(\014\022\024\n\010half_val\030\r \003(\005B\002\020"
    "\001\022\025\n\tfloat_val\030\005 \003(\002B\002\020\001\022\026\n\ndouble_val\030\006"
    " \003(\001B\002\020\001\022\023\n\007int_val\030\007 \003(\005B\002\020\001\022\022\n\nstring_"
    "val\030\010 \003(\014\022\030\n\014scomplex_val\030\t \003(\002B\002\020\001\022\025\n\ti"
    "nt64_val\030\n \003(\003B\002\020\001\022\024\n\010bool_val\030\013 \003(\010B\002\020\001"
    "\022\030\n\014dcomplex_val\030\014 \003(\001B\002\020\001\022<\n\023resource_h"
    "andle_val\030\016 \003(\0132\037.tensorflow.ResourceHan"
    "dleProto\0227\n\013variant_val\030\017 \003(\0132\".tensorfl"
    "ow.VariantTensorDataProto\022\026\n\nuint32_val\030"
    "\020 \003(\rB\002\020\001\022\026\n\nuint64_val\030\021 \003(\004B\002\020\001\022\022\n\nflo"
    "at8_val\030\022 \001(\014\"g\n\026VariantTensorDataProto\022"
    "\021\n\ttype_name\030\001 \001(\t\022\020\n\010metadata\030\002 \001(\014\022(\n\007"
    "tensors\030\003 \003(\0132\027.tensorflow.TensorProtoB|"
    "\n\030org.tensorflow.frameworkB\014TensorProtos"
    "P\001ZMgithub.com/tensorflow/tensorflow/ten"
    "sorflow/go/core/framework/tensor_go_prot"
    "o\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto_deps[3] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto = {
    false,
    false,
    972,
    descriptor_table_protodef_tensorflow_2fcore_2fframework_2ftensor_2eproto,
    "tensorflow/core/framework/tensor.proto",
    &descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fframework_2ftensor_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fframework_2ftensor_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fframework_2ftensor_2eproto,
};
namespace tensorflow {
// ===================================================================

class TensorProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TensorProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TensorProto, _impl_._has_bits_);
};

void TensorProto::clear_tensor_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_shape_ != nullptr) _impl_.tensor_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TensorProto::clear_resource_handle_val() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_handle_val_.Clear();
}
TensorProto::TensorProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TensorProto)
}
inline PROTOBUF_NDEBUG_INLINE TensorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::TensorProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        float_val_{visibility, arena, from.float_val_},
        double_val_{visibility, arena, from.double_val_},
        int_val_{visibility, arena, from.int_val_},
        _int_val_cached_byte_size_{0},
        string_val_{visibility, arena, from.string_val_},
        scomplex_val_{visibility, arena, from.scomplex_val_},
        int64_val_{visibility, arena, from.int64_val_},
        _int64_val_cached_byte_size_{0},
        bool_val_{visibility, arena, from.bool_val_},
        dcomplex_val_{visibility, arena, from.dcomplex_val_},
        half_val_{visibility, arena, from.half_val_},
        _half_val_cached_byte_size_{0},
        resource_handle_val_{visibility, arena, from.resource_handle_val_},
        variant_val_{visibility, arena, from.variant_val_},
        uint32_val_{visibility, arena, from.uint32_val_},
        _uint32_val_cached_byte_size_{0},
        uint64_val_{visibility, arena, from.uint64_val_},
        _uint64_val_cached_byte_size_{0},
        tensor_content_(arena, from.tensor_content_),
        float8_val_(arena, from.float8_val_) {}

TensorProto::TensorProto(
    ::google::protobuf::Arena* arena,
    const TensorProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tensor_shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(
                              arena, *from._impl_.tensor_shape_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dtype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, dtype_),
           offsetof(Impl_, version_number_) -
               offsetof(Impl_, dtype_) +
               sizeof(Impl_::version_number_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.TensorProto)
}
inline PROTOBUF_NDEBUG_INLINE TensorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        float_val_{visibility, arena},
        double_val_{visibility, arena},
        int_val_{visibility, arena},
        _int_val_cached_byte_size_{0},
        string_val_{visibility, arena},
        scomplex_val_{visibility, arena},
        int64_val_{visibility, arena},
        _int64_val_cached_byte_size_{0},
        bool_val_{visibility, arena},
        dcomplex_val_{visibility, arena},
        half_val_{visibility, arena},
        _half_val_cached_byte_size_{0},
        resource_handle_val_{visibility, arena},
        variant_val_{visibility, arena},
        uint32_val_{visibility, arena},
        _uint32_val_cached_byte_size_{0},
        uint64_val_{visibility, arena},
        _uint64_val_cached_byte_size_{0},
        tensor_content_(arena),
        float8_val_(arena) {}

inline void TensorProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tensor_shape_),
           0,
           offsetof(Impl_, version_number_) -
               offsetof(Impl_, tensor_shape_) +
               sizeof(Impl_::version_number_));
}
TensorProto::~TensorProto() {
  // @@protoc_insertion_point(destructor:tensorflow.TensorProto)
  SharedDtor(*this);
}
inline void TensorProto::SharedDtor(MessageLite& self) {
  TensorProto& this_ = static_cast<TensorProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tensor_content_.Destroy();
  this_._impl_.float8_val_.Destroy();
  delete this_._impl_.tensor_shape_;
  this_._impl_.~Impl_();
}

inline void* TensorProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TensorProto(arena);
}
constexpr auto TensorProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.half_val_) +
          decltype(TensorProto::_impl_.half_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float_val_) +
          decltype(TensorProto::_impl_.float_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.double_val_) +
          decltype(TensorProto::_impl_.double_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int_val_) +
          decltype(TensorProto::_impl_.int_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.string_val_) +
          decltype(TensorProto::_impl_.string_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.scomplex_val_) +
          decltype(TensorProto::_impl_.scomplex_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int64_val_) +
          decltype(TensorProto::_impl_.int64_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.bool_val_) +
          decltype(TensorProto::_impl_.bool_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dcomplex_val_) +
          decltype(TensorProto::_impl_.dcomplex_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.resource_handle_val_) +
          decltype(TensorProto::_impl_.resource_handle_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.variant_val_) +
          decltype(TensorProto::_impl_.variant_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint32_val_) +
          decltype(TensorProto::_impl_.uint32_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint64_val_) +
          decltype(TensorProto::_impl_.uint64_val_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TensorProto), alignof(TensorProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TensorProto::PlacementNew_,
                                 sizeof(TensorProto),
                                 alignof(TensorProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TensorProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TensorProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TensorProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TensorProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TensorProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TensorProto>(), &TensorProto::ByteSizeLong,
            &TensorProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TensorProto, _impl_._cached_size_),
        false,
    },
    &TensorProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TensorProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 3, 0, 2> TensorProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TensorProto, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::TensorProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tensorflow.DataType dtype = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TensorProto, _impl_.dtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dtype_)}},
    // .tensorflow.TensorShapeProto tensor_shape = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.tensor_shape_)}},
    // int32 version_number = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TensorProto, _impl_.version_number_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.version_number_)}},
    // bytes tensor_content = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.tensor_content_)}},
    // repeated float float_val = 5 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float_val_)}},
    // repeated double double_val = 6 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.double_val_)}},
    // repeated int32 int_val = 7 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int_val_)}},
    // repeated bytes string_val = 8;
    {::_pbi::TcParser::FastBR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.string_val_)}},
    // repeated float scomplex_val = 9 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.scomplex_val_)}},
    // repeated int64 int64_val = 10 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int64_val_)}},
    // repeated bool bool_val = 11 [packed = true];
    {::_pbi::TcParser::FastV8P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.bool_val_)}},
    // repeated double dcomplex_val = 12 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dcomplex_val_)}},
    // repeated int32 half_val = 13 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.half_val_)}},
    // repeated .tensorflow.ResourceHandleProto resource_handle_val = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 1, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.resource_handle_val_)}},
    // repeated .tensorflow.VariantTensorDataProto variant_val = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 2, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.variant_val_)}},
    // repeated uint32 uint32_val = 16 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint32_val_)}},
    // repeated uint64 uint64_val = 17 [packed = true];
    {::_pbi::TcParser::FastV64P2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint64_val_)}},
    // bytes float8_val = 18;
    {::_pbi::TcParser::FastBS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float8_val_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.DataType dtype = 1;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.TensorShapeProto tensor_shape = 2;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.tensor_shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 version_number = 3;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.version_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes tensor_content = 4;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.tensor_content_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated float float_val = 5 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated double double_val = 6 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.double_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated int32 int_val = 7 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated bytes string_val = 8;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.string_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated float scomplex_val = 9 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.scomplex_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated int64 int64_val = 10 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.int64_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated bool bool_val = 11 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.bool_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedBool)},
    // repeated double dcomplex_val = 12 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.dcomplex_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated int32 half_val = 13 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.half_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated .tensorflow.ResourceHandleProto resource_handle_val = 14;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.resource_handle_val_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.VariantTensorDataProto variant_val = 15;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.variant_val_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 uint32_val = 16 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint32_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint64 uint64_val = 17 [packed = true];
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.uint64_val_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // bytes float8_val = 18;
    {PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.float8_val_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::ResourceHandleProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::VariantTensorDataProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TensorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TensorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.float_val_.Clear();
  _impl_.double_val_.Clear();
  _impl_.int_val_.Clear();
  _impl_.string_val_.Clear();
  _impl_.scomplex_val_.Clear();
  _impl_.int64_val_.Clear();
  _impl_.bool_val_.Clear();
  _impl_.dcomplex_val_.Clear();
  _impl_.half_val_.Clear();
  _impl_.resource_handle_val_.Clear();
  _impl_.variant_val_.Clear();
  _impl_.uint32_val_.Clear();
  _impl_.uint64_val_.Clear();
  _impl_.tensor_content_.ClearToEmpty();
  _impl_.float8_val_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tensor_shape_ != nullptr);
    _impl_.tensor_shape_->Clear();
  }
  ::memset(&_impl_.dtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.version_number_) -
      reinterpret_cast<char*>(&_impl_.dtype_)) + sizeof(_impl_.version_number_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TensorProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TensorProto& this_ = static_cast<const TensorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TensorProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TensorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TensorProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tensorflow.DataType dtype = 1;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_dtype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorShapeProto tensor_shape = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.tensor_shape_, this_._impl_.tensor_shape_->GetCachedSize(), target,
                stream);
          }

          // int32 version_number = 3;
          if (this_._internal_version_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_version_number(), target);
          }

          // bytes tensor_content = 4;
          if (!this_._internal_tensor_content().empty()) {
            const std::string& _s = this_._internal_tensor_content();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // repeated float float_val = 5 [packed = true];
          if (this_._internal_float_val_size() > 0) {
            target = stream->WriteFixedPacked(5, this_._internal_float_val(), target);
          }

          // repeated double double_val = 6 [packed = true];
          if (this_._internal_double_val_size() > 0) {
            target = stream->WriteFixedPacked(6, this_._internal_double_val(), target);
          }

          // repeated int32 int_val = 7 [packed = true];
          {
            int byte_size = this_._impl_._int_val_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  7, this_._internal_int_val(), byte_size, target);
            }
          }

          // repeated bytes string_val = 8;
          for (int i = 0, n = this_._internal_string_val_size(); i < n; ++i) {
            const auto& s = this_._internal_string_val().Get(i);
            target = stream->WriteBytes(8, s, target);
          }

          // repeated float scomplex_val = 9 [packed = true];
          if (this_._internal_scomplex_val_size() > 0) {
            target = stream->WriteFixedPacked(9, this_._internal_scomplex_val(), target);
          }

          // repeated int64 int64_val = 10 [packed = true];
          {
            int byte_size = this_._impl_._int64_val_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  10, this_._internal_int64_val(), byte_size, target);
            }
          }

          // repeated bool bool_val = 11 [packed = true];
          if (this_._internal_bool_val_size() > 0) {
            target = stream->WriteFixedPacked(11, this_._internal_bool_val(), target);
          }

          // repeated double dcomplex_val = 12 [packed = true];
          if (this_._internal_dcomplex_val_size() > 0) {
            target = stream->WriteFixedPacked(12, this_._internal_dcomplex_val(), target);
          }

          // repeated int32 half_val = 13 [packed = true];
          {
            int byte_size = this_._impl_._half_val_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  13, this_._internal_half_val(), byte_size, target);
            }
          }

          // repeated .tensorflow.ResourceHandleProto resource_handle_val = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_resource_handle_val_size());
               i < n; i++) {
            const auto& repfield = this_._internal_resource_handle_val().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.VariantTensorDataProto variant_val = 15;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_variant_val_size());
               i < n; i++) {
            const auto& repfield = this_._internal_variant_val().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    15, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated uint32 uint32_val = 16 [packed = true];
          {
            int byte_size = this_._impl_._uint32_val_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  16, this_._internal_uint32_val(), byte_size, target);
            }
          }

          // repeated uint64 uint64_val = 17 [packed = true];
          {
            int byte_size = this_._impl_._uint64_val_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  17, this_._internal_uint64_val(), byte_size, target);
            }
          }

          // bytes float8_val = 18;
          if (!this_._internal_float8_val().empty()) {
            const std::string& _s = this_._internal_float8_val();
            target = stream->WriteBytesMaybeAliased(18, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TensorProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TensorProto::ByteSizeLong(const MessageLite& base) {
          const TensorProto& this_ = static_cast<const TensorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TensorProto::ByteSizeLong() const {
          const TensorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.TensorProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated float float_val = 5 [packed = true];
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_float_val_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated double double_val = 6 [packed = true];
            {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_double_val_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated int32 int_val = 7 [packed = true];
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_int_val(), 1,
                      this_._impl_._int_val_cached_byte_size_);
            }
            // repeated bytes string_val = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_string_val().size());
              for (int i = 0, n = this_._internal_string_val().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_string_val().Get(i));
              }
            }
            // repeated float scomplex_val = 9 [packed = true];
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_scomplex_val_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated int64 int64_val = 10 [packed = true];
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_int64_val(), 1,
                      this_._impl_._int64_val_cached_byte_size_);
            }
            // repeated bool bool_val = 11 [packed = true];
            {
              std::size_t data_size = std::size_t{1} *
                  ::_pbi::FromIntSize(this_._internal_bool_val_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated double dcomplex_val = 12 [packed = true];
            {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_dcomplex_val_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated int32 half_val = 13 [packed = true];
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_half_val(), 1,
                      this_._impl_._half_val_cached_byte_size_);
            }
            // repeated .tensorflow.ResourceHandleProto resource_handle_val = 14;
            {
              total_size += 1UL * this_._internal_resource_handle_val_size();
              for (const auto& msg : this_._internal_resource_handle_val()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.VariantTensorDataProto variant_val = 15;
            {
              total_size += 1UL * this_._internal_variant_val_size();
              for (const auto& msg : this_._internal_variant_val()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated uint32 uint32_val = 16 [packed = true];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_uint32_val(), 2,
                      this_._impl_._uint32_val_cached_byte_size_);
            }
            // repeated uint64 uint64_val = 17 [packed = true];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_uint64_val(), 2,
                      this_._impl_._uint64_val_cached_byte_size_);
            }
          }
           {
            // bytes tensor_content = 4;
            if (!this_._internal_tensor_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tensor_content());
            }
            // bytes float8_val = 18;
            if (!this_._internal_float8_val().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_float8_val());
            }
          }
           {
            // .tensorflow.TensorShapeProto tensor_shape = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tensor_shape_);
            }
          }
           {
            // .tensorflow.DataType dtype = 1;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
            // int32 version_number = 3;
            if (this_._internal_version_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_version_number());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TensorProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorProto*>(&to_msg);
  auto& from = static_cast<const TensorProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TensorProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_float_val()->MergeFrom(from._internal_float_val());
  _this->_internal_mutable_double_val()->MergeFrom(from._internal_double_val());
  _this->_internal_mutable_int_val()->MergeFrom(from._internal_int_val());
  _this->_internal_mutable_string_val()->MergeFrom(from._internal_string_val());
  _this->_internal_mutable_scomplex_val()->MergeFrom(from._internal_scomplex_val());
  _this->_internal_mutable_int64_val()->MergeFrom(from._internal_int64_val());
  _this->_internal_mutable_bool_val()->MergeFrom(from._internal_bool_val());
  _this->_internal_mutable_dcomplex_val()->MergeFrom(from._internal_dcomplex_val());
  _this->_internal_mutable_half_val()->MergeFrom(from._internal_half_val());
  _this->_internal_mutable_resource_handle_val()->MergeFrom(
      from._internal_resource_handle_val());
  _this->_internal_mutable_variant_val()->MergeFrom(
      from._internal_variant_val());
  _this->_internal_mutable_uint32_val()->MergeFrom(from._internal_uint32_val());
  _this->_internal_mutable_uint64_val()->MergeFrom(from._internal_uint64_val());
  if (!from._internal_tensor_content().empty()) {
    _this->_internal_set_tensor_content(from._internal_tensor_content());
  }
  if (!from._internal_float8_val().empty()) {
    _this->_internal_set_float8_val(from._internal_float8_val());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tensor_shape_ != nullptr);
    if (_this->_impl_.tensor_shape_ == nullptr) {
      _this->_impl_.tensor_shape_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(arena, *from._impl_.tensor_shape_);
    } else {
      _this->_impl_.tensor_shape_->MergeFrom(*from._impl_.tensor_shape_);
    }
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  if (from._internal_version_number() != 0) {
    _this->_impl_.version_number_ = from._impl_.version_number_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TensorProto::CopyFrom(const TensorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorProto::InternalSwap(TensorProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.float_val_.InternalSwap(&other->_impl_.float_val_);
  _impl_.double_val_.InternalSwap(&other->_impl_.double_val_);
  _impl_.int_val_.InternalSwap(&other->_impl_.int_val_);
  _impl_.string_val_.InternalSwap(&other->_impl_.string_val_);
  _impl_.scomplex_val_.InternalSwap(&other->_impl_.scomplex_val_);
  _impl_.int64_val_.InternalSwap(&other->_impl_.int64_val_);
  _impl_.bool_val_.InternalSwap(&other->_impl_.bool_val_);
  _impl_.dcomplex_val_.InternalSwap(&other->_impl_.dcomplex_val_);
  _impl_.half_val_.InternalSwap(&other->_impl_.half_val_);
  _impl_.resource_handle_val_.InternalSwap(&other->_impl_.resource_handle_val_);
  _impl_.variant_val_.InternalSwap(&other->_impl_.variant_val_);
  _impl_.uint32_val_.InternalSwap(&other->_impl_.uint32_val_);
  _impl_.uint64_val_.InternalSwap(&other->_impl_.uint64_val_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tensor_content_, &other->_impl_.tensor_content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.float8_val_, &other->_impl_.float8_val_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.version_number_)
      + sizeof(TensorProto::_impl_.version_number_)
      - PROTOBUF_FIELD_OFFSET(TensorProto, _impl_.tensor_shape_)>(
          reinterpret_cast<char*>(&_impl_.tensor_shape_),
          reinterpret_cast<char*>(&other->_impl_.tensor_shape_));
}

::google::protobuf::Metadata TensorProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VariantTensorDataProto::_Internal {
 public:
};

VariantTensorDataProto::VariantTensorDataProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.VariantTensorDataProto)
}
inline PROTOBUF_NDEBUG_INLINE VariantTensorDataProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::VariantTensorDataProto& from_msg)
      : tensors_{visibility, arena, from.tensors_},
        type_name_(arena, from.type_name_),
        metadata_(arena, from.metadata_),
        _cached_size_{0} {}

VariantTensorDataProto::VariantTensorDataProto(
    ::google::protobuf::Arena* arena,
    const VariantTensorDataProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VariantTensorDataProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.VariantTensorDataProto)
}
inline PROTOBUF_NDEBUG_INLINE VariantTensorDataProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tensors_{visibility, arena},
        type_name_(arena),
        metadata_(arena),
        _cached_size_{0} {}

inline void VariantTensorDataProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VariantTensorDataProto::~VariantTensorDataProto() {
  // @@protoc_insertion_point(destructor:tensorflow.VariantTensorDataProto)
  SharedDtor(*this);
}
inline void VariantTensorDataProto::SharedDtor(MessageLite& self) {
  VariantTensorDataProto& this_ = static_cast<VariantTensorDataProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_name_.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* VariantTensorDataProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VariantTensorDataProto(arena);
}
constexpr auto VariantTensorDataProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.tensors_) +
          decltype(VariantTensorDataProto::_impl_.tensors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(VariantTensorDataProto), alignof(VariantTensorDataProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&VariantTensorDataProto::PlacementNew_,
                                 sizeof(VariantTensorDataProto),
                                 alignof(VariantTensorDataProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VariantTensorDataProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VariantTensorDataProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VariantTensorDataProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VariantTensorDataProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VariantTensorDataProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VariantTensorDataProto>(), &VariantTensorDataProto::ByteSizeLong,
            &VariantTensorDataProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_._cached_size_),
        false,
    },
    &VariantTensorDataProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VariantTensorDataProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 51, 2> VariantTensorDataProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::VariantTensorDataProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string type_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.type_name_)}},
    // bytes metadata = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.metadata_)}},
    // repeated .tensorflow.TensorProto tensors = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.tensors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type_name = 1;
    {PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.type_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes metadata = 2;
    {PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .tensorflow.TensorProto tensors = 3;
    {PROTOBUF_FIELD_OFFSET(VariantTensorDataProto, _impl_.tensors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorProto>()},
  }}, {{
    "\41\11\0\0\0\0\0\0"
    "tensorflow.VariantTensorDataProto"
    "type_name"
  }},
};

PROTOBUF_NOINLINE void VariantTensorDataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.VariantTensorDataProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tensors_.Clear();
  _impl_.type_name_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VariantTensorDataProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VariantTensorDataProto& this_ = static_cast<const VariantTensorDataProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VariantTensorDataProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VariantTensorDataProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.VariantTensorDataProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type_name = 1;
          if (!this_._internal_type_name().empty()) {
            const std::string& _s = this_._internal_type_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.VariantTensorDataProto.type_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes metadata = 2;
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // repeated .tensorflow.TensorProto tensors = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tensors_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tensors().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.VariantTensorDataProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VariantTensorDataProto::ByteSizeLong(const MessageLite& base) {
          const VariantTensorDataProto& this_ = static_cast<const VariantTensorDataProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VariantTensorDataProto::ByteSizeLong() const {
          const VariantTensorDataProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.VariantTensorDataProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.TensorProto tensors = 3;
            {
              total_size += 1UL * this_._internal_tensors_size();
              for (const auto& msg : this_._internal_tensors()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string type_name = 1;
            if (!this_._internal_type_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type_name());
            }
            // bytes metadata = 2;
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_metadata());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VariantTensorDataProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VariantTensorDataProto*>(&to_msg);
  auto& from = static_cast<const VariantTensorDataProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.VariantTensorDataProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tensors()->MergeFrom(
      from._internal_tensors());
  if (!from._internal_type_name().empty()) {
    _this->_internal_set_type_name(from._internal_type_name());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VariantTensorDataProto::CopyFrom(const VariantTensorDataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.VariantTensorDataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VariantTensorDataProto::InternalSwap(VariantTensorDataProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tensors_.InternalSwap(&other->_impl_.tensors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_name_, &other->_impl_.type_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
}

::google::protobuf::Metadata VariantTensorDataProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
