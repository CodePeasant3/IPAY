// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/device_properties.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/device_properties.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
              template <typename>
PROTOBUF_CONSTEXPR DeviceProperties_EnvironmentEntry_DoNotUse::DeviceProperties_EnvironmentEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : DeviceProperties_EnvironmentEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : DeviceProperties_EnvironmentEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeviceProperties_EnvironmentEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceProperties_EnvironmentEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceProperties_EnvironmentEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DeviceProperties_EnvironmentEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceProperties_EnvironmentEntry_DoNotUseDefaultTypeInternal _DeviceProperties_EnvironmentEntry_DoNotUse_default_instance_;

inline constexpr DeviceProperties::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : environment_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vendor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frequency_{::int64_t{0}},
        num_cores_{::int64_t{0}},
        num_registers_{::int64_t{0}},
        l1_cache_size_{::int64_t{0}},
        l2_cache_size_{::int64_t{0}},
        l3_cache_size_{::int64_t{0}},
        shared_memory_size_per_multiprocessor_{::int64_t{0}},
        memory_size_{::int64_t{0}},
        bandwidth_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceProperties::DeviceProperties(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DevicePropertiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DevicePropertiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DevicePropertiesDefaultTypeInternal() {}
  union {
    DeviceProperties _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DevicePropertiesDefaultTypeInternal _DeviceProperties_default_instance_;

inline constexpr NamedDevice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        properties_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NamedDevice::NamedDevice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NamedDeviceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedDeviceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedDeviceDefaultTypeInternal() {}
  union {
    NamedDevice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedDeviceDefaultTypeInternal _NamedDevice_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties_EnvironmentEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties_EnvironmentEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties_EnvironmentEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties_EnvironmentEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.vendor_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.model_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.frequency_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.num_cores_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.environment_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.num_registers_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.l1_cache_size_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.l2_cache_size_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.l3_cache_size_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.shared_memory_size_per_multiprocessor_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.memory_size_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DeviceProperties, _impl_.bandwidth_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NamedDevice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NamedDevice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::NamedDevice, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::NamedDevice, _impl_.properties_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::tensorflow::DeviceProperties_EnvironmentEntry_DoNotUse)},
        {12, -1, -1, sizeof(::tensorflow::DeviceProperties)},
        {33, 43, -1, sizeof(::tensorflow::NamedDevice)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_DeviceProperties_EnvironmentEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_DeviceProperties_default_instance_._instance,
    &::tensorflow::_NamedDevice_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n0tensorflow/core/protobuf/device_proper"
    "ties.proto\022\ntensorflow\"\220\003\n\020DevicePropert"
    "ies\022\014\n\004type\030\001 \001(\t\022\016\n\006vendor\030\002 \001(\t\022\r\n\005mod"
    "el\030\003 \001(\t\022\021\n\tfrequency\030\004 \001(\003\022\021\n\tnum_cores"
    "\030\005 \001(\003\022B\n\013environment\030\006 \003(\0132-.tensorflow"
    ".DeviceProperties.EnvironmentEntry\022\025\n\rnu"
    "m_registers\030\007 \001(\003\022\025\n\rl1_cache_size\030\010 \001(\003"
    "\022\025\n\rl2_cache_size\030\t \001(\003\022\025\n\rl3_cache_size"
    "\030\n \001(\003\022-\n%shared_memory_size_per_multipr"
    "ocessor\030\013 \001(\003\022\023\n\013memory_size\030\014 \001(\003\022\021\n\tba"
    "ndwidth\030\r \001(\003\0322\n\020EnvironmentEntry\022\013\n\003key"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"M\n\013NamedDevice"
    "\022\014\n\004name\030\001 \001(\t\0220\n\nproperties\030\002 \001(\0132\034.ten"
    "sorflow.DevicePropertiesBrB\026DeviceProper"
    "tiesProtosZUgithub.com/tensorflow/tensor"
    "flow/tensorflow/go/core/protobuf/for_cor"
    "e_protos_go_proto\370\001\001b\006proto3"
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto = {
    false,
    false,
    668,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto,
    "tensorflow/core/protobuf/device_properties.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto,
};
namespace tensorflow {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              DeviceProperties_EnvironmentEntry_DoNotUse::DeviceProperties_EnvironmentEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              DeviceProperties_EnvironmentEntry_DoNotUse::DeviceProperties_EnvironmentEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              DeviceProperties_EnvironmentEntry_DoNotUse::DeviceProperties_EnvironmentEntry_DoNotUse() : SuperType() {}
              DeviceProperties_EnvironmentEntry_DoNotUse::DeviceProperties_EnvironmentEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* DeviceProperties_EnvironmentEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) DeviceProperties_EnvironmentEntry_DoNotUse(arena);
              }
              constexpr auto DeviceProperties_EnvironmentEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceProperties_EnvironmentEntry_DoNotUse),
                                                          alignof(DeviceProperties_EnvironmentEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull DeviceProperties_EnvironmentEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_DeviceProperties_EnvironmentEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &DeviceProperties_EnvironmentEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<DeviceProperties_EnvironmentEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &DeviceProperties_EnvironmentEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &DeviceProperties_EnvironmentEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(DeviceProperties_EnvironmentEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &DeviceProperties_EnvironmentEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* DeviceProperties_EnvironmentEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> DeviceProperties_EnvironmentEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceProperties_EnvironmentEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DeviceProperties_EnvironmentEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties_EnvironmentEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties_EnvironmentEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties_EnvironmentEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties_EnvironmentEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\5\0\0\0\0\0"
    "tensorflow.DeviceProperties.EnvironmentEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class DeviceProperties::_Internal {
 public:
};

DeviceProperties::DeviceProperties(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DeviceProperties)
}
inline PROTOBUF_NDEBUG_INLINE DeviceProperties::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DeviceProperties& from_msg)
      : environment_{visibility, arena, from.environment_},
        type_(arena, from.type_),
        vendor_(arena, from.vendor_),
        model_(arena, from.model_),
        _cached_size_{0} {}

DeviceProperties::DeviceProperties(
    ::google::protobuf::Arena* arena,
    const DeviceProperties& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceProperties* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frequency_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, frequency_),
           offsetof(Impl_, bandwidth_) -
               offsetof(Impl_, frequency_) +
               sizeof(Impl_::bandwidth_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.DeviceProperties)
}
inline PROTOBUF_NDEBUG_INLINE DeviceProperties::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : environment_{visibility, arena},
        type_(arena),
        vendor_(arena),
        model_(arena),
        _cached_size_{0} {}

inline void DeviceProperties::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, frequency_),
           0,
           offsetof(Impl_, bandwidth_) -
               offsetof(Impl_, frequency_) +
               sizeof(Impl_::bandwidth_));
}
DeviceProperties::~DeviceProperties() {
  // @@protoc_insertion_point(destructor:tensorflow.DeviceProperties)
  SharedDtor(*this);
}
inline void DeviceProperties::SharedDtor(MessageLite& self) {
  DeviceProperties& this_ = static_cast<DeviceProperties&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.vendor_.Destroy();
  this_._impl_.model_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeviceProperties::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceProperties(arena);
}
constexpr auto DeviceProperties::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.environment_) +
          decltype(DeviceProperties::_impl_.environment_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.environment_) +
          decltype(DeviceProperties::_impl_.environment_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeviceProperties), alignof(DeviceProperties), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceProperties::PlacementNew_,
                                 sizeof(DeviceProperties),
                                 alignof(DeviceProperties));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceProperties::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceProperties_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceProperties::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceProperties>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceProperties::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceProperties>(), &DeviceProperties::ByteSizeLong,
            &DeviceProperties::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_._cached_size_),
        false,
    },
    &DeviceProperties::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceProperties::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 1, 70, 2> DeviceProperties::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DeviceProperties>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.type_)}},
    // string vendor = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.vendor_)}},
    // string model = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.model_)}},
    // int64 frequency = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.frequency_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.frequency_)}},
    // int64 num_cores = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.num_cores_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.num_cores_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 num_registers = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.num_registers_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.num_registers_)}},
    // int64 l1_cache_size = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.l1_cache_size_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.l1_cache_size_)}},
    // int64 l2_cache_size = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.l2_cache_size_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.l2_cache_size_)}},
    // int64 l3_cache_size = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.l3_cache_size_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.l3_cache_size_)}},
    // int64 shared_memory_size_per_multiprocessor = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.shared_memory_size_per_multiprocessor_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.shared_memory_size_per_multiprocessor_)}},
    // int64 memory_size = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.memory_size_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.memory_size_)}},
    // int64 bandwidth = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DeviceProperties, _impl_.bandwidth_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.bandwidth_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string vendor = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.vendor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string model = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.model_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 frequency = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.frequency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 num_cores = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.num_cores_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> environment = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.environment_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 num_registers = 7;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.num_registers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 l1_cache_size = 8;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.l1_cache_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 l2_cache_size = 9;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.l2_cache_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 l3_cache_size = 10;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.l3_cache_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 shared_memory_size_per_multiprocessor = 11;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.shared_memory_size_per_multiprocessor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 memory_size = 12;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.memory_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 bandwidth = 13;
    {PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.bandwidth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(DeviceProperties()._impl_.environment_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\4\6\5\0\0\13\0\0\0\0\0\0\0\0\0"
    "tensorflow.DeviceProperties"
    "type"
    "vendor"
    "model"
    "environment"
  }},
};

PROTOBUF_NOINLINE void DeviceProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DeviceProperties)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.environment_.Clear();
  _impl_.type_.ClearToEmpty();
  _impl_.vendor_.ClearToEmpty();
  _impl_.model_.ClearToEmpty();
  ::memset(&_impl_.frequency_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bandwidth_) -
      reinterpret_cast<char*>(&_impl_.frequency_)) + sizeof(_impl_.bandwidth_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceProperties::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceProperties& this_ = static_cast<const DeviceProperties&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceProperties::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceProperties& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DeviceProperties)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string vendor = 2;
          if (!this_._internal_vendor().empty()) {
            const std::string& _s = this_._internal_vendor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.vendor");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string model = 3;
          if (!this_._internal_model().empty()) {
            const std::string& _s = this_._internal_model();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.model");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 frequency = 4;
          if (this_._internal_frequency() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_frequency(), target);
          }

          // int64 num_cores = 5;
          if (this_._internal_num_cores() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_num_cores(), target);
          }

          // map<string, string> environment = 6;
          if (!this_._internal_environment().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_environment();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.environment");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.environment");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.environment");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DeviceProperties.environment");
              }
            }
          }

          // int64 num_registers = 7;
          if (this_._internal_num_registers() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_num_registers(), target);
          }

          // int64 l1_cache_size = 8;
          if (this_._internal_l1_cache_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_l1_cache_size(), target);
          }

          // int64 l2_cache_size = 9;
          if (this_._internal_l2_cache_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_l2_cache_size(), target);
          }

          // int64 l3_cache_size = 10;
          if (this_._internal_l3_cache_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_l3_cache_size(), target);
          }

          // int64 shared_memory_size_per_multiprocessor = 11;
          if (this_._internal_shared_memory_size_per_multiprocessor() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_shared_memory_size_per_multiprocessor(), target);
          }

          // int64 memory_size = 12;
          if (this_._internal_memory_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<12>(
                    stream, this_._internal_memory_size(), target);
          }

          // int64 bandwidth = 13;
          if (this_._internal_bandwidth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<13>(
                    stream, this_._internal_bandwidth(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DeviceProperties)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceProperties::ByteSizeLong(const MessageLite& base) {
          const DeviceProperties& this_ = static_cast<const DeviceProperties&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceProperties::ByteSizeLong() const {
          const DeviceProperties& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DeviceProperties)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> environment = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_environment_size());
              for (const auto& entry : this_._internal_environment()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string type = 1;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string vendor = 2;
            if (!this_._internal_vendor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_vendor());
            }
            // string model = 3;
            if (!this_._internal_model().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model());
            }
            // int64 frequency = 4;
            if (this_._internal_frequency() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_frequency());
            }
            // int64 num_cores = 5;
            if (this_._internal_num_cores() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_num_cores());
            }
            // int64 num_registers = 7;
            if (this_._internal_num_registers() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_num_registers());
            }
            // int64 l1_cache_size = 8;
            if (this_._internal_l1_cache_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_l1_cache_size());
            }
            // int64 l2_cache_size = 9;
            if (this_._internal_l2_cache_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_l2_cache_size());
            }
            // int64 l3_cache_size = 10;
            if (this_._internal_l3_cache_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_l3_cache_size());
            }
            // int64 shared_memory_size_per_multiprocessor = 11;
            if (this_._internal_shared_memory_size_per_multiprocessor() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_shared_memory_size_per_multiprocessor());
            }
            // int64 memory_size = 12;
            if (this_._internal_memory_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_memory_size());
            }
            // int64 bandwidth = 13;
            if (this_._internal_bandwidth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_bandwidth());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceProperties::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceProperties*>(&to_msg);
  auto& from = static_cast<const DeviceProperties&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DeviceProperties)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.environment_.MergeFrom(from._impl_.environment_);
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_vendor().empty()) {
    _this->_internal_set_vendor(from._internal_vendor());
  }
  if (!from._internal_model().empty()) {
    _this->_internal_set_model(from._internal_model());
  }
  if (from._internal_frequency() != 0) {
    _this->_impl_.frequency_ = from._impl_.frequency_;
  }
  if (from._internal_num_cores() != 0) {
    _this->_impl_.num_cores_ = from._impl_.num_cores_;
  }
  if (from._internal_num_registers() != 0) {
    _this->_impl_.num_registers_ = from._impl_.num_registers_;
  }
  if (from._internal_l1_cache_size() != 0) {
    _this->_impl_.l1_cache_size_ = from._impl_.l1_cache_size_;
  }
  if (from._internal_l2_cache_size() != 0) {
    _this->_impl_.l2_cache_size_ = from._impl_.l2_cache_size_;
  }
  if (from._internal_l3_cache_size() != 0) {
    _this->_impl_.l3_cache_size_ = from._impl_.l3_cache_size_;
  }
  if (from._internal_shared_memory_size_per_multiprocessor() != 0) {
    _this->_impl_.shared_memory_size_per_multiprocessor_ = from._impl_.shared_memory_size_per_multiprocessor_;
  }
  if (from._internal_memory_size() != 0) {
    _this->_impl_.memory_size_ = from._impl_.memory_size_;
  }
  if (from._internal_bandwidth() != 0) {
    _this->_impl_.bandwidth_ = from._impl_.bandwidth_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceProperties::CopyFrom(const DeviceProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DeviceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceProperties::InternalSwap(DeviceProperties* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.environment_.InternalSwap(&other->_impl_.environment_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vendor_, &other->_impl_.vendor_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_, &other->_impl_.model_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.bandwidth_)
      + sizeof(DeviceProperties::_impl_.bandwidth_)
      - PROTOBUF_FIELD_OFFSET(DeviceProperties, _impl_.frequency_)>(
          reinterpret_cast<char*>(&_impl_.frequency_),
          reinterpret_cast<char*>(&other->_impl_.frequency_));
}

::google::protobuf::Metadata DeviceProperties::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NamedDevice::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NamedDevice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_._has_bits_);
};

NamedDevice::NamedDevice(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.NamedDevice)
}
inline PROTOBUF_NDEBUG_INLINE NamedDevice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::NamedDevice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

NamedDevice::NamedDevice(
    ::google::protobuf::Arena* arena,
    const NamedDevice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NamedDevice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.properties_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::DeviceProperties>(
                              arena, *from._impl_.properties_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.NamedDevice)
}
inline PROTOBUF_NDEBUG_INLINE NamedDevice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void NamedDevice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.properties_ = {};
}
NamedDevice::~NamedDevice() {
  // @@protoc_insertion_point(destructor:tensorflow.NamedDevice)
  SharedDtor(*this);
}
inline void NamedDevice::SharedDtor(MessageLite& self) {
  NamedDevice& this_ = static_cast<NamedDevice&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.properties_;
  this_._impl_.~Impl_();
}

inline void* NamedDevice::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NamedDevice(arena);
}
constexpr auto NamedDevice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NamedDevice),
                                            alignof(NamedDevice));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NamedDevice::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NamedDevice_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NamedDevice::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NamedDevice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NamedDevice::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NamedDevice>(), &NamedDevice::ByteSizeLong,
            &NamedDevice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_._cached_size_),
        false,
    },
    &NamedDevice::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NamedDevice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> NamedDevice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::NamedDevice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.DeviceProperties properties = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_.properties_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.DeviceProperties properties = 2;
    {PROTOBUF_FIELD_OFFSET(NamedDevice, _impl_.properties_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::DeviceProperties>()},
  }}, {{
    "\26\4\0\0\0\0\0\0"
    "tensorflow.NamedDevice"
    "name"
  }},
};

PROTOBUF_NOINLINE void NamedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.NamedDevice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.properties_ != nullptr);
    _impl_.properties_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NamedDevice::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NamedDevice& this_ = static_cast<const NamedDevice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NamedDevice::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NamedDevice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.NamedDevice)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.NamedDevice.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.DeviceProperties properties = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.properties_, this_._impl_.properties_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.NamedDevice)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NamedDevice::ByteSizeLong(const MessageLite& base) {
          const NamedDevice& this_ = static_cast<const NamedDevice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NamedDevice::ByteSizeLong() const {
          const NamedDevice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.NamedDevice)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .tensorflow.DeviceProperties properties = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.properties_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NamedDevice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NamedDevice*>(&to_msg);
  auto& from = static_cast<const NamedDevice&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.NamedDevice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.properties_ != nullptr);
    if (_this->_impl_.properties_ == nullptr) {
      _this->_impl_.properties_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::DeviceProperties>(arena, *from._impl_.properties_);
    } else {
      _this->_impl_.properties_->MergeFrom(*from._impl_.properties_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NamedDevice::CopyFrom(const NamedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.NamedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NamedDevice::InternalSwap(NamedDevice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.properties_, other->_impl_.properties_);
}

::google::protobuf::Metadata NamedDevice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
