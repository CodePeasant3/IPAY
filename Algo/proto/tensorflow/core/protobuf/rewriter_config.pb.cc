// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/rewriter_config.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/rewriter_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr ScopedAllocatorOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enable_op_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScopedAllocatorOptions::ScopedAllocatorOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScopedAllocatorOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScopedAllocatorOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScopedAllocatorOptionsDefaultTypeInternal() {}
  union {
    ScopedAllocatorOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScopedAllocatorOptionsDefaultTypeInternal _ScopedAllocatorOptions_default_instance_;

inline constexpr AutoParallelOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enable_{false},
        num_replicas_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AutoParallelOptions::AutoParallelOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AutoParallelOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutoParallelOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutoParallelOptionsDefaultTypeInternal() {}
  union {
    AutoParallelOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutoParallelOptionsDefaultTypeInternal _AutoParallelOptions_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUseDefaultTypeInternal _RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse_default_instance_;

inline constexpr RewriterConfig_CustomGraphOptimizer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : parameter_map_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RewriterConfig_CustomGraphOptimizer::RewriterConfig_CustomGraphOptimizer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RewriterConfig_CustomGraphOptimizerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RewriterConfig_CustomGraphOptimizerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RewriterConfig_CustomGraphOptimizerDefaultTypeInternal() {}
  union {
    RewriterConfig_CustomGraphOptimizer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RewriterConfig_CustomGraphOptimizerDefaultTypeInternal _RewriterConfig_CustomGraphOptimizer_default_instance_;

inline constexpr RewriterConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        optimizers_{},
        custom_optimizers_{},
        memory_optimizer_target_node_name_scope_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auto_parallel_{nullptr},
        scoped_allocator_opts_{nullptr},
        inter_optimizer_verifier_config_{nullptr},
        post_optimization_verifier_config_{nullptr},
        layout_optimizer_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        constant_folding_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        memory_optimization_{static_cast< ::tensorflow::RewriterConfig_MemOptType >(0)},
        arithmetic_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        dependency_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        loop_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        function_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        debug_stripper_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        meta_optimizer_iterations_{static_cast< ::tensorflow::RewriterConfig_NumIterationsType >(0)},
        shape_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        remapping_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        scoped_allocator_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        min_graph_nodes_{0},
        pin_to_host_optimization_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        meta_optimizer_timeout_ms_{::int64_t{0}},
        disable_model_pruning_{false},
        disable_meta_optimizer_{false},
        disable_tfg_optimizer_{false},
        experimental_disable_compressed_tensor_optimization_{false},
        implementation_selector_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        auto_mixed_precision_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        common_subgraph_elimination_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        experimental_disable_folding_quantization_emulation_{false},
        fail_on_optimizer_errors_{false},
        auto_mixed_precision_mkl_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        use_plugin_optimizers_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        auto_mixed_precision_cpu_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        experimental_conditional_code_motion_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        auto_mixed_precision_onednn_bfloat16_{static_cast< ::tensorflow::RewriterConfig_Toggle >(0)},
        cpu_layout_conversion_{static_cast< ::tensorflow::RewriterConfig_CpuLayout >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RewriterConfig::RewriterConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RewriterConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RewriterConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RewriterConfigDefaultTypeInternal() {}
  union {
    RewriterConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RewriterConfigDefaultTypeInternal _RewriterConfig_default_instance_;
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::AutoParallelOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::AutoParallelOptions, _impl_.enable_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::AutoParallelOptions, _impl_.num_replicas_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::ScopedAllocatorOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::ScopedAllocatorOptions, _impl_.enable_op_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig_CustomGraphOptimizer, _impl_.parameter_map_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.cpu_layout_conversion_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.layout_optimizer_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.constant_folding_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.shape_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.remapping_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.common_subgraph_elimination_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.arithmetic_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.dependency_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.loop_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.function_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.debug_stripper_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.disable_model_pruning_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.scoped_allocator_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.pin_to_host_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.implementation_selector_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.auto_mixed_precision_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.auto_mixed_precision_mkl_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.auto_mixed_precision_onednn_bfloat16_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.auto_mixed_precision_cpu_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.disable_meta_optimizer_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.disable_tfg_optimizer_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.use_plugin_optimizers_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.experimental_conditional_code_motion_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.meta_optimizer_iterations_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.min_graph_nodes_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.experimental_disable_compressed_tensor_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.experimental_disable_folding_quantization_emulation_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.memory_optimization_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.memory_optimizer_target_node_name_scope_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.meta_optimizer_timeout_ms_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.auto_parallel_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.fail_on_optimizer_errors_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.scoped_allocator_opts_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.optimizers_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.custom_optimizers_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.inter_optimizer_verifier_config_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RewriterConfig, _impl_.post_optimization_verifier_config_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::AutoParallelOptions)},
        {10, -1, -1, sizeof(::tensorflow::ScopedAllocatorOptions)},
        {19, 29, -1, sizeof(::tensorflow::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse)},
        {31, -1, -1, sizeof(::tensorflow::RewriterConfig_CustomGraphOptimizer)},
        {41, 86, -1, sizeof(::tensorflow::RewriterConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_AutoParallelOptions_default_instance_._instance,
    &::tensorflow::_ScopedAllocatorOptions_default_instance_._instance,
    &::tensorflow::_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_RewriterConfig_CustomGraphOptimizer_default_instance_._instance,
    &::tensorflow::_RewriterConfig_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.tensorflow/core/protobuf/rewriter_conf"
    "ig.proto\022\ntensorflow\032*tensorflow/core/fr"
    "amework/attr_value.proto\032.tensorflow/cor"
    "e/protobuf/verifier_config.proto\";\n\023Auto"
    "ParallelOptions\022\016\n\006enable\030\001 \001(\010\022\024\n\014num_r"
    "eplicas\030\002 \001(\005\"+\n\026ScopedAllocatorOptions\022"
    "\021\n\tenable_op\030\001 \003(\t\"\225\026\n\016RewriterConfig\022C\n"
    "\025cpu_layout_conversion\0302 \001(\0162$.tensorflo"
    "w.RewriterConfig.CpuLayout\022;\n\020layout_opt"
    "imizer\030\001 \001(\0162!.tensorflow.RewriterConfig"
    ".Toggle\022;\n\020constant_folding\030\003 \001(\0162!.tens"
    "orflow.RewriterConfig.Toggle\022=\n\022shape_op"
    "timization\030\r \001(\0162!.tensorflow.RewriterCo"
    "nfig.Toggle\0224\n\tremapping\030\016 \001(\0162!.tensorf"
    "low.RewriterConfig.Toggle\022F\n\033common_subg"
    "raph_elimination\030\030 \001(\0162!.tensorflow.Rewr"
    "iterConfig.Toggle\022B\n\027arithmetic_optimiza"
    "tion\030\007 \001(\0162!.tensorflow.RewriterConfig.T"
    "oggle\022B\n\027dependency_optimization\030\010 \001(\0162!"
    ".tensorflow.RewriterConfig.Toggle\022<\n\021loo"
    "p_optimization\030\t \001(\0162!.tensorflow.Rewrit"
    "erConfig.Toggle\022@\n\025function_optimization"
    "\030\n \001(\0162!.tensorflow.RewriterConfig.Toggl"
    "e\0229\n\016debug_stripper\030\013 \001(\0162!.tensorflow.R"
    "ewriterConfig.Toggle\022\035\n\025disable_model_pr"
    "uning\030\002 \001(\010\022H\n\035scoped_allocator_optimiza"
    "tion\030\017 \001(\0162!.tensorflow.RewriterConfig.T"
    "oggle\022C\n\030pin_to_host_optimization\030\022 \001(\0162"
    "!.tensorflow.RewriterConfig.Toggle\022B\n\027im"
    "plementation_selector\030\026 \001(\0162!.tensorflow"
    ".RewriterConfig.Toggle\022\?\n\024auto_mixed_pre"
    "cision\030\027 \001(\0162!.tensorflow.RewriterConfig"
    ".Toggle\022C\n\030auto_mixed_precision_mkl\030\031 \001("
    "\0162!.tensorflow.RewriterConfig.Toggle\022O\n$"
    "auto_mixed_precision_onednn_bfloat16\030\037 \001"
    "(\0162!.tensorflow.RewriterConfig.Toggle\022C\n"
    "\030auto_mixed_precision_cpu\030\035 \001(\0162!.tensor"
    "flow.RewriterConfig.Toggle\022\036\n\026disable_me"
    "ta_optimizer\030\023 \001(\010\022\035\n\025disable_tfg_optimi"
    "zer\030  \001(\010\022@\n\025use_plugin_optimizers\030\034 \001(\016"
    "2!.tensorflow.RewriterConfig.Toggle\022O\n$e"
    "xperimental_conditional_code_motion\030\036 \001("
    "\0162!.tensorflow.RewriterConfig.Toggle\022O\n\031"
    "meta_optimizer_iterations\030\014 \001(\0162,.tensor"
    "flow.RewriterConfig.NumIterationsType\022\027\n"
    "\017min_graph_nodes\030\021 \001(\005\022;\n3experimental_d"
    "isable_compressed_tensor_optimization\030\032 "
    "\001(\010\022;\n3experimental_disable_folding_quan"
    "tization_emulation\030\033 \001(\010\022B\n\023memory_optim"
    "ization\030\004 \001(\0162%.tensorflow.RewriterConfi"
    "g.MemOptType\022/\n\'memory_optimizer_target_"
    "node_name_scope\030\006 \001(\t\022!\n\031meta_optimizer_"
    "timeout_ms\030\024 \001(\003\0226\n\rauto_parallel\030\005 \001(\0132"
    "\037.tensorflow.AutoParallelOptions\022 \n\030fail"
    "_on_optimizer_errors\030\025 \001(\010\022A\n\025scoped_all"
    "ocator_opts\030\020 \001(\0132\".tensorflow.ScopedAll"
    "ocatorOptions\022\022\n\noptimizers\030d \003(\t\022K\n\021cus"
    "tom_optimizers\030\310\001 \003(\0132/.tensorflow.Rewri"
    "terConfig.CustomGraphOptimizer\022D\n\037inter_"
    "optimizer_verifier_config\030\254\002 \001(\0132\032.tenso"
    "rflow.VerifierConfig\022F\n!post_optimizatio"
    "n_verifier_config\030\255\002 \001(\0132\032.tensorflow.Ve"
    "rifierConfig\032\312\001\n\024CustomGraphOptimizer\022\014\n"
    "\004name\030\001 \001(\t\022X\n\rparameter_map\030\002 \003(\0132A.ten"
    "sorflow.RewriterConfig.CustomGraphOptimi"
    "zer.ParameterMapEntry\032J\n\021ParameterMapEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025.tensorf"
    "low.AttrValue:\0028\001\"d\n\006Toggle\022\013\n\007DEFAULT\020\000"
    "\022\006\n\002ON\020\001\022\007\n\003OFF\020\002\022\016\n\nAGGRESSIVE\020\003\022\025\n\021EXP"
    "ERIMENTAL_MLIR\020\004\022\025\n\021EXPERIMENTAL_BOTH\020\005\""
    "I\n\tCpuLayout\022\030\n\024NO_CONVERSION_ON_CPU\020\000\022\020"
    "\n\014NCHW_TO_NHWC\020\001\022\020\n\014NHWC_TO_NCHW\020\002\"<\n\021Nu"
    "mIterationsType\022\025\n\021DEFAULT_NUM_ITERS\020\000\022\007"
    "\n\003ONE\020\001\022\007\n\003TWO\020\002\"\237\001\n\nMemOptType\022\023\n\017DEFAU"
    "LT_MEM_OPT\020\000\022\016\n\nNO_MEM_OPT\020\001\022\n\n\006MANUAL\020\002"
    "\022\027\n\023SWAPPING_HEURISTICS\020\004\022\034\n\030RECOMPUTATI"
    "ON_HEURISTICS\020\005\022\031\n\025SCHEDULING_HEURISTICS"
    "\020\006\022\016\n\nHEURISTICS\020\003B\214\001\n\030org.tensorflow.fr"
    "ameworkB\024RewriterConfigProtosP\001ZUgithub."
    "com/tensorflow/tensorflow/tensorflow/go/"
    "core/protobuf/for_core_protos_go_proto\370\001"
    "\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto_deps[2] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fverifier_5fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto = {
    false,
    false,
    3249,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
    "tensorflow/core/protobuf/rewriter_config.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto_deps,
    2,
    5,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
};
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* RewriterConfig_Toggle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RewriterConfig_Toggle_internal_data_[] = {
    393216u, 0u, };
bool RewriterConfig_Toggle_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RewriterConfig_Toggle RewriterConfig::DEFAULT;
constexpr RewriterConfig_Toggle RewriterConfig::ON;
constexpr RewriterConfig_Toggle RewriterConfig::OFF;
constexpr RewriterConfig_Toggle RewriterConfig::AGGRESSIVE;
constexpr RewriterConfig_Toggle RewriterConfig::EXPERIMENTAL_MLIR;
constexpr RewriterConfig_Toggle RewriterConfig::EXPERIMENTAL_BOTH;
constexpr RewriterConfig_Toggle RewriterConfig::Toggle_MIN;
constexpr RewriterConfig_Toggle RewriterConfig::Toggle_MAX;
constexpr int RewriterConfig::Toggle_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RewriterConfig_CpuLayout_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RewriterConfig_CpuLayout_internal_data_[] = {
    196608u, 0u, };
bool RewriterConfig_CpuLayout_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RewriterConfig_CpuLayout RewriterConfig::NO_CONVERSION_ON_CPU;
constexpr RewriterConfig_CpuLayout RewriterConfig::NCHW_TO_NHWC;
constexpr RewriterConfig_CpuLayout RewriterConfig::NHWC_TO_NCHW;
constexpr RewriterConfig_CpuLayout RewriterConfig::CpuLayout_MIN;
constexpr RewriterConfig_CpuLayout RewriterConfig::CpuLayout_MAX;
constexpr int RewriterConfig::CpuLayout_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RewriterConfig_NumIterationsType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t RewriterConfig_NumIterationsType_internal_data_[] = {
    196608u, 0u, };
bool RewriterConfig_NumIterationsType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RewriterConfig_NumIterationsType RewriterConfig::DEFAULT_NUM_ITERS;
constexpr RewriterConfig_NumIterationsType RewriterConfig::ONE;
constexpr RewriterConfig_NumIterationsType RewriterConfig::TWO;
constexpr RewriterConfig_NumIterationsType RewriterConfig::NumIterationsType_MIN;
constexpr RewriterConfig_NumIterationsType RewriterConfig::NumIterationsType_MAX;
constexpr int RewriterConfig::NumIterationsType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* RewriterConfig_MemOptType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t RewriterConfig_MemOptType_internal_data_[] = {
    458752u, 0u, };
bool RewriterConfig_MemOptType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RewriterConfig_MemOptType RewriterConfig::DEFAULT_MEM_OPT;
constexpr RewriterConfig_MemOptType RewriterConfig::NO_MEM_OPT;
constexpr RewriterConfig_MemOptType RewriterConfig::MANUAL;
constexpr RewriterConfig_MemOptType RewriterConfig::SWAPPING_HEURISTICS;
constexpr RewriterConfig_MemOptType RewriterConfig::RECOMPUTATION_HEURISTICS;
constexpr RewriterConfig_MemOptType RewriterConfig::SCHEDULING_HEURISTICS;
constexpr RewriterConfig_MemOptType RewriterConfig::HEURISTICS;
constexpr RewriterConfig_MemOptType RewriterConfig::MemOptType_MIN;
constexpr RewriterConfig_MemOptType RewriterConfig::MemOptType_MAX;
constexpr int RewriterConfig::MemOptType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class AutoParallelOptions::_Internal {
 public:
};

AutoParallelOptions::AutoParallelOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.AutoParallelOptions)
}
AutoParallelOptions::AutoParallelOptions(
    ::google::protobuf::Arena* arena, const AutoParallelOptions& from)
    : AutoParallelOptions(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AutoParallelOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AutoParallelOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_),
           0,
           offsetof(Impl_, num_replicas_) -
               offsetof(Impl_, enable_) +
               sizeof(Impl_::num_replicas_));
}
AutoParallelOptions::~AutoParallelOptions() {
  // @@protoc_insertion_point(destructor:tensorflow.AutoParallelOptions)
  SharedDtor(*this);
}
inline void AutoParallelOptions::SharedDtor(MessageLite& self) {
  AutoParallelOptions& this_ = static_cast<AutoParallelOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AutoParallelOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AutoParallelOptions(arena);
}
constexpr auto AutoParallelOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AutoParallelOptions),
                                            alignof(AutoParallelOptions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AutoParallelOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AutoParallelOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AutoParallelOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AutoParallelOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AutoParallelOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AutoParallelOptions>(), &AutoParallelOptions::ByteSizeLong,
            &AutoParallelOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_._cached_size_),
        false,
    },
    &AutoParallelOptions::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AutoParallelOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AutoParallelOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::AutoParallelOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 num_replicas = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AutoParallelOptions, _impl_.num_replicas_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_.num_replicas_)}},
    // bool enable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AutoParallelOptions, _impl_.enable_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_.enable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enable = 1;
    {PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_.enable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 num_replicas = 2;
    {PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_.num_replicas_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AutoParallelOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AutoParallelOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.enable_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.num_replicas_) -
      reinterpret_cast<char*>(&_impl_.enable_)) + sizeof(_impl_.num_replicas_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AutoParallelOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AutoParallelOptions& this_ = static_cast<const AutoParallelOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AutoParallelOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AutoParallelOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AutoParallelOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool enable = 1;
          if (this_._internal_enable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_enable(), target);
          }

          // int32 num_replicas = 2;
          if (this_._internal_num_replicas() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_num_replicas(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AutoParallelOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AutoParallelOptions::ByteSizeLong(const MessageLite& base) {
          const AutoParallelOptions& this_ = static_cast<const AutoParallelOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AutoParallelOptions::ByteSizeLong() const {
          const AutoParallelOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.AutoParallelOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool enable = 1;
            if (this_._internal_enable() != 0) {
              total_size += 2;
            }
            // int32 num_replicas = 2;
            if (this_._internal_num_replicas() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_replicas());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AutoParallelOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AutoParallelOptions*>(&to_msg);
  auto& from = static_cast<const AutoParallelOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AutoParallelOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable() != 0) {
    _this->_impl_.enable_ = from._impl_.enable_;
  }
  if (from._internal_num_replicas() != 0) {
    _this->_impl_.num_replicas_ = from._impl_.num_replicas_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AutoParallelOptions::CopyFrom(const AutoParallelOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AutoParallelOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AutoParallelOptions::InternalSwap(AutoParallelOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_.num_replicas_)
      + sizeof(AutoParallelOptions::_impl_.num_replicas_)
      - PROTOBUF_FIELD_OFFSET(AutoParallelOptions, _impl_.enable_)>(
          reinterpret_cast<char*>(&_impl_.enable_),
          reinterpret_cast<char*>(&other->_impl_.enable_));
}

::google::protobuf::Metadata AutoParallelOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScopedAllocatorOptions::_Internal {
 public:
};

ScopedAllocatorOptions::ScopedAllocatorOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ScopedAllocatorOptions)
}
inline PROTOBUF_NDEBUG_INLINE ScopedAllocatorOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::ScopedAllocatorOptions& from_msg)
      : enable_op_{visibility, arena, from.enable_op_},
        _cached_size_{0} {}

ScopedAllocatorOptions::ScopedAllocatorOptions(
    ::google::protobuf::Arena* arena,
    const ScopedAllocatorOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScopedAllocatorOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.ScopedAllocatorOptions)
}
inline PROTOBUF_NDEBUG_INLINE ScopedAllocatorOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : enable_op_{visibility, arena},
        _cached_size_{0} {}

inline void ScopedAllocatorOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScopedAllocatorOptions::~ScopedAllocatorOptions() {
  // @@protoc_insertion_point(destructor:tensorflow.ScopedAllocatorOptions)
  SharedDtor(*this);
}
inline void ScopedAllocatorOptions::SharedDtor(MessageLite& self) {
  ScopedAllocatorOptions& this_ = static_cast<ScopedAllocatorOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ScopedAllocatorOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScopedAllocatorOptions(arena);
}
constexpr auto ScopedAllocatorOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ScopedAllocatorOptions, _impl_.enable_op_) +
          decltype(ScopedAllocatorOptions::_impl_.enable_op_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ScopedAllocatorOptions), alignof(ScopedAllocatorOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ScopedAllocatorOptions::PlacementNew_,
                                 sizeof(ScopedAllocatorOptions),
                                 alignof(ScopedAllocatorOptions));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScopedAllocatorOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScopedAllocatorOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScopedAllocatorOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScopedAllocatorOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScopedAllocatorOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScopedAllocatorOptions>(), &ScopedAllocatorOptions::ByteSizeLong,
            &ScopedAllocatorOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScopedAllocatorOptions, _impl_._cached_size_),
        false,
    },
    &ScopedAllocatorOptions::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScopedAllocatorOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> ScopedAllocatorOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::ScopedAllocatorOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string enable_op = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ScopedAllocatorOptions, _impl_.enable_op_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string enable_op = 1;
    {PROTOBUF_FIELD_OFFSET(ScopedAllocatorOptions, _impl_.enable_op_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\0\0\0\0"
    "tensorflow.ScopedAllocatorOptions"
    "enable_op"
  }},
};

PROTOBUF_NOINLINE void ScopedAllocatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ScopedAllocatorOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enable_op_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScopedAllocatorOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScopedAllocatorOptions& this_ = static_cast<const ScopedAllocatorOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScopedAllocatorOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScopedAllocatorOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ScopedAllocatorOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string enable_op = 1;
          for (int i = 0, n = this_._internal_enable_op_size(); i < n; ++i) {
            const auto& s = this_._internal_enable_op().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.ScopedAllocatorOptions.enable_op");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ScopedAllocatorOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScopedAllocatorOptions::ByteSizeLong(const MessageLite& base) {
          const ScopedAllocatorOptions& this_ = static_cast<const ScopedAllocatorOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScopedAllocatorOptions::ByteSizeLong() const {
          const ScopedAllocatorOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.ScopedAllocatorOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string enable_op = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_enable_op().size());
              for (int i = 0, n = this_._internal_enable_op().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_enable_op().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScopedAllocatorOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScopedAllocatorOptions*>(&to_msg);
  auto& from = static_cast<const ScopedAllocatorOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ScopedAllocatorOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_enable_op()->MergeFrom(from._internal_enable_op());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScopedAllocatorOptions::CopyFrom(const ScopedAllocatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ScopedAllocatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScopedAllocatorOptions::InternalSwap(ScopedAllocatorOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.enable_op_.InternalSwap(&other->_impl_.enable_op_);
}

::google::protobuf::Metadata ScopedAllocatorOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse() : SuperType() {}
              RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse(arena);
              }
              constexpr auto RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse),
                                                          alignof(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 76, 2> RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.AttrValue value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.AttrValue value = 2;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer_ParameterMapEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::AttrValue>()},
  }}, {{
    "\100\3\0\0\0\0\0\0"
    "tensorflow.RewriterConfig.CustomGraphOptimizer.ParameterMapEntry"
    "key"
  }},
};

// ===================================================================

class RewriterConfig_CustomGraphOptimizer::_Internal {
 public:
};

void RewriterConfig_CustomGraphOptimizer::clear_parameter_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameter_map_.Clear();
}
RewriterConfig_CustomGraphOptimizer::RewriterConfig_CustomGraphOptimizer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RewriterConfig.CustomGraphOptimizer)
}
inline PROTOBUF_NDEBUG_INLINE RewriterConfig_CustomGraphOptimizer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::RewriterConfig_CustomGraphOptimizer& from_msg)
      : parameter_map_{visibility, arena, from.parameter_map_},
        name_(arena, from.name_),
        _cached_size_{0} {}

RewriterConfig_CustomGraphOptimizer::RewriterConfig_CustomGraphOptimizer(
    ::google::protobuf::Arena* arena,
    const RewriterConfig_CustomGraphOptimizer& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RewriterConfig_CustomGraphOptimizer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.RewriterConfig.CustomGraphOptimizer)
}
inline PROTOBUF_NDEBUG_INLINE RewriterConfig_CustomGraphOptimizer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : parameter_map_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void RewriterConfig_CustomGraphOptimizer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RewriterConfig_CustomGraphOptimizer::~RewriterConfig_CustomGraphOptimizer() {
  // @@protoc_insertion_point(destructor:tensorflow.RewriterConfig.CustomGraphOptimizer)
  SharedDtor(*this);
}
inline void RewriterConfig_CustomGraphOptimizer::SharedDtor(MessageLite& self) {
  RewriterConfig_CustomGraphOptimizer& this_ = static_cast<RewriterConfig_CustomGraphOptimizer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RewriterConfig_CustomGraphOptimizer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RewriterConfig_CustomGraphOptimizer(arena);
}
constexpr auto RewriterConfig_CustomGraphOptimizer::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer, _impl_.parameter_map_) +
          decltype(RewriterConfig_CustomGraphOptimizer::_impl_.parameter_map_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer, _impl_.parameter_map_) +
          decltype(RewriterConfig_CustomGraphOptimizer::_impl_.parameter_map_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RewriterConfig_CustomGraphOptimizer), alignof(RewriterConfig_CustomGraphOptimizer), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RewriterConfig_CustomGraphOptimizer::PlacementNew_,
                                 sizeof(RewriterConfig_CustomGraphOptimizer),
                                 alignof(RewriterConfig_CustomGraphOptimizer));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RewriterConfig_CustomGraphOptimizer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RewriterConfig_CustomGraphOptimizer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RewriterConfig_CustomGraphOptimizer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RewriterConfig_CustomGraphOptimizer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RewriterConfig_CustomGraphOptimizer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RewriterConfig_CustomGraphOptimizer>(), &RewriterConfig_CustomGraphOptimizer::ByteSizeLong,
            &RewriterConfig_CustomGraphOptimizer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer, _impl_._cached_size_),
        false,
    },
    &RewriterConfig_CustomGraphOptimizer::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RewriterConfig_CustomGraphOptimizer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 72, 2> RewriterConfig_CustomGraphOptimizer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::RewriterConfig_CustomGraphOptimizer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .tensorflow.AttrValue> parameter_map = 2;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig_CustomGraphOptimizer, _impl_.parameter_map_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RewriterConfig_CustomGraphOptimizer()._impl_.parameter_map_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::tensorflow::AttrValue>()},
  }}, {{
    "\56\4\15\0\0\0\0\0"
    "tensorflow.RewriterConfig.CustomGraphOptimizer"
    "name"
    "parameter_map"
  }},
};

PROTOBUF_NOINLINE void RewriterConfig_CustomGraphOptimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RewriterConfig.CustomGraphOptimizer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameter_map_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RewriterConfig_CustomGraphOptimizer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RewriterConfig_CustomGraphOptimizer& this_ = static_cast<const RewriterConfig_CustomGraphOptimizer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RewriterConfig_CustomGraphOptimizer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RewriterConfig_CustomGraphOptimizer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RewriterConfig.CustomGraphOptimizer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RewriterConfig.CustomGraphOptimizer.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // map<string, .tensorflow.AttrValue> parameter_map = 2;
          if (!this_._internal_parameter_map().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::tensorflow::AttrValue>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::tensorflow::AttrValue,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_parameter_map();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RewriterConfig.CustomGraphOptimizer.parameter_map");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RewriterConfig.CustomGraphOptimizer.parameter_map");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RewriterConfig.CustomGraphOptimizer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RewriterConfig_CustomGraphOptimizer::ByteSizeLong(const MessageLite& base) {
          const RewriterConfig_CustomGraphOptimizer& this_ = static_cast<const RewriterConfig_CustomGraphOptimizer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RewriterConfig_CustomGraphOptimizer::ByteSizeLong() const {
          const RewriterConfig_CustomGraphOptimizer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.RewriterConfig.CustomGraphOptimizer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .tensorflow.AttrValue> parameter_map = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameter_map_size());
              for (const auto& entry : this_._internal_parameter_map()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::tensorflow::AttrValue,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RewriterConfig_CustomGraphOptimizer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RewriterConfig_CustomGraphOptimizer*>(&to_msg);
  auto& from = static_cast<const RewriterConfig_CustomGraphOptimizer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RewriterConfig.CustomGraphOptimizer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameter_map_.MergeFrom(from._impl_.parameter_map_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RewriterConfig_CustomGraphOptimizer::CopyFrom(const RewriterConfig_CustomGraphOptimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RewriterConfig.CustomGraphOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RewriterConfig_CustomGraphOptimizer::InternalSwap(RewriterConfig_CustomGraphOptimizer* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameter_map_.InternalSwap(&other->_impl_.parameter_map_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata RewriterConfig_CustomGraphOptimizer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RewriterConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RewriterConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_._has_bits_);
};

void RewriterConfig::clear_inter_optimizer_verifier_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inter_optimizer_verifier_config_ != nullptr) _impl_.inter_optimizer_verifier_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void RewriterConfig::clear_post_optimization_verifier_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.post_optimization_verifier_config_ != nullptr) _impl_.post_optimization_verifier_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
RewriterConfig::RewriterConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RewriterConfig)
}
inline PROTOBUF_NDEBUG_INLINE RewriterConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::RewriterConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        optimizers_{visibility, arena, from.optimizers_},
        custom_optimizers_{visibility, arena, from.custom_optimizers_},
        memory_optimizer_target_node_name_scope_(arena, from.memory_optimizer_target_node_name_scope_) {}

RewriterConfig::RewriterConfig(
    ::google::protobuf::Arena* arena,
    const RewriterConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RewriterConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.auto_parallel_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::AutoParallelOptions>(
                              arena, *from._impl_.auto_parallel_)
                        : nullptr;
  _impl_.scoped_allocator_opts_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::ScopedAllocatorOptions>(
                              arena, *from._impl_.scoped_allocator_opts_)
                        : nullptr;
  _impl_.inter_optimizer_verifier_config_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::VerifierConfig>(
                              arena, *from._impl_.inter_optimizer_verifier_config_)
                        : nullptr;
  _impl_.post_optimization_verifier_config_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::VerifierConfig>(
                              arena, *from._impl_.post_optimization_verifier_config_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, layout_optimizer_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, layout_optimizer_),
           offsetof(Impl_, cpu_layout_conversion_) -
               offsetof(Impl_, layout_optimizer_) +
               sizeof(Impl_::cpu_layout_conversion_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.RewriterConfig)
}
inline PROTOBUF_NDEBUG_INLINE RewriterConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        optimizers_{visibility, arena},
        custom_optimizers_{visibility, arena},
        memory_optimizer_target_node_name_scope_(arena) {}

inline void RewriterConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, auto_parallel_),
           0,
           offsetof(Impl_, cpu_layout_conversion_) -
               offsetof(Impl_, auto_parallel_) +
               sizeof(Impl_::cpu_layout_conversion_));
}
RewriterConfig::~RewriterConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.RewriterConfig)
  SharedDtor(*this);
}
inline void RewriterConfig::SharedDtor(MessageLite& self) {
  RewriterConfig& this_ = static_cast<RewriterConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.memory_optimizer_target_node_name_scope_.Destroy();
  delete this_._impl_.auto_parallel_;
  delete this_._impl_.scoped_allocator_opts_;
  delete this_._impl_.inter_optimizer_verifier_config_;
  delete this_._impl_.post_optimization_verifier_config_;
  this_._impl_.~Impl_();
}

inline void* RewriterConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RewriterConfig(arena);
}
constexpr auto RewriterConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.optimizers_) +
          decltype(RewriterConfig::_impl_.optimizers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.custom_optimizers_) +
          decltype(RewriterConfig::_impl_.custom_optimizers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RewriterConfig), alignof(RewriterConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RewriterConfig::PlacementNew_,
                                 sizeof(RewriterConfig),
                                 alignof(RewriterConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RewriterConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RewriterConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RewriterConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RewriterConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RewriterConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RewriterConfig>(), &RewriterConfig::ByteSizeLong,
            &RewriterConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_._cached_size_),
        false,
    },
    &RewriterConfig::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RewriterConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 37, 5, 115, 23> RewriterConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_._has_bits_),
    0, // no _extensions_
    301, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    37,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::RewriterConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tensorflow.RewriterConfig.Toggle layout_optimizer = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.layout_optimizer_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.layout_optimizer_)}},
    // bool disable_model_pruning = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RewriterConfig, _impl_.disable_model_pruning_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.disable_model_pruning_)}},
    // .tensorflow.RewriterConfig.Toggle constant_folding = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.constant_folding_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.constant_folding_)}},
    // .tensorflow.RewriterConfig.MemOptType memory_optimization = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.memory_optimization_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.memory_optimization_)}},
    // .tensorflow.AutoParallelOptions auto_parallel = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_parallel_)}},
    // string memory_optimizer_target_node_name_scope = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.memory_optimizer_target_node_name_scope_)}},
    // .tensorflow.RewriterConfig.Toggle arithmetic_optimization = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.arithmetic_optimization_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.arithmetic_optimization_)}},
    // .tensorflow.RewriterConfig.Toggle dependency_optimization = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.dependency_optimization_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.dependency_optimization_)}},
    // .tensorflow.RewriterConfig.Toggle loop_optimization = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.loop_optimization_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.loop_optimization_)}},
    // .tensorflow.RewriterConfig.Toggle function_optimization = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.function_optimization_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.function_optimization_)}},
    // .tensorflow.RewriterConfig.Toggle debug_stripper = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.debug_stripper_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.debug_stripper_)}},
    // .tensorflow.RewriterConfig.NumIterationsType meta_optimizer_iterations = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.meta_optimizer_iterations_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.meta_optimizer_iterations_)}},
    // .tensorflow.RewriterConfig.Toggle shape_optimization = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.shape_optimization_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.shape_optimization_)}},
    // .tensorflow.RewriterConfig.Toggle remapping = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.remapping_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.remapping_)}},
    // .tensorflow.RewriterConfig.Toggle scoped_allocator_optimization = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RewriterConfig, _impl_.scoped_allocator_optimization_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.scoped_allocator_optimization_)}},
    // .tensorflow.ScopedAllocatorOptions scoped_allocator_opts = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 1, 1, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.scoped_allocator_opts_)}},
    // int32 min_graph_nodes = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.min_graph_nodes_)}},
    // .tensorflow.RewriterConfig.Toggle pin_to_host_optimization = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.pin_to_host_optimization_)}},
    // bool disable_meta_optimizer = 19;
    {::_pbi::TcParser::FastV8S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.disable_meta_optimizer_)}},
    // int64 meta_optimizer_timeout_ms = 20;
    {::_pbi::TcParser::FastV64S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.meta_optimizer_timeout_ms_)}},
    // bool fail_on_optimizer_errors = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.fail_on_optimizer_errors_)}},
    // .tensorflow.RewriterConfig.Toggle implementation_selector = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.implementation_selector_)}},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_)}},
    // .tensorflow.RewriterConfig.Toggle common_subgraph_elimination = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.common_subgraph_elimination_)}},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_mkl = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_mkl_)}},
    // bool experimental_disable_compressed_tensor_optimization = 26;
    {::_pbi::TcParser::FastV8S2,
     {464, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.experimental_disable_compressed_tensor_optimization_)}},
    // bool experimental_disable_folding_quantization_emulation = 27;
    {::_pbi::TcParser::FastV8S2,
     {472, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.experimental_disable_folding_quantization_emulation_)}},
    // .tensorflow.RewriterConfig.Toggle use_plugin_optimizers = 28;
    {::_pbi::TcParser::FastV32S2,
     {480, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.use_plugin_optimizers_)}},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_cpu = 29;
    {::_pbi::TcParser::FastV32S2,
     {488, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_cpu_)}},
    // .tensorflow.RewriterConfig.Toggle experimental_conditional_code_motion = 30;
    {::_pbi::TcParser::FastV32S2,
     {496, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.experimental_conditional_code_motion_)}},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_onednn_bfloat16 = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 63, 0, PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_onednn_bfloat16_)}},
  }}, {{
    50, 0, 4,
    65534, 32, 65535, 33, 65535, 33, 65531, 33,200, 0, 1,
     65534, 34,300, 0, 1,
     65532, 35,
    65535, 65535
  }}, {{
    // .tensorflow.RewriterConfig.Toggle layout_optimizer = 1;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.layout_optimizer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool disable_model_pruning = 2;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.disable_model_pruning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tensorflow.RewriterConfig.Toggle constant_folding = 3;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.constant_folding_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.MemOptType memory_optimization = 4;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.memory_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.AutoParallelOptions auto_parallel = 5;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_parallel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string memory_optimizer_target_node_name_scope = 6;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.memory_optimizer_target_node_name_scope_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.RewriterConfig.Toggle arithmetic_optimization = 7;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.arithmetic_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle dependency_optimization = 8;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.dependency_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle loop_optimization = 9;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.loop_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle function_optimization = 10;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.function_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle debug_stripper = 11;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.debug_stripper_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.NumIterationsType meta_optimizer_iterations = 12;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.meta_optimizer_iterations_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle shape_optimization = 13;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.shape_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle remapping = 14;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.remapping_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle scoped_allocator_optimization = 15;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.scoped_allocator_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.ScopedAllocatorOptions scoped_allocator_opts = 16;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.scoped_allocator_opts_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 min_graph_nodes = 17;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.min_graph_nodes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tensorflow.RewriterConfig.Toggle pin_to_host_optimization = 18;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.pin_to_host_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool disable_meta_optimizer = 19;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.disable_meta_optimizer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 meta_optimizer_timeout_ms = 20;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.meta_optimizer_timeout_ms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool fail_on_optimizer_errors = 21;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.fail_on_optimizer_errors_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tensorflow.RewriterConfig.Toggle implementation_selector = 22;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.implementation_selector_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision = 23;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle common_subgraph_elimination = 24;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.common_subgraph_elimination_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_mkl = 25;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_mkl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool experimental_disable_compressed_tensor_optimization = 26;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.experimental_disable_compressed_tensor_optimization_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool experimental_disable_folding_quantization_emulation = 27;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.experimental_disable_folding_quantization_emulation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tensorflow.RewriterConfig.Toggle use_plugin_optimizers = 28;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.use_plugin_optimizers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_cpu = 29;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_cpu_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle experimental_conditional_code_motion = 30;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.experimental_conditional_code_motion_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_onednn_bfloat16 = 31;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_mixed_precision_onednn_bfloat16_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool disable_tfg_optimizer = 32;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.disable_tfg_optimizer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tensorflow.RewriterConfig.CpuLayout cpu_layout_conversion = 50;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.cpu_layout_conversion_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated string optimizers = 100;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.optimizers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .tensorflow.RewriterConfig.CustomGraphOptimizer custom_optimizers = 200;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.custom_optimizers_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.VerifierConfig inter_optimizer_verifier_config = 300;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.inter_optimizer_verifier_config_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.VerifierConfig post_optimization_verifier_config = 301;
    {PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.post_optimization_verifier_config_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::AutoParallelOptions>()},
    {::_pbi::TcParser::GetTable<::tensorflow::ScopedAllocatorOptions>()},
    {::_pbi::TcParser::GetTable<::tensorflow::RewriterConfig_CustomGraphOptimizer>()},
    {::_pbi::TcParser::GetTable<::tensorflow::VerifierConfig>()},
    {::_pbi::TcParser::GetTable<::tensorflow::VerifierConfig>()},
  }}, {{
    "\31\0\0\0\0\0\47\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\12\0\0\0\0\0"
    "tensorflow.RewriterConfig"
    "memory_optimizer_target_node_name_scope"
    "optimizers"
  }},
};

PROTOBUF_NOINLINE void RewriterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RewriterConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.optimizers_.Clear();
  _impl_.custom_optimizers_.Clear();
  _impl_.memory_optimizer_target_node_name_scope_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.auto_parallel_ != nullptr);
      _impl_.auto_parallel_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.scoped_allocator_opts_ != nullptr);
      _impl_.scoped_allocator_opts_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.inter_optimizer_verifier_config_ != nullptr);
      _impl_.inter_optimizer_verifier_config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.post_optimization_verifier_config_ != nullptr);
      _impl_.post_optimization_verifier_config_->Clear();
    }
  }
  ::memset(&_impl_.layout_optimizer_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cpu_layout_conversion_) -
      reinterpret_cast<char*>(&_impl_.layout_optimizer_)) + sizeof(_impl_.cpu_layout_conversion_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RewriterConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RewriterConfig& this_ = static_cast<const RewriterConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RewriterConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RewriterConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RewriterConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tensorflow.RewriterConfig.Toggle layout_optimizer = 1;
          if (this_._internal_layout_optimizer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_layout_optimizer(), target);
          }

          // bool disable_model_pruning = 2;
          if (this_._internal_disable_model_pruning() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_disable_model_pruning(), target);
          }

          // .tensorflow.RewriterConfig.Toggle constant_folding = 3;
          if (this_._internal_constant_folding() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_constant_folding(), target);
          }

          // .tensorflow.RewriterConfig.MemOptType memory_optimization = 4;
          if (this_._internal_memory_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_memory_optimization(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.AutoParallelOptions auto_parallel = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.auto_parallel_, this_._impl_.auto_parallel_->GetCachedSize(), target,
                stream);
          }

          // string memory_optimizer_target_node_name_scope = 6;
          if (!this_._internal_memory_optimizer_target_node_name_scope().empty()) {
            const std::string& _s = this_._internal_memory_optimizer_target_node_name_scope();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RewriterConfig.memory_optimizer_target_node_name_scope");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .tensorflow.RewriterConfig.Toggle arithmetic_optimization = 7;
          if (this_._internal_arithmetic_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_arithmetic_optimization(), target);
          }

          // .tensorflow.RewriterConfig.Toggle dependency_optimization = 8;
          if (this_._internal_dependency_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_dependency_optimization(), target);
          }

          // .tensorflow.RewriterConfig.Toggle loop_optimization = 9;
          if (this_._internal_loop_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_loop_optimization(), target);
          }

          // .tensorflow.RewriterConfig.Toggle function_optimization = 10;
          if (this_._internal_function_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_function_optimization(), target);
          }

          // .tensorflow.RewriterConfig.Toggle debug_stripper = 11;
          if (this_._internal_debug_stripper() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                11, this_._internal_debug_stripper(), target);
          }

          // .tensorflow.RewriterConfig.NumIterationsType meta_optimizer_iterations = 12;
          if (this_._internal_meta_optimizer_iterations() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_meta_optimizer_iterations(), target);
          }

          // .tensorflow.RewriterConfig.Toggle shape_optimization = 13;
          if (this_._internal_shape_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                13, this_._internal_shape_optimization(), target);
          }

          // .tensorflow.RewriterConfig.Toggle remapping = 14;
          if (this_._internal_remapping() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                14, this_._internal_remapping(), target);
          }

          // .tensorflow.RewriterConfig.Toggle scoped_allocator_optimization = 15;
          if (this_._internal_scoped_allocator_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                15, this_._internal_scoped_allocator_optimization(), target);
          }

          // .tensorflow.ScopedAllocatorOptions scoped_allocator_opts = 16;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.scoped_allocator_opts_, this_._impl_.scoped_allocator_opts_->GetCachedSize(), target,
                stream);
          }

          // int32 min_graph_nodes = 17;
          if (this_._internal_min_graph_nodes() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                17, this_._internal_min_graph_nodes(), target);
          }

          // .tensorflow.RewriterConfig.Toggle pin_to_host_optimization = 18;
          if (this_._internal_pin_to_host_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                18, this_._internal_pin_to_host_optimization(), target);
          }

          // bool disable_meta_optimizer = 19;
          if (this_._internal_disable_meta_optimizer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                19, this_._internal_disable_meta_optimizer(), target);
          }

          // int64 meta_optimizer_timeout_ms = 20;
          if (this_._internal_meta_optimizer_timeout_ms() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                20, this_._internal_meta_optimizer_timeout_ms(), target);
          }

          // bool fail_on_optimizer_errors = 21;
          if (this_._internal_fail_on_optimizer_errors() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_fail_on_optimizer_errors(), target);
          }

          // .tensorflow.RewriterConfig.Toggle implementation_selector = 22;
          if (this_._internal_implementation_selector() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                22, this_._internal_implementation_selector(), target);
          }

          // .tensorflow.RewriterConfig.Toggle auto_mixed_precision = 23;
          if (this_._internal_auto_mixed_precision() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                23, this_._internal_auto_mixed_precision(), target);
          }

          // .tensorflow.RewriterConfig.Toggle common_subgraph_elimination = 24;
          if (this_._internal_common_subgraph_elimination() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                24, this_._internal_common_subgraph_elimination(), target);
          }

          // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_mkl = 25;
          if (this_._internal_auto_mixed_precision_mkl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                25, this_._internal_auto_mixed_precision_mkl(), target);
          }

          // bool experimental_disable_compressed_tensor_optimization = 26;
          if (this_._internal_experimental_disable_compressed_tensor_optimization() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                26, this_._internal_experimental_disable_compressed_tensor_optimization(), target);
          }

          // bool experimental_disable_folding_quantization_emulation = 27;
          if (this_._internal_experimental_disable_folding_quantization_emulation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                27, this_._internal_experimental_disable_folding_quantization_emulation(), target);
          }

          // .tensorflow.RewriterConfig.Toggle use_plugin_optimizers = 28;
          if (this_._internal_use_plugin_optimizers() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                28, this_._internal_use_plugin_optimizers(), target);
          }

          // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_cpu = 29;
          if (this_._internal_auto_mixed_precision_cpu() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                29, this_._internal_auto_mixed_precision_cpu(), target);
          }

          // .tensorflow.RewriterConfig.Toggle experimental_conditional_code_motion = 30;
          if (this_._internal_experimental_conditional_code_motion() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                30, this_._internal_experimental_conditional_code_motion(), target);
          }

          // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_onednn_bfloat16 = 31;
          if (this_._internal_auto_mixed_precision_onednn_bfloat16() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                31, this_._internal_auto_mixed_precision_onednn_bfloat16(), target);
          }

          // bool disable_tfg_optimizer = 32;
          if (this_._internal_disable_tfg_optimizer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                32, this_._internal_disable_tfg_optimizer(), target);
          }

          // .tensorflow.RewriterConfig.CpuLayout cpu_layout_conversion = 50;
          if (this_._internal_cpu_layout_conversion() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                50, this_._internal_cpu_layout_conversion(), target);
          }

          // repeated string optimizers = 100;
          for (int i = 0, n = this_._internal_optimizers_size(); i < n; ++i) {
            const auto& s = this_._internal_optimizers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RewriterConfig.optimizers");
            target = stream->WriteString(100, s, target);
          }

          // repeated .tensorflow.RewriterConfig.CustomGraphOptimizer custom_optimizers = 200;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_custom_optimizers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_custom_optimizers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    200, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tensorflow.VerifierConfig inter_optimizer_verifier_config = 300;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                300, *this_._impl_.inter_optimizer_verifier_config_, this_._impl_.inter_optimizer_verifier_config_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.VerifierConfig post_optimization_verifier_config = 301;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                301, *this_._impl_.post_optimization_verifier_config_, this_._impl_.post_optimization_verifier_config_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RewriterConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RewriterConfig::ByteSizeLong(const MessageLite& base) {
          const RewriterConfig& this_ = static_cast<const RewriterConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RewriterConfig::ByteSizeLong() const {
          const RewriterConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.RewriterConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string optimizers = 100;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_optimizers().size());
              for (int i = 0, n = this_._internal_optimizers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_optimizers().Get(i));
              }
            }
            // repeated .tensorflow.RewriterConfig.CustomGraphOptimizer custom_optimizers = 200;
            {
              total_size += 2UL * this_._internal_custom_optimizers_size();
              for (const auto& msg : this_._internal_custom_optimizers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string memory_optimizer_target_node_name_scope = 6;
            if (!this_._internal_memory_optimizer_target_node_name_scope().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_memory_optimizer_target_node_name_scope());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .tensorflow.AutoParallelOptions auto_parallel = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.auto_parallel_);
            }
            // .tensorflow.ScopedAllocatorOptions scoped_allocator_opts = 16;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scoped_allocator_opts_);
            }
            // .tensorflow.VerifierConfig inter_optimizer_verifier_config = 300;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.inter_optimizer_verifier_config_);
            }
            // .tensorflow.VerifierConfig post_optimization_verifier_config = 301;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.post_optimization_verifier_config_);
            }
          }
           {
            // .tensorflow.RewriterConfig.Toggle layout_optimizer = 1;
            if (this_._internal_layout_optimizer() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_layout_optimizer());
            }
            // .tensorflow.RewriterConfig.Toggle constant_folding = 3;
            if (this_._internal_constant_folding() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_constant_folding());
            }
            // .tensorflow.RewriterConfig.MemOptType memory_optimization = 4;
            if (this_._internal_memory_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_memory_optimization());
            }
            // .tensorflow.RewriterConfig.Toggle arithmetic_optimization = 7;
            if (this_._internal_arithmetic_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_arithmetic_optimization());
            }
            // .tensorflow.RewriterConfig.Toggle dependency_optimization = 8;
            if (this_._internal_dependency_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dependency_optimization());
            }
            // .tensorflow.RewriterConfig.Toggle loop_optimization = 9;
            if (this_._internal_loop_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_loop_optimization());
            }
            // .tensorflow.RewriterConfig.Toggle function_optimization = 10;
            if (this_._internal_function_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_function_optimization());
            }
            // .tensorflow.RewriterConfig.Toggle debug_stripper = 11;
            if (this_._internal_debug_stripper() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_debug_stripper());
            }
            // .tensorflow.RewriterConfig.NumIterationsType meta_optimizer_iterations = 12;
            if (this_._internal_meta_optimizer_iterations() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_meta_optimizer_iterations());
            }
            // .tensorflow.RewriterConfig.Toggle shape_optimization = 13;
            if (this_._internal_shape_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_shape_optimization());
            }
            // .tensorflow.RewriterConfig.Toggle remapping = 14;
            if (this_._internal_remapping() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_remapping());
            }
            // .tensorflow.RewriterConfig.Toggle scoped_allocator_optimization = 15;
            if (this_._internal_scoped_allocator_optimization() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_scoped_allocator_optimization());
            }
            // int32 min_graph_nodes = 17;
            if (this_._internal_min_graph_nodes() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_min_graph_nodes());
            }
            // .tensorflow.RewriterConfig.Toggle pin_to_host_optimization = 18;
            if (this_._internal_pin_to_host_optimization() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_pin_to_host_optimization());
            }
            // int64 meta_optimizer_timeout_ms = 20;
            if (this_._internal_meta_optimizer_timeout_ms() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_meta_optimizer_timeout_ms());
            }
            // bool disable_model_pruning = 2;
            if (this_._internal_disable_model_pruning() != 0) {
              total_size += 2;
            }
            // bool disable_meta_optimizer = 19;
            if (this_._internal_disable_meta_optimizer() != 0) {
              total_size += 3;
            }
            // bool disable_tfg_optimizer = 32;
            if (this_._internal_disable_tfg_optimizer() != 0) {
              total_size += 3;
            }
            // bool experimental_disable_compressed_tensor_optimization = 26;
            if (this_._internal_experimental_disable_compressed_tensor_optimization() != 0) {
              total_size += 3;
            }
            // .tensorflow.RewriterConfig.Toggle implementation_selector = 22;
            if (this_._internal_implementation_selector() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_implementation_selector());
            }
            // .tensorflow.RewriterConfig.Toggle auto_mixed_precision = 23;
            if (this_._internal_auto_mixed_precision() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_auto_mixed_precision());
            }
            // .tensorflow.RewriterConfig.Toggle common_subgraph_elimination = 24;
            if (this_._internal_common_subgraph_elimination() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_common_subgraph_elimination());
            }
            // bool experimental_disable_folding_quantization_emulation = 27;
            if (this_._internal_experimental_disable_folding_quantization_emulation() != 0) {
              total_size += 3;
            }
            // bool fail_on_optimizer_errors = 21;
            if (this_._internal_fail_on_optimizer_errors() != 0) {
              total_size += 3;
            }
            // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_mkl = 25;
            if (this_._internal_auto_mixed_precision_mkl() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_auto_mixed_precision_mkl());
            }
            // .tensorflow.RewriterConfig.Toggle use_plugin_optimizers = 28;
            if (this_._internal_use_plugin_optimizers() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_use_plugin_optimizers());
            }
            // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_cpu = 29;
            if (this_._internal_auto_mixed_precision_cpu() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_auto_mixed_precision_cpu());
            }
            // .tensorflow.RewriterConfig.Toggle experimental_conditional_code_motion = 30;
            if (this_._internal_experimental_conditional_code_motion() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_experimental_conditional_code_motion());
            }
            // .tensorflow.RewriterConfig.Toggle auto_mixed_precision_onednn_bfloat16 = 31;
            if (this_._internal_auto_mixed_precision_onednn_bfloat16() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_auto_mixed_precision_onednn_bfloat16());
            }
            // .tensorflow.RewriterConfig.CpuLayout cpu_layout_conversion = 50;
            if (this_._internal_cpu_layout_conversion() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_cpu_layout_conversion());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RewriterConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RewriterConfig*>(&to_msg);
  auto& from = static_cast<const RewriterConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RewriterConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_optimizers()->MergeFrom(from._internal_optimizers());
  _this->_internal_mutable_custom_optimizers()->MergeFrom(
      from._internal_custom_optimizers());
  if (!from._internal_memory_optimizer_target_node_name_scope().empty()) {
    _this->_internal_set_memory_optimizer_target_node_name_scope(from._internal_memory_optimizer_target_node_name_scope());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.auto_parallel_ != nullptr);
      if (_this->_impl_.auto_parallel_ == nullptr) {
        _this->_impl_.auto_parallel_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::AutoParallelOptions>(arena, *from._impl_.auto_parallel_);
      } else {
        _this->_impl_.auto_parallel_->MergeFrom(*from._impl_.auto_parallel_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.scoped_allocator_opts_ != nullptr);
      if (_this->_impl_.scoped_allocator_opts_ == nullptr) {
        _this->_impl_.scoped_allocator_opts_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::ScopedAllocatorOptions>(arena, *from._impl_.scoped_allocator_opts_);
      } else {
        _this->_impl_.scoped_allocator_opts_->MergeFrom(*from._impl_.scoped_allocator_opts_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.inter_optimizer_verifier_config_ != nullptr);
      if (_this->_impl_.inter_optimizer_verifier_config_ == nullptr) {
        _this->_impl_.inter_optimizer_verifier_config_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::VerifierConfig>(arena, *from._impl_.inter_optimizer_verifier_config_);
      } else {
        _this->_impl_.inter_optimizer_verifier_config_->MergeFrom(*from._impl_.inter_optimizer_verifier_config_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.post_optimization_verifier_config_ != nullptr);
      if (_this->_impl_.post_optimization_verifier_config_ == nullptr) {
        _this->_impl_.post_optimization_verifier_config_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::VerifierConfig>(arena, *from._impl_.post_optimization_verifier_config_);
      } else {
        _this->_impl_.post_optimization_verifier_config_->MergeFrom(*from._impl_.post_optimization_verifier_config_);
      }
    }
  }
  if (from._internal_layout_optimizer() != 0) {
    _this->_impl_.layout_optimizer_ = from._impl_.layout_optimizer_;
  }
  if (from._internal_constant_folding() != 0) {
    _this->_impl_.constant_folding_ = from._impl_.constant_folding_;
  }
  if (from._internal_memory_optimization() != 0) {
    _this->_impl_.memory_optimization_ = from._impl_.memory_optimization_;
  }
  if (from._internal_arithmetic_optimization() != 0) {
    _this->_impl_.arithmetic_optimization_ = from._impl_.arithmetic_optimization_;
  }
  if (from._internal_dependency_optimization() != 0) {
    _this->_impl_.dependency_optimization_ = from._impl_.dependency_optimization_;
  }
  if (from._internal_loop_optimization() != 0) {
    _this->_impl_.loop_optimization_ = from._impl_.loop_optimization_;
  }
  if (from._internal_function_optimization() != 0) {
    _this->_impl_.function_optimization_ = from._impl_.function_optimization_;
  }
  if (from._internal_debug_stripper() != 0) {
    _this->_impl_.debug_stripper_ = from._impl_.debug_stripper_;
  }
  if (from._internal_meta_optimizer_iterations() != 0) {
    _this->_impl_.meta_optimizer_iterations_ = from._impl_.meta_optimizer_iterations_;
  }
  if (from._internal_shape_optimization() != 0) {
    _this->_impl_.shape_optimization_ = from._impl_.shape_optimization_;
  }
  if (from._internal_remapping() != 0) {
    _this->_impl_.remapping_ = from._impl_.remapping_;
  }
  if (from._internal_scoped_allocator_optimization() != 0) {
    _this->_impl_.scoped_allocator_optimization_ = from._impl_.scoped_allocator_optimization_;
  }
  if (from._internal_min_graph_nodes() != 0) {
    _this->_impl_.min_graph_nodes_ = from._impl_.min_graph_nodes_;
  }
  if (from._internal_pin_to_host_optimization() != 0) {
    _this->_impl_.pin_to_host_optimization_ = from._impl_.pin_to_host_optimization_;
  }
  if (from._internal_meta_optimizer_timeout_ms() != 0) {
    _this->_impl_.meta_optimizer_timeout_ms_ = from._impl_.meta_optimizer_timeout_ms_;
  }
  if (from._internal_disable_model_pruning() != 0) {
    _this->_impl_.disable_model_pruning_ = from._impl_.disable_model_pruning_;
  }
  if (from._internal_disable_meta_optimizer() != 0) {
    _this->_impl_.disable_meta_optimizer_ = from._impl_.disable_meta_optimizer_;
  }
  if (from._internal_disable_tfg_optimizer() != 0) {
    _this->_impl_.disable_tfg_optimizer_ = from._impl_.disable_tfg_optimizer_;
  }
  if (from._internal_experimental_disable_compressed_tensor_optimization() != 0) {
    _this->_impl_.experimental_disable_compressed_tensor_optimization_ = from._impl_.experimental_disable_compressed_tensor_optimization_;
  }
  if (from._internal_implementation_selector() != 0) {
    _this->_impl_.implementation_selector_ = from._impl_.implementation_selector_;
  }
  if (from._internal_auto_mixed_precision() != 0) {
    _this->_impl_.auto_mixed_precision_ = from._impl_.auto_mixed_precision_;
  }
  if (from._internal_common_subgraph_elimination() != 0) {
    _this->_impl_.common_subgraph_elimination_ = from._impl_.common_subgraph_elimination_;
  }
  if (from._internal_experimental_disable_folding_quantization_emulation() != 0) {
    _this->_impl_.experimental_disable_folding_quantization_emulation_ = from._impl_.experimental_disable_folding_quantization_emulation_;
  }
  if (from._internal_fail_on_optimizer_errors() != 0) {
    _this->_impl_.fail_on_optimizer_errors_ = from._impl_.fail_on_optimizer_errors_;
  }
  if (from._internal_auto_mixed_precision_mkl() != 0) {
    _this->_impl_.auto_mixed_precision_mkl_ = from._impl_.auto_mixed_precision_mkl_;
  }
  if (from._internal_use_plugin_optimizers() != 0) {
    _this->_impl_.use_plugin_optimizers_ = from._impl_.use_plugin_optimizers_;
  }
  if (from._internal_auto_mixed_precision_cpu() != 0) {
    _this->_impl_.auto_mixed_precision_cpu_ = from._impl_.auto_mixed_precision_cpu_;
  }
  if (from._internal_experimental_conditional_code_motion() != 0) {
    _this->_impl_.experimental_conditional_code_motion_ = from._impl_.experimental_conditional_code_motion_;
  }
  if (from._internal_auto_mixed_precision_onednn_bfloat16() != 0) {
    _this->_impl_.auto_mixed_precision_onednn_bfloat16_ = from._impl_.auto_mixed_precision_onednn_bfloat16_;
  }
  if (from._internal_cpu_layout_conversion() != 0) {
    _this->_impl_.cpu_layout_conversion_ = from._impl_.cpu_layout_conversion_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RewriterConfig::CopyFrom(const RewriterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RewriterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RewriterConfig::InternalSwap(RewriterConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.optimizers_.InternalSwap(&other->_impl_.optimizers_);
  _impl_.custom_optimizers_.InternalSwap(&other->_impl_.custom_optimizers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memory_optimizer_target_node_name_scope_, &other->_impl_.memory_optimizer_target_node_name_scope_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.cpu_layout_conversion_)
      + sizeof(RewriterConfig::_impl_.cpu_layout_conversion_)
      - PROTOBUF_FIELD_OFFSET(RewriterConfig, _impl_.auto_parallel_)>(
          reinterpret_cast<char*>(&_impl_.auto_parallel_),
          reinterpret_cast<char*>(&other->_impl_.auto_parallel_));
}

::google::protobuf::Metadata RewriterConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
