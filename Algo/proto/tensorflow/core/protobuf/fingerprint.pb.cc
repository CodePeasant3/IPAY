// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/fingerprint.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/fingerprint.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr FingerprintDef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_{nullptr},
        saved_model_checksum_{::uint64_t{0u}},
        graph_def_program_hash_{::uint64_t{0u}},
        signature_def_hash_{::uint64_t{0u}},
        saved_object_graph_hash_{::uint64_t{0u}},
        checkpoint_hash_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR FingerprintDef::FingerprintDef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FingerprintDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FingerprintDefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FingerprintDefDefaultTypeInternal() {}
  union {
    FingerprintDef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FingerprintDefDefaultTypeInternal _FingerprintDef_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_.saved_model_checksum_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_.graph_def_program_hash_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_.signature_def_hash_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_.saved_object_graph_hash_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_.checkpoint_hash_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::FingerprintDef, _impl_.version_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::tensorflow::FingerprintDef)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_FingerprintDef_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n*tensorflow/core/protobuf/fingerprint.p"
    "roto\022\ntensorflow\032(tensorflow/core/framew"
    "ork/versions.proto\"\315\001\n\016FingerprintDef\022\034\n"
    "\024saved_model_checksum\030\001 \001(\004\022\036\n\026graph_def"
    "_program_hash\030\002 \001(\004\022\032\n\022signature_def_has"
    "h\030\003 \001(\004\022\037\n\027saved_object_graph_hash\030\004 \001(\004"
    "\022\027\n\017checkpoint_hash\030\005 \001(\004\022\'\n\007version\030\006 \001"
    "(\0132\026.tensorflow.VersionDefB\211\001\n\030org.tenso"
    "rflow.frameworkB\021FingerprintProtosP\001ZUgi"
    "thub.com/tensorflow/tensorflow/tensorflo"
    "w/go/core/protobuf/for_core_protos_go_pr"
    "oto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto_deps[1] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2fversions_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto = {
    false,
    false,
    454,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto,
    "tensorflow/core/protobuf/fingerprint.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto,
};
namespace tensorflow {
// ===================================================================

class FingerprintDef::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FingerprintDef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_._has_bits_);
};

void FingerprintDef::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ != nullptr) _impl_.version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
FingerprintDef::FingerprintDef(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FingerprintDef)
}
inline PROTOBUF_NDEBUG_INLINE FingerprintDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::FingerprintDef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FingerprintDef::FingerprintDef(
    ::google::protobuf::Arena* arena,
    const FingerprintDef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FingerprintDef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.version_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::VersionDef>(
                              arena, *from._impl_.version_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saved_model_checksum_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, saved_model_checksum_),
           offsetof(Impl_, checkpoint_hash_) -
               offsetof(Impl_, saved_model_checksum_) +
               sizeof(Impl_::checkpoint_hash_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.FingerprintDef)
}
inline PROTOBUF_NDEBUG_INLINE FingerprintDef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FingerprintDef::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           0,
           offsetof(Impl_, checkpoint_hash_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::checkpoint_hash_));
}
FingerprintDef::~FingerprintDef() {
  // @@protoc_insertion_point(destructor:tensorflow.FingerprintDef)
  SharedDtor(*this);
}
inline void FingerprintDef::SharedDtor(MessageLite& self) {
  FingerprintDef& this_ = static_cast<FingerprintDef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.version_;
  this_._impl_.~Impl_();
}

inline void* FingerprintDef::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FingerprintDef(arena);
}
constexpr auto FingerprintDef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FingerprintDef),
                                            alignof(FingerprintDef));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FingerprintDef::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FingerprintDef_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FingerprintDef::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FingerprintDef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FingerprintDef::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FingerprintDef>(), &FingerprintDef::ByteSizeLong,
            &FingerprintDef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_._cached_size_),
        false,
    },
    &FingerprintDef::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FingerprintDef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> FingerprintDef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::FingerprintDef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 saved_model_checksum = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FingerprintDef, _impl_.saved_model_checksum_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.saved_model_checksum_)}},
    // uint64 graph_def_program_hash = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FingerprintDef, _impl_.graph_def_program_hash_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.graph_def_program_hash_)}},
    // uint64 signature_def_hash = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FingerprintDef, _impl_.signature_def_hash_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.signature_def_hash_)}},
    // uint64 saved_object_graph_hash = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FingerprintDef, _impl_.saved_object_graph_hash_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.saved_object_graph_hash_)}},
    // uint64 checkpoint_hash = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FingerprintDef, _impl_.checkpoint_hash_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.checkpoint_hash_)}},
    // .tensorflow.VersionDef version = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 saved_model_checksum = 1;
    {PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.saved_model_checksum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 graph_def_program_hash = 2;
    {PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.graph_def_program_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 signature_def_hash = 3;
    {PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.signature_def_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 saved_object_graph_hash = 4;
    {PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.saved_object_graph_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 checkpoint_hash = 5;
    {PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.checkpoint_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .tensorflow.VersionDef version = 6;
    {PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::VersionDef>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FingerprintDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FingerprintDef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.version_ != nullptr);
    _impl_.version_->Clear();
  }
  ::memset(&_impl_.saved_model_checksum_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.checkpoint_hash_) -
      reinterpret_cast<char*>(&_impl_.saved_model_checksum_)) + sizeof(_impl_.checkpoint_hash_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FingerprintDef::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FingerprintDef& this_ = static_cast<const FingerprintDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FingerprintDef::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FingerprintDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FingerprintDef)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 saved_model_checksum = 1;
          if (this_._internal_saved_model_checksum() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_saved_model_checksum(), target);
          }

          // uint64 graph_def_program_hash = 2;
          if (this_._internal_graph_def_program_hash() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_graph_def_program_hash(), target);
          }

          // uint64 signature_def_hash = 3;
          if (this_._internal_signature_def_hash() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_signature_def_hash(), target);
          }

          // uint64 saved_object_graph_hash = 4;
          if (this_._internal_saved_object_graph_hash() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_saved_object_graph_hash(), target);
          }

          // uint64 checkpoint_hash = 5;
          if (this_._internal_checkpoint_hash() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_checkpoint_hash(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.VersionDef version = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.version_, this_._impl_.version_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FingerprintDef)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FingerprintDef::ByteSizeLong(const MessageLite& base) {
          const FingerprintDef& this_ = static_cast<const FingerprintDef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FingerprintDef::ByteSizeLong() const {
          const FingerprintDef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.FingerprintDef)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tensorflow.VersionDef version = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_);
            }
          }
           {
            // uint64 saved_model_checksum = 1;
            if (this_._internal_saved_model_checksum() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_saved_model_checksum());
            }
            // uint64 graph_def_program_hash = 2;
            if (this_._internal_graph_def_program_hash() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_graph_def_program_hash());
            }
            // uint64 signature_def_hash = 3;
            if (this_._internal_signature_def_hash() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_signature_def_hash());
            }
            // uint64 saved_object_graph_hash = 4;
            if (this_._internal_saved_object_graph_hash() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_saved_object_graph_hash());
            }
            // uint64 checkpoint_hash = 5;
            if (this_._internal_checkpoint_hash() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_checkpoint_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FingerprintDef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FingerprintDef*>(&to_msg);
  auto& from = static_cast<const FingerprintDef&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FingerprintDef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.version_ != nullptr);
    if (_this->_impl_.version_ == nullptr) {
      _this->_impl_.version_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::VersionDef>(arena, *from._impl_.version_);
    } else {
      _this->_impl_.version_->MergeFrom(*from._impl_.version_);
    }
  }
  if (from._internal_saved_model_checksum() != 0) {
    _this->_impl_.saved_model_checksum_ = from._impl_.saved_model_checksum_;
  }
  if (from._internal_graph_def_program_hash() != 0) {
    _this->_impl_.graph_def_program_hash_ = from._impl_.graph_def_program_hash_;
  }
  if (from._internal_signature_def_hash() != 0) {
    _this->_impl_.signature_def_hash_ = from._impl_.signature_def_hash_;
  }
  if (from._internal_saved_object_graph_hash() != 0) {
    _this->_impl_.saved_object_graph_hash_ = from._impl_.saved_object_graph_hash_;
  }
  if (from._internal_checkpoint_hash() != 0) {
    _this->_impl_.checkpoint_hash_ = from._impl_.checkpoint_hash_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FingerprintDef::CopyFrom(const FingerprintDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FingerprintDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FingerprintDef::InternalSwap(FingerprintDef* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.checkpoint_hash_)
      + sizeof(FingerprintDef::_impl_.checkpoint_hash_)
      - PROTOBUF_FIELD_OFFSET(FingerprintDef, _impl_.version_)>(
          reinterpret_cast<char*>(&_impl_.version_),
          reinterpret_cast<char*>(&other->_impl_.version_));
}

::google::protobuf::Metadata FingerprintDef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2ffingerprint_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
