// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/debug.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/debug.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr DebuggedSourceFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lines_{},
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_modified_{::int64_t{0}},
        bytes_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebuggedSourceFile::DebuggedSourceFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebuggedSourceFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebuggedSourceFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebuggedSourceFileDefaultTypeInternal() {}
  union {
    DebuggedSourceFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebuggedSourceFileDefaultTypeInternal _DebuggedSourceFile_default_instance_;

inline constexpr DebugTensorWatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : debug_ops_{},
        debug_urls_{},
        node_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        output_slot_{0},
        tolerate_debug_op_creation_failures_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebugTensorWatch::DebugTensorWatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebugTensorWatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugTensorWatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugTensorWatchDefaultTypeInternal() {}
  union {
    DebugTensorWatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugTensorWatchDefaultTypeInternal _DebugTensorWatch_default_instance_;

inline constexpr DebuggedSourceFiles::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : source_files_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebuggedSourceFiles::DebuggedSourceFiles(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebuggedSourceFilesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebuggedSourceFilesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebuggedSourceFilesDefaultTypeInternal() {}
  union {
    DebuggedSourceFiles _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebuggedSourceFilesDefaultTypeInternal _DebuggedSourceFiles_default_instance_;

inline constexpr DebugOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : debug_tensor_watch_opts_{},
        global_step_{::int64_t{0}},
        reset_disk_byte_usage_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebugOptions::DebugOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebugOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugOptionsDefaultTypeInternal() {}
  union {
    DebugOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugOptionsDefaultTypeInternal _DebugOptions_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugTensorWatch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugTensorWatch, _impl_.node_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugTensorWatch, _impl_.output_slot_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugTensorWatch, _impl_.debug_ops_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugTensorWatch, _impl_.debug_urls_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugTensorWatch, _impl_.tolerate_debug_op_creation_failures_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugOptions, _impl_.debug_tensor_watch_opts_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugOptions, _impl_.global_step_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugOptions, _impl_.reset_disk_byte_usage_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFile, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFile, _impl_.file_path_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFile, _impl_.last_modified_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFile, _impl_.bytes_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFile, _impl_.lines_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFiles, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedSourceFiles, _impl_.source_files_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::DebugTensorWatch)},
        {13, -1, -1, sizeof(::tensorflow::DebugOptions)},
        {24, -1, -1, sizeof(::tensorflow::DebuggedSourceFile)},
        {37, -1, -1, sizeof(::tensorflow::DebuggedSourceFiles)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_DebugTensorWatch_default_instance_._instance,
    &::tensorflow::_DebugOptions_default_instance_._instance,
    &::tensorflow::_DebuggedSourceFile_default_instance_._instance,
    &::tensorflow::_DebuggedSourceFiles_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$tensorflow/core/protobuf/debug.proto\022\n"
    "tensorflow\"\216\001\n\020DebugTensorWatch\022\021\n\tnode_"
    "name\030\001 \001(\t\022\023\n\013output_slot\030\002 \001(\005\022\021\n\tdebug"
    "_ops\030\003 \003(\t\022\022\n\ndebug_urls\030\004 \003(\t\022+\n#tolera"
    "te_debug_op_creation_failures\030\005 \001(\010\"\201\001\n\014"
    "DebugOptions\022=\n\027debug_tensor_watch_opts\030"
    "\004 \003(\0132\034.tensorflow.DebugTensorWatch\022\023\n\013g"
    "lobal_step\030\n \001(\003\022\035\n\025reset_disk_byte_usag"
    "e\030\013 \001(\010\"j\n\022DebuggedSourceFile\022\014\n\004host\030\001 "
    "\001(\t\022\021\n\tfile_path\030\002 \001(\t\022\025\n\rlast_modified\030"
    "\003 \001(\003\022\r\n\005bytes\030\004 \001(\003\022\r\n\005lines\030\005 \003(\t\"K\n\023D"
    "ebuggedSourceFiles\0224\n\014source_files\030\001 \003(\013"
    "2\036.tensorflow.DebuggedSourceFileB\203\001\n\030org"
    ".tensorflow.frameworkB\013DebugProtosP\001ZUgi"
    "thub.com/tensorflow/tensorflow/tensorflo"
    "w/go/core/protobuf/for_core_protos_go_pr"
    "oto\370\001\001b\006proto3"
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto = {
    false,
    false,
    654,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
    "tensorflow/core/protobuf/debug.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
};
namespace tensorflow {
// ===================================================================

class DebugTensorWatch::_Internal {
 public:
};

DebugTensorWatch::DebugTensorWatch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebugTensorWatch)
}
inline PROTOBUF_NDEBUG_INLINE DebugTensorWatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebugTensorWatch& from_msg)
      : debug_ops_{visibility, arena, from.debug_ops_},
        debug_urls_{visibility, arena, from.debug_urls_},
        node_name_(arena, from.node_name_),
        _cached_size_{0} {}

DebugTensorWatch::DebugTensorWatch(
    ::google::protobuf::Arena* arena,
    const DebugTensorWatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebugTensorWatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, output_slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, output_slot_),
           offsetof(Impl_, tolerate_debug_op_creation_failures_) -
               offsetof(Impl_, output_slot_) +
               sizeof(Impl_::tolerate_debug_op_creation_failures_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebugTensorWatch)
}
inline PROTOBUF_NDEBUG_INLINE DebugTensorWatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : debug_ops_{visibility, arena},
        debug_urls_{visibility, arena},
        node_name_(arena),
        _cached_size_{0} {}

inline void DebugTensorWatch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, output_slot_),
           0,
           offsetof(Impl_, tolerate_debug_op_creation_failures_) -
               offsetof(Impl_, output_slot_) +
               sizeof(Impl_::tolerate_debug_op_creation_failures_));
}
DebugTensorWatch::~DebugTensorWatch() {
  // @@protoc_insertion_point(destructor:tensorflow.DebugTensorWatch)
  SharedDtor(*this);
}
inline void DebugTensorWatch::SharedDtor(MessageLite& self) {
  DebugTensorWatch& this_ = static_cast<DebugTensorWatch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DebugTensorWatch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebugTensorWatch(arena);
}
constexpr auto DebugTensorWatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.debug_ops_) +
          decltype(DebugTensorWatch::_impl_.debug_ops_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.debug_urls_) +
          decltype(DebugTensorWatch::_impl_.debug_urls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DebugTensorWatch), alignof(DebugTensorWatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DebugTensorWatch::PlacementNew_,
                                 sizeof(DebugTensorWatch),
                                 alignof(DebugTensorWatch));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebugTensorWatch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebugTensorWatch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebugTensorWatch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebugTensorWatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebugTensorWatch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebugTensorWatch>(), &DebugTensorWatch::ByteSizeLong,
            &DebugTensorWatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_._cached_size_),
        false,
    },
    &DebugTensorWatch::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebugTensorWatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 64, 2> DebugTensorWatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebugTensorWatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.node_name_)}},
    // int32 output_slot = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DebugTensorWatch, _impl_.output_slot_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.output_slot_)}},
    // repeated string debug_ops = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.debug_ops_)}},
    // repeated string debug_urls = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.debug_urls_)}},
    // bool tolerate_debug_op_creation_failures = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DebugTensorWatch, _impl_.tolerate_debug_op_creation_failures_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.tolerate_debug_op_creation_failures_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_name = 1;
    {PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.node_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 output_slot = 2;
    {PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.output_slot_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string debug_ops = 3;
    {PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.debug_ops_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string debug_urls = 4;
    {PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.debug_urls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool tolerate_debug_op_creation_failures = 5;
    {PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.tolerate_debug_op_creation_failures_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\33\11\0\11\12\0\0\0"
    "tensorflow.DebugTensorWatch"
    "node_name"
    "debug_ops"
    "debug_urls"
  }},
};

PROTOBUF_NOINLINE void DebugTensorWatch::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebugTensorWatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.debug_ops_.Clear();
  _impl_.debug_urls_.Clear();
  _impl_.node_name_.ClearToEmpty();
  ::memset(&_impl_.output_slot_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tolerate_debug_op_creation_failures_) -
      reinterpret_cast<char*>(&_impl_.output_slot_)) + sizeof(_impl_.tolerate_debug_op_creation_failures_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebugTensorWatch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebugTensorWatch& this_ = static_cast<const DebugTensorWatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebugTensorWatch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebugTensorWatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebugTensorWatch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_name = 1;
          if (!this_._internal_node_name().empty()) {
            const std::string& _s = this_._internal_node_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugTensorWatch.node_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 output_slot = 2;
          if (this_._internal_output_slot() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_output_slot(), target);
          }

          // repeated string debug_ops = 3;
          for (int i = 0, n = this_._internal_debug_ops_size(); i < n; ++i) {
            const auto& s = this_._internal_debug_ops().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugTensorWatch.debug_ops");
            target = stream->WriteString(3, s, target);
          }

          // repeated string debug_urls = 4;
          for (int i = 0, n = this_._internal_debug_urls_size(); i < n; ++i) {
            const auto& s = this_._internal_debug_urls().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugTensorWatch.debug_urls");
            target = stream->WriteString(4, s, target);
          }

          // bool tolerate_debug_op_creation_failures = 5;
          if (this_._internal_tolerate_debug_op_creation_failures() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_tolerate_debug_op_creation_failures(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebugTensorWatch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebugTensorWatch::ByteSizeLong(const MessageLite& base) {
          const DebugTensorWatch& this_ = static_cast<const DebugTensorWatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebugTensorWatch::ByteSizeLong() const {
          const DebugTensorWatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebugTensorWatch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string debug_ops = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_debug_ops().size());
              for (int i = 0, n = this_._internal_debug_ops().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_debug_ops().Get(i));
              }
            }
            // repeated string debug_urls = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_debug_urls().size());
              for (int i = 0, n = this_._internal_debug_urls().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_debug_urls().Get(i));
              }
            }
          }
           {
            // string node_name = 1;
            if (!this_._internal_node_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_name());
            }
            // int32 output_slot = 2;
            if (this_._internal_output_slot() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_output_slot());
            }
            // bool tolerate_debug_op_creation_failures = 5;
            if (this_._internal_tolerate_debug_op_creation_failures() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebugTensorWatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebugTensorWatch*>(&to_msg);
  auto& from = static_cast<const DebugTensorWatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebugTensorWatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_debug_ops()->MergeFrom(from._internal_debug_ops());
  _this->_internal_mutable_debug_urls()->MergeFrom(from._internal_debug_urls());
  if (!from._internal_node_name().empty()) {
    _this->_internal_set_node_name(from._internal_node_name());
  }
  if (from._internal_output_slot() != 0) {
    _this->_impl_.output_slot_ = from._impl_.output_slot_;
  }
  if (from._internal_tolerate_debug_op_creation_failures() != 0) {
    _this->_impl_.tolerate_debug_op_creation_failures_ = from._impl_.tolerate_debug_op_creation_failures_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebugTensorWatch::CopyFrom(const DebugTensorWatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebugTensorWatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebugTensorWatch::InternalSwap(DebugTensorWatch* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.debug_ops_.InternalSwap(&other->_impl_.debug_ops_);
  _impl_.debug_urls_.InternalSwap(&other->_impl_.debug_urls_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_name_, &other->_impl_.node_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.tolerate_debug_op_creation_failures_)
      + sizeof(DebugTensorWatch::_impl_.tolerate_debug_op_creation_failures_)
      - PROTOBUF_FIELD_OFFSET(DebugTensorWatch, _impl_.output_slot_)>(
          reinterpret_cast<char*>(&_impl_.output_slot_),
          reinterpret_cast<char*>(&other->_impl_.output_slot_));
}

::google::protobuf::Metadata DebugTensorWatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DebugOptions::_Internal {
 public:
};

DebugOptions::DebugOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebugOptions)
}
inline PROTOBUF_NDEBUG_INLINE DebugOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebugOptions& from_msg)
      : debug_tensor_watch_opts_{visibility, arena, from.debug_tensor_watch_opts_},
        _cached_size_{0} {}

DebugOptions::DebugOptions(
    ::google::protobuf::Arena* arena,
    const DebugOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebugOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, global_step_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, global_step_),
           offsetof(Impl_, reset_disk_byte_usage_) -
               offsetof(Impl_, global_step_) +
               sizeof(Impl_::reset_disk_byte_usage_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebugOptions)
}
inline PROTOBUF_NDEBUG_INLINE DebugOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : debug_tensor_watch_opts_{visibility, arena},
        _cached_size_{0} {}

inline void DebugOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, global_step_),
           0,
           offsetof(Impl_, reset_disk_byte_usage_) -
               offsetof(Impl_, global_step_) +
               sizeof(Impl_::reset_disk_byte_usage_));
}
DebugOptions::~DebugOptions() {
  // @@protoc_insertion_point(destructor:tensorflow.DebugOptions)
  SharedDtor(*this);
}
inline void DebugOptions::SharedDtor(MessageLite& self) {
  DebugOptions& this_ = static_cast<DebugOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DebugOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebugOptions(arena);
}
constexpr auto DebugOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.debug_tensor_watch_opts_) +
          decltype(DebugOptions::_impl_.debug_tensor_watch_opts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DebugOptions), alignof(DebugOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DebugOptions::PlacementNew_,
                                 sizeof(DebugOptions),
                                 alignof(DebugOptions));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebugOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebugOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebugOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebugOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebugOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebugOptions>(), &DebugOptions::ByteSizeLong,
            &DebugOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_._cached_size_),
        false,
    },
    &DebugOptions::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebugOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> DebugOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965751,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebugOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.DebugTensorWatch debug_tensor_watch_opts = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.debug_tensor_watch_opts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 global_step = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DebugOptions, _impl_.global_step_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.global_step_)}},
    // bool reset_disk_byte_usage = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DebugOptions, _impl_.reset_disk_byte_usage_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.reset_disk_byte_usage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.DebugTensorWatch debug_tensor_watch_opts = 4;
    {PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.debug_tensor_watch_opts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 global_step = 10;
    {PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.global_step_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool reset_disk_byte_usage = 11;
    {PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.reset_disk_byte_usage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::DebugTensorWatch>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DebugOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebugOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.debug_tensor_watch_opts_.Clear();
  ::memset(&_impl_.global_step_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reset_disk_byte_usage_) -
      reinterpret_cast<char*>(&_impl_.global_step_)) + sizeof(_impl_.reset_disk_byte_usage_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebugOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebugOptions& this_ = static_cast<const DebugOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebugOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebugOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebugOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.DebugTensorWatch debug_tensor_watch_opts = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_debug_tensor_watch_opts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_debug_tensor_watch_opts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int64 global_step = 10;
          if (this_._internal_global_step() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_global_step(), target);
          }

          // bool reset_disk_byte_usage = 11;
          if (this_._internal_reset_disk_byte_usage() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_reset_disk_byte_usage(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebugOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebugOptions::ByteSizeLong(const MessageLite& base) {
          const DebugOptions& this_ = static_cast<const DebugOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebugOptions::ByteSizeLong() const {
          const DebugOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebugOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.DebugTensorWatch debug_tensor_watch_opts = 4;
            {
              total_size += 1UL * this_._internal_debug_tensor_watch_opts_size();
              for (const auto& msg : this_._internal_debug_tensor_watch_opts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int64 global_step = 10;
            if (this_._internal_global_step() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_global_step());
            }
            // bool reset_disk_byte_usage = 11;
            if (this_._internal_reset_disk_byte_usage() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebugOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebugOptions*>(&to_msg);
  auto& from = static_cast<const DebugOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebugOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_debug_tensor_watch_opts()->MergeFrom(
      from._internal_debug_tensor_watch_opts());
  if (from._internal_global_step() != 0) {
    _this->_impl_.global_step_ = from._impl_.global_step_;
  }
  if (from._internal_reset_disk_byte_usage() != 0) {
    _this->_impl_.reset_disk_byte_usage_ = from._impl_.reset_disk_byte_usage_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebugOptions::CopyFrom(const DebugOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebugOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebugOptions::InternalSwap(DebugOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.debug_tensor_watch_opts_.InternalSwap(&other->_impl_.debug_tensor_watch_opts_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.reset_disk_byte_usage_)
      + sizeof(DebugOptions::_impl_.reset_disk_byte_usage_)
      - PROTOBUF_FIELD_OFFSET(DebugOptions, _impl_.global_step_)>(
          reinterpret_cast<char*>(&_impl_.global_step_),
          reinterpret_cast<char*>(&other->_impl_.global_step_));
}

::google::protobuf::Metadata DebugOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DebuggedSourceFile::_Internal {
 public:
};

DebuggedSourceFile::DebuggedSourceFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebuggedSourceFile)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedSourceFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebuggedSourceFile& from_msg)
      : lines_{visibility, arena, from.lines_},
        host_(arena, from.host_),
        file_path_(arena, from.file_path_),
        _cached_size_{0} {}

DebuggedSourceFile::DebuggedSourceFile(
    ::google::protobuf::Arena* arena,
    const DebuggedSourceFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebuggedSourceFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_modified_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, last_modified_),
           offsetof(Impl_, bytes_) -
               offsetof(Impl_, last_modified_) +
               sizeof(Impl_::bytes_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebuggedSourceFile)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedSourceFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : lines_{visibility, arena},
        host_(arena),
        file_path_(arena),
        _cached_size_{0} {}

inline void DebuggedSourceFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_modified_),
           0,
           offsetof(Impl_, bytes_) -
               offsetof(Impl_, last_modified_) +
               sizeof(Impl_::bytes_));
}
DebuggedSourceFile::~DebuggedSourceFile() {
  // @@protoc_insertion_point(destructor:tensorflow.DebuggedSourceFile)
  SharedDtor(*this);
}
inline void DebuggedSourceFile::SharedDtor(MessageLite& self) {
  DebuggedSourceFile& this_ = static_cast<DebuggedSourceFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.host_.Destroy();
  this_._impl_.file_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DebuggedSourceFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebuggedSourceFile(arena);
}
constexpr auto DebuggedSourceFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.lines_) +
          decltype(DebuggedSourceFile::_impl_.lines_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DebuggedSourceFile), alignof(DebuggedSourceFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DebuggedSourceFile::PlacementNew_,
                                 sizeof(DebuggedSourceFile),
                                 alignof(DebuggedSourceFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebuggedSourceFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebuggedSourceFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebuggedSourceFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebuggedSourceFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebuggedSourceFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebuggedSourceFile>(), &DebuggedSourceFile::ByteSizeLong,
            &DebuggedSourceFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_._cached_size_),
        false,
    },
    &DebuggedSourceFile::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebuggedSourceFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 56, 2> DebuggedSourceFile::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebuggedSourceFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string host = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.host_)}},
    // string file_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.file_path_)}},
    // int64 last_modified = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DebuggedSourceFile, _impl_.last_modified_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.last_modified_)}},
    // int64 bytes = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DebuggedSourceFile, _impl_.bytes_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.bytes_)}},
    // repeated string lines = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.lines_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string host = 1;
    {PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string file_path = 2;
    {PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 last_modified = 3;
    {PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.last_modified_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 bytes = 4;
    {PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated string lines = 5;
    {PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.lines_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\4\11\0\0\5\0\0"
    "tensorflow.DebuggedSourceFile"
    "host"
    "file_path"
    "lines"
  }},
};

PROTOBUF_NOINLINE void DebuggedSourceFile::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebuggedSourceFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lines_.Clear();
  _impl_.host_.ClearToEmpty();
  _impl_.file_path_.ClearToEmpty();
  ::memset(&_impl_.last_modified_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bytes_) -
      reinterpret_cast<char*>(&_impl_.last_modified_)) + sizeof(_impl_.bytes_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebuggedSourceFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebuggedSourceFile& this_ = static_cast<const DebuggedSourceFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebuggedSourceFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebuggedSourceFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebuggedSourceFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string host = 1;
          if (!this_._internal_host().empty()) {
            const std::string& _s = this_._internal_host();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedSourceFile.host");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string file_path = 2;
          if (!this_._internal_file_path().empty()) {
            const std::string& _s = this_._internal_file_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedSourceFile.file_path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 last_modified = 3;
          if (this_._internal_last_modified() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_last_modified(), target);
          }

          // int64 bytes = 4;
          if (this_._internal_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_bytes(), target);
          }

          // repeated string lines = 5;
          for (int i = 0, n = this_._internal_lines_size(); i < n; ++i) {
            const auto& s = this_._internal_lines().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedSourceFile.lines");
            target = stream->WriteString(5, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebuggedSourceFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebuggedSourceFile::ByteSizeLong(const MessageLite& base) {
          const DebuggedSourceFile& this_ = static_cast<const DebuggedSourceFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebuggedSourceFile::ByteSizeLong() const {
          const DebuggedSourceFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebuggedSourceFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string lines = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_lines().size());
              for (int i = 0, n = this_._internal_lines().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_lines().Get(i));
              }
            }
          }
           {
            // string host = 1;
            if (!this_._internal_host().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_host());
            }
            // string file_path = 2;
            if (!this_._internal_file_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_path());
            }
            // int64 last_modified = 3;
            if (this_._internal_last_modified() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_last_modified());
            }
            // int64 bytes = 4;
            if (this_._internal_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_bytes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebuggedSourceFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebuggedSourceFile*>(&to_msg);
  auto& from = static_cast<const DebuggedSourceFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebuggedSourceFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(from._internal_lines());
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  if (from._internal_last_modified() != 0) {
    _this->_impl_.last_modified_ = from._impl_.last_modified_;
  }
  if (from._internal_bytes() != 0) {
    _this->_impl_.bytes_ = from._impl_.bytes_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebuggedSourceFile::CopyFrom(const DebuggedSourceFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebuggedSourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebuggedSourceFile::InternalSwap(DebuggedSourceFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lines_.InternalSwap(&other->_impl_.lines_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_path_, &other->_impl_.file_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.bytes_)
      + sizeof(DebuggedSourceFile::_impl_.bytes_)
      - PROTOBUF_FIELD_OFFSET(DebuggedSourceFile, _impl_.last_modified_)>(
          reinterpret_cast<char*>(&_impl_.last_modified_),
          reinterpret_cast<char*>(&other->_impl_.last_modified_));
}

::google::protobuf::Metadata DebuggedSourceFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DebuggedSourceFiles::_Internal {
 public:
};

DebuggedSourceFiles::DebuggedSourceFiles(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebuggedSourceFiles)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedSourceFiles::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebuggedSourceFiles& from_msg)
      : source_files_{visibility, arena, from.source_files_},
        _cached_size_{0} {}

DebuggedSourceFiles::DebuggedSourceFiles(
    ::google::protobuf::Arena* arena,
    const DebuggedSourceFiles& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebuggedSourceFiles* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebuggedSourceFiles)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedSourceFiles::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : source_files_{visibility, arena},
        _cached_size_{0} {}

inline void DebuggedSourceFiles::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DebuggedSourceFiles::~DebuggedSourceFiles() {
  // @@protoc_insertion_point(destructor:tensorflow.DebuggedSourceFiles)
  SharedDtor(*this);
}
inline void DebuggedSourceFiles::SharedDtor(MessageLite& self) {
  DebuggedSourceFiles& this_ = static_cast<DebuggedSourceFiles&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DebuggedSourceFiles::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebuggedSourceFiles(arena);
}
constexpr auto DebuggedSourceFiles::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DebuggedSourceFiles, _impl_.source_files_) +
          decltype(DebuggedSourceFiles::_impl_.source_files_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DebuggedSourceFiles), alignof(DebuggedSourceFiles), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DebuggedSourceFiles::PlacementNew_,
                                 sizeof(DebuggedSourceFiles),
                                 alignof(DebuggedSourceFiles));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebuggedSourceFiles::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebuggedSourceFiles_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebuggedSourceFiles::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebuggedSourceFiles>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebuggedSourceFiles::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebuggedSourceFiles>(), &DebuggedSourceFiles::ByteSizeLong,
            &DebuggedSourceFiles::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebuggedSourceFiles, _impl_._cached_size_),
        false,
    },
    &DebuggedSourceFiles::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebuggedSourceFiles::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DebuggedSourceFiles::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebuggedSourceFiles>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.DebuggedSourceFile source_files = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedSourceFiles, _impl_.source_files_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.DebuggedSourceFile source_files = 1;
    {PROTOBUF_FIELD_OFFSET(DebuggedSourceFiles, _impl_.source_files_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::DebuggedSourceFile>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DebuggedSourceFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebuggedSourceFiles)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_files_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebuggedSourceFiles::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebuggedSourceFiles& this_ = static_cast<const DebuggedSourceFiles&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebuggedSourceFiles::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebuggedSourceFiles& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebuggedSourceFiles)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.DebuggedSourceFile source_files = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_source_files_size());
               i < n; i++) {
            const auto& repfield = this_._internal_source_files().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebuggedSourceFiles)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebuggedSourceFiles::ByteSizeLong(const MessageLite& base) {
          const DebuggedSourceFiles& this_ = static_cast<const DebuggedSourceFiles&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebuggedSourceFiles::ByteSizeLong() const {
          const DebuggedSourceFiles& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebuggedSourceFiles)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.DebuggedSourceFile source_files = 1;
            {
              total_size += 1UL * this_._internal_source_files_size();
              for (const auto& msg : this_._internal_source_files()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebuggedSourceFiles::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebuggedSourceFiles*>(&to_msg);
  auto& from = static_cast<const DebuggedSourceFiles&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebuggedSourceFiles)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_source_files()->MergeFrom(
      from._internal_source_files());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebuggedSourceFiles::CopyFrom(const DebuggedSourceFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebuggedSourceFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebuggedSourceFiles::InternalSwap(DebuggedSourceFiles* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.source_files_.InternalSwap(&other->_impl_.source_files_);
}

::google::protobuf::Metadata DebuggedSourceFiles::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
