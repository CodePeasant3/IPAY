// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/conv_autotuning.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/conv_autotuning.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr MatmulProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ab_dtype_{static_cast< ::stream_executor::dnn::DataType >(0)},
        c_dtype_{static_cast< ::stream_executor::dnn::DataType >(0)},
        m_{::uint64_t{0u}},
        n_{::uint64_t{0u}},
        trans_a_{false},
        trans_b_{false},
        activation_{static_cast< ::stream_executor::dnn::ActivationMode >(0)},
        k_{::uint64_t{0u}},
        lda_{::int64_t{0}},
        ldb_{::int64_t{0}},
        ldc_{::int64_t{0}},
        a_address_{::int64_t{0}},
        b_address_{::int64_t{0}},
        c_address_{::int64_t{0}},
        bias_address_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MatmulProto::MatmulProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatmulProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatmulProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatmulProtoDefaultTypeInternal() {}
  union {
    MatmulProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatmulProtoDefaultTypeInternal _MatmulProto_default_instance_;

inline constexpr ConvolutionProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_{nullptr},
        filter_{nullptr},
        output_{nullptr},
        conv_desc_{nullptr},
        kind_{static_cast< ::stream_executor::dnn::ConvolutionKind >(0)},
        activation_{static_cast< ::stream_executor::dnn::ActivationMode >(0)},
        conv_scale_{0},
        side_value_scale_{0},
        input_address_{::int64_t{0}},
        filter_address_{::int64_t{0}},
        output_address_{::int64_t{0}},
        bias_address_{::int64_t{0}},
        side_input_address_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ConvolutionProto::ConvolutionProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConvolutionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConvolutionProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConvolutionProtoDefaultTypeInternal() {}
  union {
    ConvolutionProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConvolutionProtoDefaultTypeInternal _ConvolutionProto_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.input_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.filter_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.output_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.conv_desc_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.conv_scale_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.side_value_scale_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.activation_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.input_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.filter_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.output_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.bias_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::ConvolutionProto, _impl_.side_input_address_),
        ~0u,
        0,
        1,
        2,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.ab_dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.c_dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.trans_a_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.trans_b_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.m_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.n_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.lda_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.ldb_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.ldc_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.activation_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.a_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.b_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.c_address_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MatmulProto, _impl_.bias_address_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 21, -1, sizeof(::tensorflow::ConvolutionProto)},
        {34, -1, -1, sizeof(::tensorflow::MatmulProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_ConvolutionProto_default_instance_._instance,
    &::tensorflow::_MatmulProto_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.tensorflow/core/protobuf/conv_autotuni"
    "ng.proto\022\ntensorflow\032\026tsl/protobuf/dnn.p"
    "roto\"\235\004\n\020ConvolutionProto\0222\n\004kind\030\001 \001(\0162"
    "$.stream_executor.dnn.ConvolutionKind\0229\n"
    "\005input\030\002 \001(\0132*.stream_executor.dnn.Tenso"
    "rDescriptorProto\022:\n\006filter\030\003 \001(\0132*.strea"
    "m_executor.dnn.TensorDescriptorProto\022:\n\006"
    "output\030\004 \001(\0132*.stream_executor.dnn.Tenso"
    "rDescriptorProto\022B\n\tconv_desc\030\005 \001(\0132/.st"
    "ream_executor.dnn.ConvolutionDescriptorP"
    "roto\022\022\n\nconv_scale\030\006 \001(\001\022\030\n\020side_value_s"
    "cale\030\007 \001(\001\0227\n\nactivation\030\010 \001(\0162#.stream_"
    "executor.dnn.ActivationMode\022\025\n\rinput_add"
    "ress\030\t \001(\003\022\026\n\016filter_address\030\n \001(\003\022\026\n\016ou"
    "tput_address\030\013 \001(\003\022\024\n\014bias_address\030\014 \001(\003"
    "\022\032\n\022side_input_address\030\r \001(\003\"\340\002\n\013MatmulP"
    "roto\022/\n\010ab_dtype\030\001 \001(\0162\035.stream_executor"
    ".dnn.DataType\022.\n\007c_dtype\030\002 \001(\0162\035.stream_"
    "executor.dnn.DataType\022\017\n\007trans_a\030\003 \001(\010\022\017"
    "\n\007trans_b\030\004 \001(\010\022\t\n\001m\030\005 \001(\004\022\t\n\001n\030\006 \001(\004\022\t\n"
    "\001k\030\007 \001(\004\022\013\n\003lda\030\010 \001(\003\022\013\n\003ldb\030\t \001(\003\022\013\n\003ld"
    "c\030\n \001(\003\0227\n\nactivation\030\013 \001(\0162#.stream_exe"
    "cutor.dnn.ActivationMode\022\021\n\ta_address\030\014 "
    "\001(\003\022\021\n\tb_address\030\r \001(\003\022\021\n\tc_address\030\016 \001("
    "\003\022\024\n\014bias_address\030\017 \001(\003BWZUgithub.com/te"
    "nsorflow/tensorflow/tensorflow/go/core/p"
    "rotobuf/for_core_protos_go_protob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_deps[1] =
    {
        &::descriptor_table_tsl_2fprotobuf_2fdnn_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto = {
    false,
    false,
    1080,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto,
    "tensorflow/core/protobuf/conv_autotuning.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto,
};
namespace tensorflow {
// ===================================================================

class ConvolutionProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ConvolutionProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_._has_bits_);
};

void ConvolutionProto::clear_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.input_ != nullptr) _impl_.input_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ConvolutionProto::clear_filter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filter_ != nullptr) _impl_.filter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ConvolutionProto::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ != nullptr) _impl_.output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void ConvolutionProto::clear_conv_desc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.conv_desc_ != nullptr) _impl_.conv_desc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ConvolutionProto::ConvolutionProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ConvolutionProto)
}
inline PROTOBUF_NDEBUG_INLINE ConvolutionProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::ConvolutionProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ConvolutionProto::ConvolutionProto(
    ::google::protobuf::Arena* arena,
    const ConvolutionProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConvolutionProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.input_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::TensorDescriptorProto>(
                              arena, *from._impl_.input_)
                        : nullptr;
  _impl_.filter_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::TensorDescriptorProto>(
                              arena, *from._impl_.filter_)
                        : nullptr;
  _impl_.output_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::TensorDescriptorProto>(
                              arena, *from._impl_.output_)
                        : nullptr;
  _impl_.conv_desc_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::ConvolutionDescriptorProto>(
                              arena, *from._impl_.conv_desc_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kind_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, kind_),
           offsetof(Impl_, side_input_address_) -
               offsetof(Impl_, kind_) +
               sizeof(Impl_::side_input_address_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.ConvolutionProto)
}
inline PROTOBUF_NDEBUG_INLINE ConvolutionProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ConvolutionProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, input_),
           0,
           offsetof(Impl_, side_input_address_) -
               offsetof(Impl_, input_) +
               sizeof(Impl_::side_input_address_));
}
ConvolutionProto::~ConvolutionProto() {
  // @@protoc_insertion_point(destructor:tensorflow.ConvolutionProto)
  SharedDtor(*this);
}
inline void ConvolutionProto::SharedDtor(MessageLite& self) {
  ConvolutionProto& this_ = static_cast<ConvolutionProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.input_;
  delete this_._impl_.filter_;
  delete this_._impl_.output_;
  delete this_._impl_.conv_desc_;
  this_._impl_.~Impl_();
}

inline void* ConvolutionProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConvolutionProto(arena);
}
constexpr auto ConvolutionProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ConvolutionProto),
                                            alignof(ConvolutionProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConvolutionProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConvolutionProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConvolutionProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConvolutionProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConvolutionProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConvolutionProto>(), &ConvolutionProto::ByteSizeLong,
            &ConvolutionProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_._cached_size_),
        false,
    },
    &ConvolutionProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConvolutionProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 4, 0, 2> ConvolutionProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::ConvolutionProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .stream_executor.dnn.ConvolutionKind kind = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConvolutionProto, _impl_.kind_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.kind_)}},
    // .stream_executor.dnn.TensorDescriptorProto input = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.input_)}},
    // .stream_executor.dnn.TensorDescriptorProto filter = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.filter_)}},
    // .stream_executor.dnn.TensorDescriptorProto output = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.output_)}},
    // .stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.conv_desc_)}},
    // double conv_scale = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.conv_scale_)}},
    // double side_value_scale = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.side_value_scale_)}},
    // .stream_executor.dnn.ActivationMode activation = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConvolutionProto, _impl_.activation_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.activation_)}},
    // int64 input_address = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConvolutionProto, _impl_.input_address_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.input_address_)}},
    // int64 filter_address = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConvolutionProto, _impl_.filter_address_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.filter_address_)}},
    // int64 output_address = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConvolutionProto, _impl_.output_address_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.output_address_)}},
    // int64 bias_address = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConvolutionProto, _impl_.bias_address_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.bias_address_)}},
    // int64 side_input_address = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConvolutionProto, _impl_.side_input_address_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.side_input_address_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .stream_executor.dnn.ConvolutionKind kind = 1;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.kind_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .stream_executor.dnn.TensorDescriptorProto input = 2;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.input_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .stream_executor.dnn.TensorDescriptorProto filter = 3;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.filter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .stream_executor.dnn.TensorDescriptorProto output = 4;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.output_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.conv_desc_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double conv_scale = 6;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.conv_scale_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double side_value_scale = 7;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.side_value_scale_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .stream_executor.dnn.ActivationMode activation = 8;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.activation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 input_address = 9;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.input_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 filter_address = 10;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.filter_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 output_address = 11;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.output_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 bias_address = 12;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.bias_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 side_input_address = 13;
    {PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.side_input_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::stream_executor::dnn::TensorDescriptorProto>()},
    {::_pbi::TcParser::GetTable<::stream_executor::dnn::TensorDescriptorProto>()},
    {::_pbi::TcParser::GetTable<::stream_executor::dnn::TensorDescriptorProto>()},
    {::_pbi::TcParser::GetTable<::stream_executor::dnn::ConvolutionDescriptorProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ConvolutionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ConvolutionProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.input_ != nullptr);
      _impl_.input_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.filter_ != nullptr);
      _impl_.filter_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.output_ != nullptr);
      _impl_.output_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.conv_desc_ != nullptr);
      _impl_.conv_desc_->Clear();
    }
  }
  ::memset(&_impl_.kind_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.side_input_address_) -
      reinterpret_cast<char*>(&_impl_.kind_)) + sizeof(_impl_.side_input_address_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConvolutionProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConvolutionProto& this_ = static_cast<const ConvolutionProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConvolutionProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConvolutionProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ConvolutionProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .stream_executor.dnn.ConvolutionKind kind = 1;
          if (this_._internal_kind() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_kind(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .stream_executor.dnn.TensorDescriptorProto input = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.input_, this_._impl_.input_->GetCachedSize(), target,
                stream);
          }

          // .stream_executor.dnn.TensorDescriptorProto filter = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.filter_, this_._impl_.filter_->GetCachedSize(), target,
                stream);
          }

          // .stream_executor.dnn.TensorDescriptorProto output = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.output_, this_._impl_.output_->GetCachedSize(), target,
                stream);
          }

          // .stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.conv_desc_, this_._impl_.conv_desc_->GetCachedSize(), target,
                stream);
          }

          // double conv_scale = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_conv_scale()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_conv_scale(), target);
          }

          // double side_value_scale = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_side_value_scale()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_side_value_scale(), target);
          }

          // .stream_executor.dnn.ActivationMode activation = 8;
          if (this_._internal_activation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_activation(), target);
          }

          // int64 input_address = 9;
          if (this_._internal_input_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_input_address(), target);
          }

          // int64 filter_address = 10;
          if (this_._internal_filter_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_filter_address(), target);
          }

          // int64 output_address = 11;
          if (this_._internal_output_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_output_address(), target);
          }

          // int64 bias_address = 12;
          if (this_._internal_bias_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<12>(
                    stream, this_._internal_bias_address(), target);
          }

          // int64 side_input_address = 13;
          if (this_._internal_side_input_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<13>(
                    stream, this_._internal_side_input_address(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ConvolutionProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConvolutionProto::ByteSizeLong(const MessageLite& base) {
          const ConvolutionProto& this_ = static_cast<const ConvolutionProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConvolutionProto::ByteSizeLong() const {
          const ConvolutionProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.ConvolutionProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .stream_executor.dnn.TensorDescriptorProto input = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_);
            }
            // .stream_executor.dnn.TensorDescriptorProto filter = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filter_);
            }
            // .stream_executor.dnn.TensorDescriptorProto output = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_);
            }
            // .stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.conv_desc_);
            }
          }
           {
            // .stream_executor.dnn.ConvolutionKind kind = 1;
            if (this_._internal_kind() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
            }
            // .stream_executor.dnn.ActivationMode activation = 8;
            if (this_._internal_activation() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_activation());
            }
            // double conv_scale = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_conv_scale()) != 0) {
              total_size += 9;
            }
            // double side_value_scale = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_side_value_scale()) != 0) {
              total_size += 9;
            }
            // int64 input_address = 9;
            if (this_._internal_input_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_input_address());
            }
            // int64 filter_address = 10;
            if (this_._internal_filter_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_filter_address());
            }
            // int64 output_address = 11;
            if (this_._internal_output_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_output_address());
            }
            // int64 bias_address = 12;
            if (this_._internal_bias_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_bias_address());
            }
            // int64 side_input_address = 13;
            if (this_._internal_side_input_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_side_input_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConvolutionProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConvolutionProto*>(&to_msg);
  auto& from = static_cast<const ConvolutionProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ConvolutionProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.input_ != nullptr);
      if (_this->_impl_.input_ == nullptr) {
        _this->_impl_.input_ =
            ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::TensorDescriptorProto>(arena, *from._impl_.input_);
      } else {
        _this->_impl_.input_->MergeFrom(*from._impl_.input_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.filter_ != nullptr);
      if (_this->_impl_.filter_ == nullptr) {
        _this->_impl_.filter_ =
            ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::TensorDescriptorProto>(arena, *from._impl_.filter_);
      } else {
        _this->_impl_.filter_->MergeFrom(*from._impl_.filter_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.output_ != nullptr);
      if (_this->_impl_.output_ == nullptr) {
        _this->_impl_.output_ =
            ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::TensorDescriptorProto>(arena, *from._impl_.output_);
      } else {
        _this->_impl_.output_->MergeFrom(*from._impl_.output_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.conv_desc_ != nullptr);
      if (_this->_impl_.conv_desc_ == nullptr) {
        _this->_impl_.conv_desc_ =
            ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::ConvolutionDescriptorProto>(arena, *from._impl_.conv_desc_);
      } else {
        _this->_impl_.conv_desc_->MergeFrom(*from._impl_.conv_desc_);
      }
    }
  }
  if (from._internal_kind() != 0) {
    _this->_impl_.kind_ = from._impl_.kind_;
  }
  if (from._internal_activation() != 0) {
    _this->_impl_.activation_ = from._impl_.activation_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_conv_scale()) != 0) {
    _this->_impl_.conv_scale_ = from._impl_.conv_scale_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_side_value_scale()) != 0) {
    _this->_impl_.side_value_scale_ = from._impl_.side_value_scale_;
  }
  if (from._internal_input_address() != 0) {
    _this->_impl_.input_address_ = from._impl_.input_address_;
  }
  if (from._internal_filter_address() != 0) {
    _this->_impl_.filter_address_ = from._impl_.filter_address_;
  }
  if (from._internal_output_address() != 0) {
    _this->_impl_.output_address_ = from._impl_.output_address_;
  }
  if (from._internal_bias_address() != 0) {
    _this->_impl_.bias_address_ = from._impl_.bias_address_;
  }
  if (from._internal_side_input_address() != 0) {
    _this->_impl_.side_input_address_ = from._impl_.side_input_address_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConvolutionProto::CopyFrom(const ConvolutionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ConvolutionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConvolutionProto::InternalSwap(ConvolutionProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.side_input_address_)
      + sizeof(ConvolutionProto::_impl_.side_input_address_)
      - PROTOBUF_FIELD_OFFSET(ConvolutionProto, _impl_.input_)>(
          reinterpret_cast<char*>(&_impl_.input_),
          reinterpret_cast<char*>(&other->_impl_.input_));
}

::google::protobuf::Metadata ConvolutionProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MatmulProto::_Internal {
 public:
};

MatmulProto::MatmulProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.MatmulProto)
}
MatmulProto::MatmulProto(
    ::google::protobuf::Arena* arena, const MatmulProto& from)
    : MatmulProto(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MatmulProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MatmulProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ab_dtype_),
           0,
           offsetof(Impl_, bias_address_) -
               offsetof(Impl_, ab_dtype_) +
               sizeof(Impl_::bias_address_));
}
MatmulProto::~MatmulProto() {
  // @@protoc_insertion_point(destructor:tensorflow.MatmulProto)
  SharedDtor(*this);
}
inline void MatmulProto::SharedDtor(MessageLite& self) {
  MatmulProto& this_ = static_cast<MatmulProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MatmulProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MatmulProto(arena);
}
constexpr auto MatmulProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MatmulProto),
                                            alignof(MatmulProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MatmulProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MatmulProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MatmulProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MatmulProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MatmulProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MatmulProto>(), &MatmulProto::ByteSizeLong,
            &MatmulProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_._cached_size_),
        false,
    },
    &MatmulProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MatmulProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 0, 0, 2> MatmulProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::MatmulProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .stream_executor.dnn.DataType ab_dtype = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatmulProto, _impl_.ab_dtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ab_dtype_)}},
    // .stream_executor.dnn.DataType c_dtype = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatmulProto, _impl_.c_dtype_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.c_dtype_)}},
    // bool trans_a = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MatmulProto, _impl_.trans_a_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.trans_a_)}},
    // bool trans_b = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MatmulProto, _impl_.trans_b_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.trans_b_)}},
    // uint64 m = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.m_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.m_)}},
    // uint64 n = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.n_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.n_)}},
    // uint64 k = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.k_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.k_)}},
    // int64 lda = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.lda_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.lda_)}},
    // int64 ldb = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.ldb_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ldb_)}},
    // int64 ldc = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.ldc_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ldc_)}},
    // .stream_executor.dnn.ActivationMode activation = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatmulProto, _impl_.activation_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.activation_)}},
    // int64 a_address = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.a_address_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.a_address_)}},
    // int64 b_address = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.b_address_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.b_address_)}},
    // int64 c_address = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.c_address_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.c_address_)}},
    // int64 bias_address = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MatmulProto, _impl_.bias_address_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.bias_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .stream_executor.dnn.DataType ab_dtype = 1;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ab_dtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .stream_executor.dnn.DataType c_dtype = 2;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.c_dtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool trans_a = 3;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.trans_a_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool trans_b = 4;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.trans_b_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 m = 5;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 n = 6;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.n_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 k = 7;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 lda = 8;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.lda_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 ldb = 9;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ldb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 ldc = 10;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ldc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .stream_executor.dnn.ActivationMode activation = 11;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.activation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 a_address = 12;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.a_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 b_address = 13;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.b_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 c_address = 14;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.c_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 bias_address = 15;
    {PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.bias_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MatmulProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.MatmulProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ab_dtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bias_address_) -
      reinterpret_cast<char*>(&_impl_.ab_dtype_)) + sizeof(_impl_.bias_address_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MatmulProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MatmulProto& this_ = static_cast<const MatmulProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MatmulProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MatmulProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MatmulProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .stream_executor.dnn.DataType ab_dtype = 1;
          if (this_._internal_ab_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_ab_dtype(), target);
          }

          // .stream_executor.dnn.DataType c_dtype = 2;
          if (this_._internal_c_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_c_dtype(), target);
          }

          // bool trans_a = 3;
          if (this_._internal_trans_a() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_trans_a(), target);
          }

          // bool trans_b = 4;
          if (this_._internal_trans_b() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_trans_b(), target);
          }

          // uint64 m = 5;
          if (this_._internal_m() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_m(), target);
          }

          // uint64 n = 6;
          if (this_._internal_n() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_n(), target);
          }

          // uint64 k = 7;
          if (this_._internal_k() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_k(), target);
          }

          // int64 lda = 8;
          if (this_._internal_lda() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_lda(), target);
          }

          // int64 ldb = 9;
          if (this_._internal_ldb() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_ldb(), target);
          }

          // int64 ldc = 10;
          if (this_._internal_ldc() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_ldc(), target);
          }

          // .stream_executor.dnn.ActivationMode activation = 11;
          if (this_._internal_activation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                11, this_._internal_activation(), target);
          }

          // int64 a_address = 12;
          if (this_._internal_a_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<12>(
                    stream, this_._internal_a_address(), target);
          }

          // int64 b_address = 13;
          if (this_._internal_b_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<13>(
                    stream, this_._internal_b_address(), target);
          }

          // int64 c_address = 14;
          if (this_._internal_c_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<14>(
                    stream, this_._internal_c_address(), target);
          }

          // int64 bias_address = 15;
          if (this_._internal_bias_address() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<15>(
                    stream, this_._internal_bias_address(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MatmulProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MatmulProto::ByteSizeLong(const MessageLite& base) {
          const MatmulProto& this_ = static_cast<const MatmulProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MatmulProto::ByteSizeLong() const {
          const MatmulProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.MatmulProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .stream_executor.dnn.DataType ab_dtype = 1;
            if (this_._internal_ab_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_ab_dtype());
            }
            // .stream_executor.dnn.DataType c_dtype = 2;
            if (this_._internal_c_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_c_dtype());
            }
            // uint64 m = 5;
            if (this_._internal_m() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_m());
            }
            // uint64 n = 6;
            if (this_._internal_n() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_n());
            }
            // bool trans_a = 3;
            if (this_._internal_trans_a() != 0) {
              total_size += 2;
            }
            // bool trans_b = 4;
            if (this_._internal_trans_b() != 0) {
              total_size += 2;
            }
            // .stream_executor.dnn.ActivationMode activation = 11;
            if (this_._internal_activation() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_activation());
            }
            // uint64 k = 7;
            if (this_._internal_k() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_k());
            }
            // int64 lda = 8;
            if (this_._internal_lda() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lda());
            }
            // int64 ldb = 9;
            if (this_._internal_ldb() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_ldb());
            }
            // int64 ldc = 10;
            if (this_._internal_ldc() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_ldc());
            }
            // int64 a_address = 12;
            if (this_._internal_a_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_a_address());
            }
            // int64 b_address = 13;
            if (this_._internal_b_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_b_address());
            }
            // int64 c_address = 14;
            if (this_._internal_c_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_c_address());
            }
            // int64 bias_address = 15;
            if (this_._internal_bias_address() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_bias_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MatmulProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatmulProto*>(&to_msg);
  auto& from = static_cast<const MatmulProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.MatmulProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ab_dtype() != 0) {
    _this->_impl_.ab_dtype_ = from._impl_.ab_dtype_;
  }
  if (from._internal_c_dtype() != 0) {
    _this->_impl_.c_dtype_ = from._impl_.c_dtype_;
  }
  if (from._internal_m() != 0) {
    _this->_impl_.m_ = from._impl_.m_;
  }
  if (from._internal_n() != 0) {
    _this->_impl_.n_ = from._impl_.n_;
  }
  if (from._internal_trans_a() != 0) {
    _this->_impl_.trans_a_ = from._impl_.trans_a_;
  }
  if (from._internal_trans_b() != 0) {
    _this->_impl_.trans_b_ = from._impl_.trans_b_;
  }
  if (from._internal_activation() != 0) {
    _this->_impl_.activation_ = from._impl_.activation_;
  }
  if (from._internal_k() != 0) {
    _this->_impl_.k_ = from._impl_.k_;
  }
  if (from._internal_lda() != 0) {
    _this->_impl_.lda_ = from._impl_.lda_;
  }
  if (from._internal_ldb() != 0) {
    _this->_impl_.ldb_ = from._impl_.ldb_;
  }
  if (from._internal_ldc() != 0) {
    _this->_impl_.ldc_ = from._impl_.ldc_;
  }
  if (from._internal_a_address() != 0) {
    _this->_impl_.a_address_ = from._impl_.a_address_;
  }
  if (from._internal_b_address() != 0) {
    _this->_impl_.b_address_ = from._impl_.b_address_;
  }
  if (from._internal_c_address() != 0) {
    _this->_impl_.c_address_ = from._impl_.c_address_;
  }
  if (from._internal_bias_address() != 0) {
    _this->_impl_.bias_address_ = from._impl_.bias_address_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatmulProto::CopyFrom(const MatmulProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.MatmulProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatmulProto::InternalSwap(MatmulProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.bias_address_)
      + sizeof(MatmulProto::_impl_.bias_address_)
      - PROTOBUF_FIELD_OFFSET(MatmulProto, _impl_.ab_dtype_)>(
          reinterpret_cast<char*>(&_impl_.ab_dtype_),
          reinterpret_cast<char*>(&other->_impl_.ab_dtype_));
}

::google::protobuf::Metadata MatmulProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fconv_5fautotuning_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
