// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/critical_section.proto
// Protobuf C++ Version: 5.29.0

#ifndef tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_2epb_2eh
#define tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto;
namespace tensorflow {
class CriticalSectionDef;
struct CriticalSectionDefDefaultTypeInternal;
extern CriticalSectionDefDefaultTypeInternal _CriticalSectionDef_default_instance_;
class CriticalSectionExecutionDef;
struct CriticalSectionExecutionDefDefaultTypeInternal;
extern CriticalSectionExecutionDefDefaultTypeInternal _CriticalSectionExecutionDef_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {

// ===================================================================


// -------------------------------------------------------------------

class CriticalSectionExecutionDef final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CriticalSectionExecutionDef) */ {
 public:
  inline CriticalSectionExecutionDef() : CriticalSectionExecutionDef(nullptr) {}
  ~CriticalSectionExecutionDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CriticalSectionExecutionDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CriticalSectionExecutionDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CriticalSectionExecutionDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline CriticalSectionExecutionDef(const CriticalSectionExecutionDef& from) : CriticalSectionExecutionDef(nullptr, from) {}
  inline CriticalSectionExecutionDef(CriticalSectionExecutionDef&& from) noexcept
      : CriticalSectionExecutionDef(nullptr, std::move(from)) {}
  inline CriticalSectionExecutionDef& operator=(const CriticalSectionExecutionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CriticalSectionExecutionDef& operator=(CriticalSectionExecutionDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CriticalSectionExecutionDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const CriticalSectionExecutionDef* internal_default_instance() {
    return reinterpret_cast<const CriticalSectionExecutionDef*>(
        &_CriticalSectionExecutionDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CriticalSectionExecutionDef& a, CriticalSectionExecutionDef& b) { a.Swap(&b); }
  inline void Swap(CriticalSectionExecutionDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CriticalSectionExecutionDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CriticalSectionExecutionDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CriticalSectionExecutionDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CriticalSectionExecutionDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CriticalSectionExecutionDef& from) { CriticalSectionExecutionDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CriticalSectionExecutionDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.CriticalSectionExecutionDef"; }

 protected:
  explicit CriticalSectionExecutionDef(::google::protobuf::Arena* arena);
  CriticalSectionExecutionDef(::google::protobuf::Arena* arena, const CriticalSectionExecutionDef& from);
  CriticalSectionExecutionDef(::google::protobuf::Arena* arena, CriticalSectionExecutionDef&& from) noexcept
      : CriticalSectionExecutionDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecuteInCriticalSectionNameFieldNumber = 1,
    kExclusiveResourceAccessFieldNumber = 2,
  };
  // string execute_in_critical_section_name = 1;
  void clear_execute_in_critical_section_name() ;
  const std::string& execute_in_critical_section_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_execute_in_critical_section_name(Arg_&& arg, Args_... args);
  std::string* mutable_execute_in_critical_section_name();
  PROTOBUF_NODISCARD std::string* release_execute_in_critical_section_name();
  void set_allocated_execute_in_critical_section_name(std::string* value);

  private:
  const std::string& _internal_execute_in_critical_section_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_execute_in_critical_section_name(
      const std::string& value);
  std::string* _internal_mutable_execute_in_critical_section_name();

  public:
  // bool exclusive_resource_access = 2;
  void clear_exclusive_resource_access() ;
  bool exclusive_resource_access() const;
  void set_exclusive_resource_access(bool value);

  private:
  bool _internal_exclusive_resource_access() const;
  void _internal_set_exclusive_resource_access(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CriticalSectionExecutionDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      79, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CriticalSectionExecutionDef& from_msg);
    ::google::protobuf::internal::ArenaStringPtr execute_in_critical_section_name_;
    bool exclusive_resource_access_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto;
};
// -------------------------------------------------------------------

class CriticalSectionDef final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.CriticalSectionDef) */ {
 public:
  inline CriticalSectionDef() : CriticalSectionDef(nullptr) {}
  ~CriticalSectionDef() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CriticalSectionDef* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CriticalSectionDef));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CriticalSectionDef(
      ::google::protobuf::internal::ConstantInitialized);

  inline CriticalSectionDef(const CriticalSectionDef& from) : CriticalSectionDef(nullptr, from) {}
  inline CriticalSectionDef(CriticalSectionDef&& from) noexcept
      : CriticalSectionDef(nullptr, std::move(from)) {}
  inline CriticalSectionDef& operator=(const CriticalSectionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline CriticalSectionDef& operator=(CriticalSectionDef&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CriticalSectionDef& default_instance() {
    return *internal_default_instance();
  }
  static inline const CriticalSectionDef* internal_default_instance() {
    return reinterpret_cast<const CriticalSectionDef*>(
        &_CriticalSectionDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CriticalSectionDef& a, CriticalSectionDef& b) { a.Swap(&b); }
  inline void Swap(CriticalSectionDef* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CriticalSectionDef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CriticalSectionDef* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CriticalSectionDef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CriticalSectionDef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CriticalSectionDef& from) { CriticalSectionDef::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CriticalSectionDef* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.CriticalSectionDef"; }

 protected:
  explicit CriticalSectionDef(::google::protobuf::Arena* arena);
  CriticalSectionDef(::google::protobuf::Arena* arena, const CriticalSectionDef& from);
  CriticalSectionDef(::google::protobuf::Arena* arena, CriticalSectionDef&& from) noexcept
      : CriticalSectionDef(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCriticalSectionNameFieldNumber = 1,
  };
  // string critical_section_name = 1;
  void clear_critical_section_name() ;
  const std::string& critical_section_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_critical_section_name(Arg_&& arg, Args_... args);
  std::string* mutable_critical_section_name();
  PROTOBUF_NODISCARD std::string* release_critical_section_name();
  void set_allocated_critical_section_name(std::string* value);

  private:
  const std::string& _internal_critical_section_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_critical_section_name(
      const std::string& value);
  std::string* _internal_mutable_critical_section_name();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.CriticalSectionDef)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CriticalSectionDef& from_msg);
    ::google::protobuf::internal::ArenaStringPtr critical_section_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CriticalSectionDef

// string critical_section_name = 1;
inline void CriticalSectionDef::clear_critical_section_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.critical_section_name_.ClearToEmpty();
}
inline const std::string& CriticalSectionDef::critical_section_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionDef.critical_section_name)
  return _internal_critical_section_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CriticalSectionDef::set_critical_section_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.critical_section_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionDef.critical_section_name)
}
inline std::string* CriticalSectionDef::mutable_critical_section_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_critical_section_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CriticalSectionDef.critical_section_name)
  return _s;
}
inline const std::string& CriticalSectionDef::_internal_critical_section_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.critical_section_name_.Get();
}
inline void CriticalSectionDef::_internal_set_critical_section_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.critical_section_name_.Set(value, GetArena());
}
inline std::string* CriticalSectionDef::_internal_mutable_critical_section_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.critical_section_name_.Mutable( GetArena());
}
inline std::string* CriticalSectionDef::release_critical_section_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CriticalSectionDef.critical_section_name)
  return _impl_.critical_section_name_.Release();
}
inline void CriticalSectionDef::set_allocated_critical_section_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.critical_section_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.critical_section_name_.IsDefault()) {
    _impl_.critical_section_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CriticalSectionDef.critical_section_name)
}

// -------------------------------------------------------------------

// CriticalSectionExecutionDef

// string execute_in_critical_section_name = 1;
inline void CriticalSectionExecutionDef::clear_execute_in_critical_section_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execute_in_critical_section_name_.ClearToEmpty();
}
inline const std::string& CriticalSectionExecutionDef::execute_in_critical_section_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return _internal_execute_in_critical_section_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CriticalSectionExecutionDef::set_execute_in_critical_section_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execute_in_critical_section_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
inline std::string* CriticalSectionExecutionDef::mutable_execute_in_critical_section_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_execute_in_critical_section_name();
  // @@protoc_insertion_point(field_mutable:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return _s;
}
inline const std::string& CriticalSectionExecutionDef::_internal_execute_in_critical_section_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execute_in_critical_section_name_.Get();
}
inline void CriticalSectionExecutionDef::_internal_set_execute_in_critical_section_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execute_in_critical_section_name_.Set(value, GetArena());
}
inline std::string* CriticalSectionExecutionDef::_internal_mutable_execute_in_critical_section_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.execute_in_critical_section_name_.Mutable( GetArena());
}
inline std::string* CriticalSectionExecutionDef::release_execute_in_critical_section_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return _impl_.execute_in_critical_section_name_.Release();
}
inline void CriticalSectionExecutionDef::set_allocated_execute_in_critical_section_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execute_in_critical_section_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.execute_in_critical_section_name_.IsDefault()) {
    _impl_.execute_in_critical_section_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}

// bool exclusive_resource_access = 2;
inline void CriticalSectionExecutionDef::clear_exclusive_resource_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exclusive_resource_access_ = false;
}
inline bool CriticalSectionExecutionDef::exclusive_resource_access() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionExecutionDef.exclusive_resource_access)
  return _internal_exclusive_resource_access();
}
inline void CriticalSectionExecutionDef::set_exclusive_resource_access(bool value) {
  _internal_set_exclusive_resource_access(value);
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionExecutionDef.exclusive_resource_access)
}
inline bool CriticalSectionExecutionDef::_internal_exclusive_resource_access() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exclusive_resource_access_;
}
inline void CriticalSectionExecutionDef::_internal_set_exclusive_resource_access(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exclusive_resource_access_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_2epb_2eh
