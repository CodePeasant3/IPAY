// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/debug_event.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/debug_event.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr SourceFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lines_{},
        file_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SourceFile::SourceFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SourceFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceFileDefaultTypeInternal() {}
  union {
    SourceFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceFileDefaultTypeInternal _SourceFile_default_instance_;

inline constexpr DebuggedGraph::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instrumented_ops_{},
        graph_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        original_graph_def_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrumented_graph_def_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outer_context_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebuggedGraph::DebuggedGraph(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebuggedGraphDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebuggedGraphDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebuggedGraphDefaultTypeInternal() {}
  union {
    DebuggedGraph _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebuggedGraphDefaultTypeInternal _DebuggedGraph_default_instance_;

inline constexpr DebuggedDevice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebuggedDevice::DebuggedDevice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebuggedDeviceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebuggedDeviceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebuggedDeviceDefaultTypeInternal() {}
  union {
    DebuggedDevice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebuggedDeviceDefaultTypeInternal _DebuggedDevice_default_instance_;

inline constexpr DebugMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tensorflow_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tfdbg_run_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DebugMetadata::DebugMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebugMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugMetadataDefaultTypeInternal() {}
  union {
    DebugMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugMetadataDefaultTypeInternal _DebugMetadata_default_instance_;

inline constexpr CodeLocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stack_frame_ids_{},
        host_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CodeLocation::CodeLocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CodeLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CodeLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CodeLocationDefaultTypeInternal() {}
  union {
    CodeLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CodeLocationDefaultTypeInternal _CodeLocation_default_instance_;

inline constexpr StackFrameWithId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_line_col_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StackFrameWithId::StackFrameWithId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StackFrameWithIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackFrameWithIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackFrameWithIdDefaultTypeInternal() {}
  union {
    StackFrameWithId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackFrameWithIdDefaultTypeInternal _StackFrameWithId_default_instance_;

inline constexpr GraphOpCreation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_names_{},
        output_tensor_ids_{},
        _output_tensor_ids_cached_byte_size_{0},
        op_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_location_{nullptr},
        num_outputs_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphOpCreation::GraphOpCreation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphOpCreationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphOpCreationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphOpCreationDefaultTypeInternal() {}
  union {
    GraphOpCreation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphOpCreationDefaultTypeInternal _GraphOpCreation_default_instance_;

inline constexpr GraphExecutionTrace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tfdbg_context_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tensor_proto_{nullptr},
        output_slot_{0},
        tensor_debug_mode_{static_cast< ::tensorflow::TensorDebugMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GraphExecutionTrace::GraphExecutionTrace(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphExecutionTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphExecutionTraceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphExecutionTraceDefaultTypeInternal() {}
  union {
    GraphExecutionTrace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphExecutionTraceDefaultTypeInternal _GraphExecutionTrace_default_instance_;

inline constexpr Execution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_tensor_ids_{},
        _input_tensor_ids_cached_byte_size_{0},
        output_tensor_ids_{},
        _output_tensor_ids_cached_byte_size_{0},
        tensor_protos_{},
        output_tensor_device_ids_{},
        _output_tensor_device_ids_cached_byte_size_{0},
        op_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_location_{nullptr},
        num_outputs_{0},
        tensor_debug_mode_{static_cast< ::tensorflow::TensorDebugMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Execution::Execution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExecutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecutionDefaultTypeInternal() {}
  union {
    Execution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecutionDefaultTypeInternal _Execution_default_instance_;

inline constexpr DebugEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : wall_time_{0},
        step_{::int64_t{0}},
        what_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR DebugEvent::DebugEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DebugEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DebugEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DebugEventDefaultTypeInternal() {}
  union {
    DebugEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DebugEventDefaultTypeInternal _DebugEvent_default_instance_;
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugEvent, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugEvent, _impl_.wall_time_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugEvent, _impl_.step_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugEvent, _impl_.what_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugMetadata, _impl_.tensorflow_version_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugMetadata, _impl_.file_version_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebugMetadata, _impl_.tfdbg_run_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::SourceFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::SourceFile, _impl_.file_path_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::SourceFile, _impl_.host_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::SourceFile, _impl_.lines_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::StackFrameWithId, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::StackFrameWithId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::StackFrameWithId, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::StackFrameWithId, _impl_.file_line_col_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::CodeLocation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::CodeLocation, _impl_.host_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CodeLocation, _impl_.stack_frame_ids_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.op_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.op_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.graph_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.graph_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.input_names_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.num_outputs_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.code_location_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphOpCreation, _impl_.output_tensor_ids_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _impl_.graph_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _impl_.graph_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _impl_.instrumented_ops_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _impl_.original_graph_def_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _impl_.instrumented_graph_def_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedGraph, _impl_.outer_context_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedDevice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedDevice, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::DebuggedDevice, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.op_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.num_outputs_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.graph_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.input_tensor_ids_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.output_tensor_ids_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.tensor_debug_mode_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.tensor_protos_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.code_location_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::Execution, _impl_.output_tensor_device_ids_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_.tfdbg_context_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_.op_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_.output_slot_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_.tensor_debug_mode_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_.tensor_proto_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GraphExecutionTrace, _impl_.device_name_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::DebugEvent)},
        {20, -1, -1, sizeof(::tensorflow::DebugMetadata)},
        {31, -1, -1, sizeof(::tensorflow::SourceFile)},
        {42, 52, -1, sizeof(::tensorflow::StackFrameWithId)},
        {54, -1, -1, sizeof(::tensorflow::CodeLocation)},
        {64, 81, -1, sizeof(::tensorflow::GraphOpCreation)},
        {90, -1, -1, sizeof(::tensorflow::DebuggedGraph)},
        {104, -1, -1, sizeof(::tensorflow::DebuggedDevice)},
        {114, 131, -1, sizeof(::tensorflow::Execution)},
        {140, 154, -1, sizeof(::tensorflow::GraphExecutionTrace)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_DebugEvent_default_instance_._instance,
    &::tensorflow::_DebugMetadata_default_instance_._instance,
    &::tensorflow::_SourceFile_default_instance_._instance,
    &::tensorflow::_StackFrameWithId_default_instance_._instance,
    &::tensorflow::_CodeLocation_default_instance_._instance,
    &::tensorflow::_GraphOpCreation_default_instance_._instance,
    &::tensorflow::_DebuggedGraph_default_instance_._instance,
    &::tensorflow::_DebuggedDevice_default_instance_._instance,
    &::tensorflow::_Execution_default_instance_._instance,
    &::tensorflow::_GraphExecutionTrace_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n*tensorflow/core/protobuf/debug_event.p"
    "roto\022\ntensorflow\0320tensorflow/core/framew"
    "ork/graph_debug_info.proto\032&tensorflow/c"
    "ore/framework/tensor.proto\"\376\003\n\nDebugEven"
    "t\022\021\n\twall_time\030\001 \001(\001\022\014\n\004step\030\002 \001(\003\0223\n\016de"
    "bug_metadata\030\003 \001(\0132\031.tensorflow.DebugMet"
    "adataH\000\022-\n\013source_file\030\004 \001(\0132\026.tensorflo"
    "w.SourceFileH\000\022;\n\023stack_frame_with_id\030\006 "
    "\001(\0132\034.tensorflow.StackFrameWithIdH\000\0228\n\021g"
    "raph_op_creation\030\007 \001(\0132\033.tensorflow.Grap"
    "hOpCreationH\000\0223\n\016debugged_graph\030\010 \001(\0132\031."
    "tensorflow.DebuggedGraphH\000\022*\n\texecution\030"
    "\t \001(\0132\025.tensorflow.ExecutionH\000\022@\n\025graph_"
    "execution_trace\030\n \001(\0132\037.tensorflow.Graph"
    "ExecutionTraceH\000\022\022\n\010graph_id\030\013 \001(\tH\000\0225\n\017"
    "debugged_device\030\014 \001(\0132\032.tensorflow.Debug"
    "gedDeviceH\000B\006\n\004what\"W\n\rDebugMetadata\022\032\n\022"
    "tensorflow_version\030\001 \001(\t\022\024\n\014file_version"
    "\030\002 \001(\t\022\024\n\014tfdbg_run_id\030\003 \001(\t\"A\n\nSourceFi"
    "le\022\021\n\tfile_path\030\001 \001(\t\022\021\n\thost_name\030\002 \001(\t"
    "\022\r\n\005lines\030\003 \003(\t\"]\n\020StackFrameWithId\022\n\n\002i"
    "d\030\001 \001(\t\022=\n\rfile_line_col\030\002 \001(\0132&.tensorf"
    "low.GraphDebugInfo.FileLineCol\":\n\014CodeLo"
    "cation\022\021\n\thost_name\030\001 \001(\t\022\027\n\017stack_frame"
    "_ids\030\002 \003(\t\"\344\001\n\017GraphOpCreation\022\017\n\007op_typ"
    "e\030\001 \001(\t\022\017\n\007op_name\030\002 \001(\t\022\022\n\ngraph_name\030\003"
    " \001(\t\022\020\n\010graph_id\030\004 \001(\t\022\023\n\013device_name\030\005 "
    "\001(\t\022\023\n\013input_names\030\006 \003(\t\022\023\n\013num_outputs\030"
    "\007 \001(\005\022/\n\rcode_location\030\010 \001(\0132\030.tensorflo"
    "w.CodeLocation\022\031\n\021output_tensor_ids\030\t \003("
    "\005\"\245\001\n\rDebuggedGraph\022\020\n\010graph_id\030\001 \001(\t\022\022\n"
    "\ngraph_name\030\002 \001(\t\022\030\n\020instrumented_ops\030\003 "
    "\003(\t\022\032\n\022original_graph_def\030\004 \001(\014\022\036\n\026instr"
    "umented_graph_def\030\005 \001(\014\022\030\n\020outer_context"
    "_id\030\006 \001(\t\"8\n\016DebuggedDevice\022\023\n\013device_na"
    "me\030\001 \001(\t\022\021\n\tdevice_id\030\002 \001(\005\"\263\002\n\tExecutio"
    "n\022\017\n\007op_type\030\001 \001(\t\022\023\n\013num_outputs\030\002 \001(\005\022"
    "\020\n\010graph_id\030\003 \001(\t\022\030\n\020input_tensor_ids\030\004 "
    "\003(\003\022\031\n\021output_tensor_ids\030\005 \003(\003\0226\n\021tensor"
    "_debug_mode\030\006 \001(\0162\033.tensorflow.TensorDeb"
    "ugMode\022.\n\rtensor_protos\030\007 \003(\0132\027.tensorfl"
    "ow.TensorProto\022/\n\rcode_location\030\010 \001(\0132\030."
    "tensorflow.CodeLocation\022 \n\030output_tensor"
    "_device_ids\030\t \003(\005\"\321\001\n\023GraphExecutionTrac"
    "e\022\030\n\020tfdbg_context_id\030\001 \001(\t\022\017\n\007op_name\030\002"
    " \001(\t\022\023\n\013output_slot\030\003 \001(\005\0226\n\021tensor_debu"
    "g_mode\030\004 \001(\0162\033.tensorflow.TensorDebugMod"
    "e\022-\n\014tensor_proto\030\005 \001(\0132\027.tensorflow.Ten"
    "sorProto\022\023\n\013device_name\030\006 \001(\t*\266\001\n\017Tensor"
    "DebugMode\022\017\n\013UNSPECIFIED\020\000\022\r\n\tNO_TENSOR\020"
    "\001\022\017\n\013CURT_HEALTH\020\002\022\022\n\016CONCISE_HEALTH\020\003\022\017"
    "\n\013FULL_HEALTH\020\004\022\t\n\005SHAPE\020\005\022\021\n\rFULL_NUMER"
    "ICS\020\006\022\017\n\013FULL_TENSOR\020\007\022\036\n\032REDUCE_INF_NAN"
    "_THREE_SLOTS\020\010B\203\001\n\023org.tensorflow.utilB\020"
    "DebugEventProtosP\001ZUgithub.com/tensorflo"
    "w/tensorflow/tensorflow/go/core/protobuf"
    "/for_core_protos_go_proto\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto_deps[2] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2fgraph_5fdebug_5finfo_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto = {
    false,
    false,
    2276,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    "tensorflow/core/protobuf/debug_event.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto_deps,
    2,
    10,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
};
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* TensorDebugMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TensorDebugMode_internal_data_[] = {
    589824u, 0u, };
bool TensorDebugMode_IsValid(int value) {
  return 0 <= value && value <= 8;
}
// ===================================================================

class DebugEvent::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tensorflow::DebugEvent, _impl_._oneof_case_);
};

void DebugEvent::set_allocated_debug_metadata(::tensorflow::DebugMetadata* debug_metadata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (debug_metadata) {
    ::google::protobuf::Arena* submessage_arena = debug_metadata->GetArena();
    if (message_arena != submessage_arena) {
      debug_metadata = ::google::protobuf::internal::GetOwnedMessage(message_arena, debug_metadata, submessage_arena);
    }
    set_has_debug_metadata();
    _impl_.what_.debug_metadata_ = debug_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.debug_metadata)
}
void DebugEvent::set_allocated_source_file(::tensorflow::SourceFile* source_file) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (source_file) {
    ::google::protobuf::Arena* submessage_arena = source_file->GetArena();
    if (message_arena != submessage_arena) {
      source_file = ::google::protobuf::internal::GetOwnedMessage(message_arena, source_file, submessage_arena);
    }
    set_has_source_file();
    _impl_.what_.source_file_ = source_file;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.source_file)
}
void DebugEvent::set_allocated_stack_frame_with_id(::tensorflow::StackFrameWithId* stack_frame_with_id) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (stack_frame_with_id) {
    ::google::protobuf::Arena* submessage_arena = stack_frame_with_id->GetArena();
    if (message_arena != submessage_arena) {
      stack_frame_with_id = ::google::protobuf::internal::GetOwnedMessage(message_arena, stack_frame_with_id, submessage_arena);
    }
    set_has_stack_frame_with_id();
    _impl_.what_.stack_frame_with_id_ = stack_frame_with_id;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.stack_frame_with_id)
}
void DebugEvent::set_allocated_graph_op_creation(::tensorflow::GraphOpCreation* graph_op_creation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (graph_op_creation) {
    ::google::protobuf::Arena* submessage_arena = graph_op_creation->GetArena();
    if (message_arena != submessage_arena) {
      graph_op_creation = ::google::protobuf::internal::GetOwnedMessage(message_arena, graph_op_creation, submessage_arena);
    }
    set_has_graph_op_creation();
    _impl_.what_.graph_op_creation_ = graph_op_creation;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.graph_op_creation)
}
void DebugEvent::set_allocated_debugged_graph(::tensorflow::DebuggedGraph* debugged_graph) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (debugged_graph) {
    ::google::protobuf::Arena* submessage_arena = debugged_graph->GetArena();
    if (message_arena != submessage_arena) {
      debugged_graph = ::google::protobuf::internal::GetOwnedMessage(message_arena, debugged_graph, submessage_arena);
    }
    set_has_debugged_graph();
    _impl_.what_.debugged_graph_ = debugged_graph;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.debugged_graph)
}
void DebugEvent::set_allocated_execution(::tensorflow::Execution* execution) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (execution) {
    ::google::protobuf::Arena* submessage_arena = execution->GetArena();
    if (message_arena != submessage_arena) {
      execution = ::google::protobuf::internal::GetOwnedMessage(message_arena, execution, submessage_arena);
    }
    set_has_execution();
    _impl_.what_.execution_ = execution;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.execution)
}
void DebugEvent::set_allocated_graph_execution_trace(::tensorflow::GraphExecutionTrace* graph_execution_trace) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (graph_execution_trace) {
    ::google::protobuf::Arena* submessage_arena = graph_execution_trace->GetArena();
    if (message_arena != submessage_arena) {
      graph_execution_trace = ::google::protobuf::internal::GetOwnedMessage(message_arena, graph_execution_trace, submessage_arena);
    }
    set_has_graph_execution_trace();
    _impl_.what_.graph_execution_trace_ = graph_execution_trace;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.graph_execution_trace)
}
void DebugEvent::set_allocated_debugged_device(::tensorflow::DebuggedDevice* debugged_device) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_what();
  if (debugged_device) {
    ::google::protobuf::Arena* submessage_arena = debugged_device->GetArena();
    if (message_arena != submessage_arena) {
      debugged_device = ::google::protobuf::internal::GetOwnedMessage(message_arena, debugged_device, submessage_arena);
    }
    set_has_debugged_device();
    _impl_.what_.debugged_device_ = debugged_device;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.DebugEvent.debugged_device)
}
DebugEvent::DebugEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebugEvent)
}
inline PROTOBUF_NDEBUG_INLINE DebugEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebugEvent& from_msg)
      : what_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

DebugEvent::DebugEvent(
    ::google::protobuf::Arena* arena,
    const DebugEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebugEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wall_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, wall_time_),
           offsetof(Impl_, step_) -
               offsetof(Impl_, wall_time_) +
               sizeof(Impl_::step_));
  switch (what_case()) {
    case WHAT_NOT_SET:
      break;
      case kDebugMetadata:
        _impl_.what_.debug_metadata_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::DebugMetadata>(arena, *from._impl_.what_.debug_metadata_);
        break;
      case kSourceFile:
        _impl_.what_.source_file_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::SourceFile>(arena, *from._impl_.what_.source_file_);
        break;
      case kStackFrameWithId:
        _impl_.what_.stack_frame_with_id_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::StackFrameWithId>(arena, *from._impl_.what_.stack_frame_with_id_);
        break;
      case kGraphOpCreation:
        _impl_.what_.graph_op_creation_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::GraphOpCreation>(arena, *from._impl_.what_.graph_op_creation_);
        break;
      case kDebuggedGraph:
        _impl_.what_.debugged_graph_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::DebuggedGraph>(arena, *from._impl_.what_.debugged_graph_);
        break;
      case kExecution:
        _impl_.what_.execution_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::Execution>(arena, *from._impl_.what_.execution_);
        break;
      case kGraphExecutionTrace:
        _impl_.what_.graph_execution_trace_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::GraphExecutionTrace>(arena, *from._impl_.what_.graph_execution_trace_);
        break;
      case kGraphId:
        new (&_impl_.what_.graph_id_) decltype(_impl_.what_.graph_id_){arena, from._impl_.what_.graph_id_};
        break;
      case kDebuggedDevice:
        _impl_.what_.debugged_device_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::DebuggedDevice>(arena, *from._impl_.what_.debugged_device_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebugEvent)
}
inline PROTOBUF_NDEBUG_INLINE DebugEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : what_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void DebugEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, wall_time_),
           0,
           offsetof(Impl_, step_) -
               offsetof(Impl_, wall_time_) +
               sizeof(Impl_::step_));
}
DebugEvent::~DebugEvent() {
  // @@protoc_insertion_point(destructor:tensorflow.DebugEvent)
  SharedDtor(*this);
}
inline void DebugEvent::SharedDtor(MessageLite& self) {
  DebugEvent& this_ = static_cast<DebugEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_what()) {
    this_.clear_what();
  }
  this_._impl_.~Impl_();
}

void DebugEvent::clear_what() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.DebugEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (what_case()) {
    case kDebugMetadata: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.debug_metadata_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.debug_metadata_);
      }
      break;
    }
    case kSourceFile: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.source_file_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.source_file_);
      }
      break;
    }
    case kStackFrameWithId: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.stack_frame_with_id_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.stack_frame_with_id_);
      }
      break;
    }
    case kGraphOpCreation: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.graph_op_creation_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.graph_op_creation_);
      }
      break;
    }
    case kDebuggedGraph: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.debugged_graph_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.debugged_graph_);
      }
      break;
    }
    case kExecution: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.execution_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.execution_);
      }
      break;
    }
    case kGraphExecutionTrace: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.graph_execution_trace_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.graph_execution_trace_);
      }
      break;
    }
    case kGraphId: {
      _impl_.what_.graph_id_.Destroy();
      break;
    }
    case kDebuggedDevice: {
      if (GetArena() == nullptr) {
        delete _impl_.what_.debugged_device_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.what_.debugged_device_);
      }
      break;
    }
    case WHAT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = WHAT_NOT_SET;
}


inline void* DebugEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebugEvent(arena);
}
constexpr auto DebugEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DebugEvent),
                                            alignof(DebugEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebugEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebugEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebugEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebugEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebugEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebugEvent>(), &DebugEvent::ByteSizeLong,
            &DebugEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_._cached_size_),
        false,
    },
    &DebugEvent::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebugEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 11, 8, 46, 2> DebugEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963216,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebugEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 step = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DebugEvent, _impl_.step_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.step_)}},
    // double wall_time = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.wall_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double wall_time = 1;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.wall_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int64 step = 2;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.step_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tensorflow.DebugMetadata debug_metadata = 3;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.debug_metadata_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.SourceFile source_file = 4;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.source_file_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.StackFrameWithId stack_frame_with_id = 6;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.stack_frame_with_id_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.GraphOpCreation graph_op_creation = 7;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.graph_op_creation_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.DebuggedGraph debugged_graph = 8;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.debugged_graph_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.Execution execution = 9;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.execution_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.GraphExecutionTrace graph_execution_trace = 10;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.graph_execution_trace_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string graph_id = 11;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.graph_id_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.DebuggedDevice debugged_device = 12;
    {PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.what_.debugged_device_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::DebugMetadata>()},
    {::_pbi::TcParser::GetTable<::tensorflow::SourceFile>()},
    {::_pbi::TcParser::GetTable<::tensorflow::StackFrameWithId>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphOpCreation>()},
    {::_pbi::TcParser::GetTable<::tensorflow::DebuggedGraph>()},
    {::_pbi::TcParser::GetTable<::tensorflow::Execution>()},
    {::_pbi::TcParser::GetTable<::tensorflow::GraphExecutionTrace>()},
    {::_pbi::TcParser::GetTable<::tensorflow::DebuggedDevice>()},
  }}, {{
    "\25\0\0\0\0\0\0\0\0\0\10\0\0\0\0\0"
    "tensorflow.DebugEvent"
    "graph_id"
  }},
};

PROTOBUF_NOINLINE void DebugEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebugEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.wall_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.step_) -
      reinterpret_cast<char*>(&_impl_.wall_time_)) + sizeof(_impl_.step_));
  clear_what();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebugEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebugEvent& this_ = static_cast<const DebugEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebugEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebugEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebugEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double wall_time = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_wall_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_wall_time(), target);
          }

          // int64 step = 2;
          if (this_._internal_step() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_step(), target);
          }

          switch (this_.what_case()) {
            case kDebugMetadata: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.what_.debug_metadata_, this_._impl_.what_.debug_metadata_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSourceFile: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.what_.source_file_, this_._impl_.what_.source_file_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kStackFrameWithId: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.what_.stack_frame_with_id_, this_._impl_.what_.stack_frame_with_id_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGraphOpCreation: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.what_.graph_op_creation_, this_._impl_.what_.graph_op_creation_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDebuggedGraph: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.what_.debugged_graph_, this_._impl_.what_.debugged_graph_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kExecution: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.what_.execution_, this_._impl_.what_.execution_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGraphExecutionTrace: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.what_.graph_execution_trace_, this_._impl_.what_.graph_execution_trace_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGraphId: {
              const std::string& _s = this_._internal_graph_id();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugEvent.graph_id");
              target = stream->WriteStringMaybeAliased(11, _s, target);
              break;
            }
            case kDebuggedDevice: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.what_.debugged_device_, this_._impl_.what_.debugged_device_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebugEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebugEvent::ByteSizeLong(const MessageLite& base) {
          const DebugEvent& this_ = static_cast<const DebugEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebugEvent::ByteSizeLong() const {
          const DebugEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebugEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double wall_time = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_wall_time()) != 0) {
              total_size += 9;
            }
            // int64 step = 2;
            if (this_._internal_step() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_step());
            }
          }
          switch (this_.what_case()) {
            // .tensorflow.DebugMetadata debug_metadata = 3;
            case kDebugMetadata: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.debug_metadata_);
              break;
            }
            // .tensorflow.SourceFile source_file = 4;
            case kSourceFile: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.source_file_);
              break;
            }
            // .tensorflow.StackFrameWithId stack_frame_with_id = 6;
            case kStackFrameWithId: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.stack_frame_with_id_);
              break;
            }
            // .tensorflow.GraphOpCreation graph_op_creation = 7;
            case kGraphOpCreation: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.graph_op_creation_);
              break;
            }
            // .tensorflow.DebuggedGraph debugged_graph = 8;
            case kDebuggedGraph: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.debugged_graph_);
              break;
            }
            // .tensorflow.Execution execution = 9;
            case kExecution: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.execution_);
              break;
            }
            // .tensorflow.GraphExecutionTrace graph_execution_trace = 10;
            case kGraphExecutionTrace: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.graph_execution_trace_);
              break;
            }
            // string graph_id = 11;
            case kGraphId: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_id());
              break;
            }
            // .tensorflow.DebuggedDevice debugged_device = 12;
            case kDebuggedDevice: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.what_.debugged_device_);
              break;
            }
            case WHAT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebugEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebugEvent*>(&to_msg);
  auto& from = static_cast<const DebugEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebugEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_wall_time()) != 0) {
    _this->_impl_.wall_time_ = from._impl_.wall_time_;
  }
  if (from._internal_step() != 0) {
    _this->_impl_.step_ = from._impl_.step_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_what();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDebugMetadata: {
        if (oneof_needs_init) {
          _this->_impl_.what_.debug_metadata_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::DebugMetadata>(arena, *from._impl_.what_.debug_metadata_);
        } else {
          _this->_impl_.what_.debug_metadata_->MergeFrom(from._internal_debug_metadata());
        }
        break;
      }
      case kSourceFile: {
        if (oneof_needs_init) {
          _this->_impl_.what_.source_file_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::SourceFile>(arena, *from._impl_.what_.source_file_);
        } else {
          _this->_impl_.what_.source_file_->MergeFrom(from._internal_source_file());
        }
        break;
      }
      case kStackFrameWithId: {
        if (oneof_needs_init) {
          _this->_impl_.what_.stack_frame_with_id_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::StackFrameWithId>(arena, *from._impl_.what_.stack_frame_with_id_);
        } else {
          _this->_impl_.what_.stack_frame_with_id_->MergeFrom(from._internal_stack_frame_with_id());
        }
        break;
      }
      case kGraphOpCreation: {
        if (oneof_needs_init) {
          _this->_impl_.what_.graph_op_creation_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::GraphOpCreation>(arena, *from._impl_.what_.graph_op_creation_);
        } else {
          _this->_impl_.what_.graph_op_creation_->MergeFrom(from._internal_graph_op_creation());
        }
        break;
      }
      case kDebuggedGraph: {
        if (oneof_needs_init) {
          _this->_impl_.what_.debugged_graph_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::DebuggedGraph>(arena, *from._impl_.what_.debugged_graph_);
        } else {
          _this->_impl_.what_.debugged_graph_->MergeFrom(from._internal_debugged_graph());
        }
        break;
      }
      case kExecution: {
        if (oneof_needs_init) {
          _this->_impl_.what_.execution_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::Execution>(arena, *from._impl_.what_.execution_);
        } else {
          _this->_impl_.what_.execution_->MergeFrom(from._internal_execution());
        }
        break;
      }
      case kGraphExecutionTrace: {
        if (oneof_needs_init) {
          _this->_impl_.what_.graph_execution_trace_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::GraphExecutionTrace>(arena, *from._impl_.what_.graph_execution_trace_);
        } else {
          _this->_impl_.what_.graph_execution_trace_->MergeFrom(from._internal_graph_execution_trace());
        }
        break;
      }
      case kGraphId: {
        if (oneof_needs_init) {
          _this->_impl_.what_.graph_id_.InitDefault();
        }
        _this->_impl_.what_.graph_id_.Set(from._internal_graph_id(), arena);
        break;
      }
      case kDebuggedDevice: {
        if (oneof_needs_init) {
          _this->_impl_.what_.debugged_device_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::DebuggedDevice>(arena, *from._impl_.what_.debugged_device_);
        } else {
          _this->_impl_.what_.debugged_device_->MergeFrom(from._internal_debugged_device());
        }
        break;
      }
      case WHAT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebugEvent::CopyFrom(const DebugEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebugEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebugEvent::InternalSwap(DebugEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.step_)
      + sizeof(DebugEvent::_impl_.step_)
      - PROTOBUF_FIELD_OFFSET(DebugEvent, _impl_.wall_time_)>(
          reinterpret_cast<char*>(&_impl_.wall_time_),
          reinterpret_cast<char*>(&other->_impl_.wall_time_));
  swap(_impl_.what_, other->_impl_.what_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata DebugEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DebugMetadata::_Internal {
 public:
};

DebugMetadata::DebugMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebugMetadata)
}
inline PROTOBUF_NDEBUG_INLINE DebugMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebugMetadata& from_msg)
      : tensorflow_version_(arena, from.tensorflow_version_),
        file_version_(arena, from.file_version_),
        tfdbg_run_id_(arena, from.tfdbg_run_id_),
        _cached_size_{0} {}

DebugMetadata::DebugMetadata(
    ::google::protobuf::Arena* arena,
    const DebugMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebugMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebugMetadata)
}
inline PROTOBUF_NDEBUG_INLINE DebugMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tensorflow_version_(arena),
        file_version_(arena),
        tfdbg_run_id_(arena),
        _cached_size_{0} {}

inline void DebugMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DebugMetadata::~DebugMetadata() {
  // @@protoc_insertion_point(destructor:tensorflow.DebugMetadata)
  SharedDtor(*this);
}
inline void DebugMetadata::SharedDtor(MessageLite& self) {
  DebugMetadata& this_ = static_cast<DebugMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tensorflow_version_.Destroy();
  this_._impl_.file_version_.Destroy();
  this_._impl_.tfdbg_run_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DebugMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebugMetadata(arena);
}
constexpr auto DebugMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DebugMetadata),
                                            alignof(DebugMetadata));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebugMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebugMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebugMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebugMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebugMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebugMetadata>(), &DebugMetadata::ByteSizeLong,
            &DebugMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_._cached_size_),
        false,
    },
    &DebugMetadata::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebugMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 75, 2> DebugMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebugMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string tensorflow_version = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_.tensorflow_version_)}},
    // string file_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_.file_version_)}},
    // string tfdbg_run_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_.tfdbg_run_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tensorflow_version = 1;
    {PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_.tensorflow_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string file_version = 2;
    {PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_.file_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tfdbg_run_id = 3;
    {PROTOBUF_FIELD_OFFSET(DebugMetadata, _impl_.tfdbg_run_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\22\14\14\0\0\0\0"
    "tensorflow.DebugMetadata"
    "tensorflow_version"
    "file_version"
    "tfdbg_run_id"
  }},
};

PROTOBUF_NOINLINE void DebugMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebugMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tensorflow_version_.ClearToEmpty();
  _impl_.file_version_.ClearToEmpty();
  _impl_.tfdbg_run_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebugMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebugMetadata& this_ = static_cast<const DebugMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebugMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebugMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebugMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tensorflow_version = 1;
          if (!this_._internal_tensorflow_version().empty()) {
            const std::string& _s = this_._internal_tensorflow_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugMetadata.tensorflow_version");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string file_version = 2;
          if (!this_._internal_file_version().empty()) {
            const std::string& _s = this_._internal_file_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugMetadata.file_version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string tfdbg_run_id = 3;
          if (!this_._internal_tfdbg_run_id().empty()) {
            const std::string& _s = this_._internal_tfdbg_run_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebugMetadata.tfdbg_run_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebugMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebugMetadata::ByteSizeLong(const MessageLite& base) {
          const DebugMetadata& this_ = static_cast<const DebugMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebugMetadata::ByteSizeLong() const {
          const DebugMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebugMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string tensorflow_version = 1;
            if (!this_._internal_tensorflow_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tensorflow_version());
            }
            // string file_version = 2;
            if (!this_._internal_file_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_version());
            }
            // string tfdbg_run_id = 3;
            if (!this_._internal_tfdbg_run_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tfdbg_run_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebugMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebugMetadata*>(&to_msg);
  auto& from = static_cast<const DebugMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebugMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tensorflow_version().empty()) {
    _this->_internal_set_tensorflow_version(from._internal_tensorflow_version());
  }
  if (!from._internal_file_version().empty()) {
    _this->_internal_set_file_version(from._internal_file_version());
  }
  if (!from._internal_tfdbg_run_id().empty()) {
    _this->_internal_set_tfdbg_run_id(from._internal_tfdbg_run_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebugMetadata::CopyFrom(const DebugMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebugMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebugMetadata::InternalSwap(DebugMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tensorflow_version_, &other->_impl_.tensorflow_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_version_, &other->_impl_.file_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tfdbg_run_id_, &other->_impl_.tfdbg_run_id_, arena);
}

::google::protobuf::Metadata DebugMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SourceFile::_Internal {
 public:
};

SourceFile::SourceFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SourceFile)
}
inline PROTOBUF_NDEBUG_INLINE SourceFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::SourceFile& from_msg)
      : lines_{visibility, arena, from.lines_},
        file_path_(arena, from.file_path_),
        host_name_(arena, from.host_name_),
        _cached_size_{0} {}

SourceFile::SourceFile(
    ::google::protobuf::Arena* arena,
    const SourceFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SourceFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.SourceFile)
}
inline PROTOBUF_NDEBUG_INLINE SourceFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : lines_{visibility, arena},
        file_path_(arena),
        host_name_(arena),
        _cached_size_{0} {}

inline void SourceFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SourceFile::~SourceFile() {
  // @@protoc_insertion_point(destructor:tensorflow.SourceFile)
  SharedDtor(*this);
}
inline void SourceFile::SharedDtor(MessageLite& self) {
  SourceFile& this_ = static_cast<SourceFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.file_path_.Destroy();
  this_._impl_.host_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SourceFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SourceFile(arena);
}
constexpr auto SourceFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.lines_) +
          decltype(SourceFile::_impl_.lines_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SourceFile), alignof(SourceFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SourceFile::PlacementNew_,
                                 sizeof(SourceFile),
                                 alignof(SourceFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SourceFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SourceFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SourceFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SourceFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SourceFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SourceFile>(), &SourceFile::ByteSizeLong,
            &SourceFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SourceFile, _impl_._cached_size_),
        false,
    },
    &SourceFile::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SourceFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 53, 2> SourceFile::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::SourceFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string file_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.file_path_)}},
    // string host_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.host_name_)}},
    // repeated string lines = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.lines_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string file_path = 1;
    {PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.file_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string host_name = 2;
    {PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.host_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string lines = 3;
    {PROTOBUF_FIELD_OFFSET(SourceFile, _impl_.lines_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\25\11\11\5\0\0\0\0"
    "tensorflow.SourceFile"
    "file_path"
    "host_name"
    "lines"
  }},
};

PROTOBUF_NOINLINE void SourceFile::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SourceFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lines_.Clear();
  _impl_.file_path_.ClearToEmpty();
  _impl_.host_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SourceFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SourceFile& this_ = static_cast<const SourceFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SourceFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SourceFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SourceFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string file_path = 1;
          if (!this_._internal_file_path().empty()) {
            const std::string& _s = this_._internal_file_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.SourceFile.file_path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string host_name = 2;
          if (!this_._internal_host_name().empty()) {
            const std::string& _s = this_._internal_host_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.SourceFile.host_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string lines = 3;
          for (int i = 0, n = this_._internal_lines_size(); i < n; ++i) {
            const auto& s = this_._internal_lines().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.SourceFile.lines");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SourceFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SourceFile::ByteSizeLong(const MessageLite& base) {
          const SourceFile& this_ = static_cast<const SourceFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SourceFile::ByteSizeLong() const {
          const SourceFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.SourceFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string lines = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_lines().size());
              for (int i = 0, n = this_._internal_lines().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_lines().Get(i));
              }
            }
          }
           {
            // string file_path = 1;
            if (!this_._internal_file_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_path());
            }
            // string host_name = 2;
            if (!this_._internal_host_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_host_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SourceFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SourceFile*>(&to_msg);
  auto& from = static_cast<const SourceFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SourceFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(from._internal_lines());
  if (!from._internal_file_path().empty()) {
    _this->_internal_set_file_path(from._internal_file_path());
  }
  if (!from._internal_host_name().empty()) {
    _this->_internal_set_host_name(from._internal_host_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SourceFile::CopyFrom(const SourceFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SourceFile::InternalSwap(SourceFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lines_.InternalSwap(&other->_impl_.lines_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_path_, &other->_impl_.file_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_name_, &other->_impl_.host_name_, arena);
}

::google::protobuf::Metadata SourceFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StackFrameWithId::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StackFrameWithId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_._has_bits_);
};

void StackFrameWithId::clear_file_line_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_line_col_ != nullptr) _impl_.file_line_col_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StackFrameWithId::StackFrameWithId(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.StackFrameWithId)
}
inline PROTOBUF_NDEBUG_INLINE StackFrameWithId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::StackFrameWithId& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

StackFrameWithId::StackFrameWithId(
    ::google::protobuf::Arena* arena,
    const StackFrameWithId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StackFrameWithId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.file_line_col_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::GraphDebugInfo_FileLineCol>(
                              arena, *from._impl_.file_line_col_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.StackFrameWithId)
}
inline PROTOBUF_NDEBUG_INLINE StackFrameWithId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void StackFrameWithId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.file_line_col_ = {};
}
StackFrameWithId::~StackFrameWithId() {
  // @@protoc_insertion_point(destructor:tensorflow.StackFrameWithId)
  SharedDtor(*this);
}
inline void StackFrameWithId::SharedDtor(MessageLite& self) {
  StackFrameWithId& this_ = static_cast<StackFrameWithId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  delete this_._impl_.file_line_col_;
  this_._impl_.~Impl_();
}

inline void* StackFrameWithId::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StackFrameWithId(arena);
}
constexpr auto StackFrameWithId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StackFrameWithId),
                                            alignof(StackFrameWithId));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StackFrameWithId::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StackFrameWithId_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StackFrameWithId::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StackFrameWithId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StackFrameWithId::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StackFrameWithId>(), &StackFrameWithId::ByteSizeLong,
            &StackFrameWithId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_._cached_size_),
        false,
    },
    &StackFrameWithId::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StackFrameWithId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2> StackFrameWithId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::StackFrameWithId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_.file_line_col_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
    {PROTOBUF_FIELD_OFFSET(StackFrameWithId, _impl_.file_line_col_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::GraphDebugInfo_FileLineCol>()},
  }}, {{
    "\33\2\0\0\0\0\0\0"
    "tensorflow.StackFrameWithId"
    "id"
  }},
};

PROTOBUF_NOINLINE void StackFrameWithId::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.StackFrameWithId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.file_line_col_ != nullptr);
    _impl_.file_line_col_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StackFrameWithId::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StackFrameWithId& this_ = static_cast<const StackFrameWithId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StackFrameWithId::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StackFrameWithId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.StackFrameWithId)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.StackFrameWithId.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.file_line_col_, this_._impl_.file_line_col_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.StackFrameWithId)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StackFrameWithId::ByteSizeLong(const MessageLite& base) {
          const StackFrameWithId& this_ = static_cast<const StackFrameWithId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StackFrameWithId::ByteSizeLong() const {
          const StackFrameWithId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.StackFrameWithId)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
           {
            // .tensorflow.GraphDebugInfo.FileLineCol file_line_col = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.file_line_col_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StackFrameWithId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StackFrameWithId*>(&to_msg);
  auto& from = static_cast<const StackFrameWithId&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.StackFrameWithId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.file_line_col_ != nullptr);
    if (_this->_impl_.file_line_col_ == nullptr) {
      _this->_impl_.file_line_col_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::GraphDebugInfo_FileLineCol>(arena, *from._impl_.file_line_col_);
    } else {
      _this->_impl_.file_line_col_->MergeFrom(*from._impl_.file_line_col_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StackFrameWithId::CopyFrom(const StackFrameWithId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.StackFrameWithId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StackFrameWithId::InternalSwap(StackFrameWithId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.file_line_col_, other->_impl_.file_line_col_);
}

::google::protobuf::Metadata StackFrameWithId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CodeLocation::_Internal {
 public:
};

CodeLocation::CodeLocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CodeLocation)
}
inline PROTOBUF_NDEBUG_INLINE CodeLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::CodeLocation& from_msg)
      : stack_frame_ids_{visibility, arena, from.stack_frame_ids_},
        host_name_(arena, from.host_name_),
        _cached_size_{0} {}

CodeLocation::CodeLocation(
    ::google::protobuf::Arena* arena,
    const CodeLocation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CodeLocation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.CodeLocation)
}
inline PROTOBUF_NDEBUG_INLINE CodeLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stack_frame_ids_{visibility, arena},
        host_name_(arena),
        _cached_size_{0} {}

inline void CodeLocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CodeLocation::~CodeLocation() {
  // @@protoc_insertion_point(destructor:tensorflow.CodeLocation)
  SharedDtor(*this);
}
inline void CodeLocation::SharedDtor(MessageLite& self) {
  CodeLocation& this_ = static_cast<CodeLocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.host_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CodeLocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CodeLocation(arena);
}
constexpr auto CodeLocation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CodeLocation, _impl_.stack_frame_ids_) +
          decltype(CodeLocation::_impl_.stack_frame_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CodeLocation), alignof(CodeLocation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CodeLocation::PlacementNew_,
                                 sizeof(CodeLocation),
                                 alignof(CodeLocation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CodeLocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CodeLocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CodeLocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CodeLocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CodeLocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CodeLocation>(), &CodeLocation::ByteSizeLong,
            &CodeLocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CodeLocation, _impl_._cached_size_),
        false,
    },
    &CodeLocation::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CodeLocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> CodeLocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::CodeLocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string stack_frame_ids = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CodeLocation, _impl_.stack_frame_ids_)}},
    // string host_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CodeLocation, _impl_.host_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string host_name = 1;
    {PROTOBUF_FIELD_OFFSET(CodeLocation, _impl_.host_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string stack_frame_ids = 2;
    {PROTOBUF_FIELD_OFFSET(CodeLocation, _impl_.stack_frame_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\27\11\17\0\0\0\0\0"
    "tensorflow.CodeLocation"
    "host_name"
    "stack_frame_ids"
  }},
};

PROTOBUF_NOINLINE void CodeLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CodeLocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stack_frame_ids_.Clear();
  _impl_.host_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CodeLocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CodeLocation& this_ = static_cast<const CodeLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CodeLocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CodeLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CodeLocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string host_name = 1;
          if (!this_._internal_host_name().empty()) {
            const std::string& _s = this_._internal_host_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CodeLocation.host_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string stack_frame_ids = 2;
          for (int i = 0, n = this_._internal_stack_frame_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_stack_frame_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CodeLocation.stack_frame_ids");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CodeLocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CodeLocation::ByteSizeLong(const MessageLite& base) {
          const CodeLocation& this_ = static_cast<const CodeLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CodeLocation::ByteSizeLong() const {
          const CodeLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.CodeLocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string stack_frame_ids = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_stack_frame_ids().size());
              for (int i = 0, n = this_._internal_stack_frame_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_stack_frame_ids().Get(i));
              }
            }
          }
           {
            // string host_name = 1;
            if (!this_._internal_host_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_host_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CodeLocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CodeLocation*>(&to_msg);
  auto& from = static_cast<const CodeLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CodeLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stack_frame_ids()->MergeFrom(from._internal_stack_frame_ids());
  if (!from._internal_host_name().empty()) {
    _this->_internal_set_host_name(from._internal_host_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CodeLocation::CopyFrom(const CodeLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CodeLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CodeLocation::InternalSwap(CodeLocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stack_frame_ids_.InternalSwap(&other->_impl_.stack_frame_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_name_, &other->_impl_.host_name_, arena);
}

::google::protobuf::Metadata CodeLocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphOpCreation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GraphOpCreation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_._has_bits_);
};

GraphOpCreation::GraphOpCreation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphOpCreation)
}
inline PROTOBUF_NDEBUG_INLINE GraphOpCreation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphOpCreation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_names_{visibility, arena, from.input_names_},
        output_tensor_ids_{visibility, arena, from.output_tensor_ids_},
        _output_tensor_ids_cached_byte_size_{0},
        op_type_(arena, from.op_type_),
        op_name_(arena, from.op_name_),
        graph_name_(arena, from.graph_name_),
        graph_id_(arena, from.graph_id_),
        device_name_(arena, from.device_name_) {}

GraphOpCreation::GraphOpCreation(
    ::google::protobuf::Arena* arena,
    const GraphOpCreation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphOpCreation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::CodeLocation>(
                              arena, *from._impl_.code_location_)
                        : nullptr;
  _impl_.num_outputs_ = from._impl_.num_outputs_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphOpCreation)
}
inline PROTOBUF_NDEBUG_INLINE GraphOpCreation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_names_{visibility, arena},
        output_tensor_ids_{visibility, arena},
        _output_tensor_ids_cached_byte_size_{0},
        op_type_(arena),
        op_name_(arena),
        graph_name_(arena),
        graph_id_(arena),
        device_name_(arena) {}

inline void GraphOpCreation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_location_),
           0,
           offsetof(Impl_, num_outputs_) -
               offsetof(Impl_, code_location_) +
               sizeof(Impl_::num_outputs_));
}
GraphOpCreation::~GraphOpCreation() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphOpCreation)
  SharedDtor(*this);
}
inline void GraphOpCreation::SharedDtor(MessageLite& self) {
  GraphOpCreation& this_ = static_cast<GraphOpCreation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.op_type_.Destroy();
  this_._impl_.op_name_.Destroy();
  this_._impl_.graph_name_.Destroy();
  this_._impl_.graph_id_.Destroy();
  this_._impl_.device_name_.Destroy();
  delete this_._impl_.code_location_;
  this_._impl_.~Impl_();
}

inline void* GraphOpCreation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphOpCreation(arena);
}
constexpr auto GraphOpCreation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.input_names_) +
          decltype(GraphOpCreation::_impl_.input_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.output_tensor_ids_) +
          decltype(GraphOpCreation::_impl_.output_tensor_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GraphOpCreation), alignof(GraphOpCreation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GraphOpCreation::PlacementNew_,
                                 sizeof(GraphOpCreation),
                                 alignof(GraphOpCreation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphOpCreation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphOpCreation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphOpCreation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphOpCreation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphOpCreation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphOpCreation>(), &GraphOpCreation::ByteSizeLong,
            &GraphOpCreation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_._cached_size_),
        false,
    },
    &GraphOpCreation::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphOpCreation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 97, 2> GraphOpCreation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphOpCreation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string op_type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.op_type_)}},
    // string op_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.op_name_)}},
    // string graph_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.graph_name_)}},
    // string graph_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.graph_id_)}},
    // string device_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.device_name_)}},
    // repeated string input_names = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.input_names_)}},
    // int32 num_outputs = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphOpCreation, _impl_.num_outputs_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.num_outputs_)}},
    // .tensorflow.CodeLocation code_location = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.code_location_)}},
    // repeated int32 output_tensor_ids = 9;
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.output_tensor_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string op_type = 1;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.op_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op_name = 2;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.op_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string graph_name = 3;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.graph_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string graph_id = 4;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.graph_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_name = 5;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.device_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string input_names = 6;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.input_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 num_outputs = 7;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.num_outputs_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tensorflow.CodeLocation code_location = 8;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.code_location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 output_tensor_ids = 9;
    {PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.output_tensor_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::CodeLocation>()},
  }}, {{
    "\32\7\7\12\10\13\13\0\0\0\0\0\0\0\0\0"
    "tensorflow.GraphOpCreation"
    "op_type"
    "op_name"
    "graph_name"
    "graph_id"
    "device_name"
    "input_names"
  }},
};

PROTOBUF_NOINLINE void GraphOpCreation::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphOpCreation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_names_.Clear();
  _impl_.output_tensor_ids_.Clear();
  _impl_.op_type_.ClearToEmpty();
  _impl_.op_name_.ClearToEmpty();
  _impl_.graph_name_.ClearToEmpty();
  _impl_.graph_id_.ClearToEmpty();
  _impl_.device_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_location_ != nullptr);
    _impl_.code_location_->Clear();
  }
  _impl_.num_outputs_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphOpCreation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphOpCreation& this_ = static_cast<const GraphOpCreation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphOpCreation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphOpCreation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphOpCreation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string op_type = 1;
          if (!this_._internal_op_type().empty()) {
            const std::string& _s = this_._internal_op_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphOpCreation.op_type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string op_name = 2;
          if (!this_._internal_op_name().empty()) {
            const std::string& _s = this_._internal_op_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphOpCreation.op_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string graph_name = 3;
          if (!this_._internal_graph_name().empty()) {
            const std::string& _s = this_._internal_graph_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphOpCreation.graph_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string graph_id = 4;
          if (!this_._internal_graph_id().empty()) {
            const std::string& _s = this_._internal_graph_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphOpCreation.graph_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string device_name = 5;
          if (!this_._internal_device_name().empty()) {
            const std::string& _s = this_._internal_device_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphOpCreation.device_name");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string input_names = 6;
          for (int i = 0, n = this_._internal_input_names_size(); i < n; ++i) {
            const auto& s = this_._internal_input_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphOpCreation.input_names");
            target = stream->WriteString(6, s, target);
          }

          // int32 num_outputs = 7;
          if (this_._internal_num_outputs() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_num_outputs(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.CodeLocation code_location = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.code_location_, this_._impl_.code_location_->GetCachedSize(), target,
                stream);
          }

          // repeated int32 output_tensor_ids = 9;
          {
            int byte_size = this_._impl_._output_tensor_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  9, this_._internal_output_tensor_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphOpCreation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphOpCreation::ByteSizeLong(const MessageLite& base) {
          const GraphOpCreation& this_ = static_cast<const GraphOpCreation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphOpCreation::ByteSizeLong() const {
          const GraphOpCreation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphOpCreation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string input_names = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_names().size());
              for (int i = 0, n = this_._internal_input_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_input_names().Get(i));
              }
            }
            // repeated int32 output_tensor_ids = 9;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_output_tensor_ids(), 1,
                      this_._impl_._output_tensor_ids_cached_byte_size_);
            }
          }
           {
            // string op_type = 1;
            if (!this_._internal_op_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_op_type());
            }
            // string op_name = 2;
            if (!this_._internal_op_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_op_name());
            }
            // string graph_name = 3;
            if (!this_._internal_graph_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_name());
            }
            // string graph_id = 4;
            if (!this_._internal_graph_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_id());
            }
            // string device_name = 5;
            if (!this_._internal_device_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_name());
            }
          }
           {
            // .tensorflow.CodeLocation code_location = 8;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.code_location_);
            }
          }
           {
            // int32 num_outputs = 7;
            if (this_._internal_num_outputs() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_outputs());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphOpCreation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphOpCreation*>(&to_msg);
  auto& from = static_cast<const GraphOpCreation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphOpCreation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_names()->MergeFrom(from._internal_input_names());
  _this->_internal_mutable_output_tensor_ids()->MergeFrom(from._internal_output_tensor_ids());
  if (!from._internal_op_type().empty()) {
    _this->_internal_set_op_type(from._internal_op_type());
  }
  if (!from._internal_op_name().empty()) {
    _this->_internal_set_op_name(from._internal_op_name());
  }
  if (!from._internal_graph_name().empty()) {
    _this->_internal_set_graph_name(from._internal_graph_name());
  }
  if (!from._internal_graph_id().empty()) {
    _this->_internal_set_graph_id(from._internal_graph_id());
  }
  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_location_ != nullptr);
    if (_this->_impl_.code_location_ == nullptr) {
      _this->_impl_.code_location_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::CodeLocation>(arena, *from._impl_.code_location_);
    } else {
      _this->_impl_.code_location_->MergeFrom(*from._impl_.code_location_);
    }
  }
  if (from._internal_num_outputs() != 0) {
    _this->_impl_.num_outputs_ = from._impl_.num_outputs_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphOpCreation::CopyFrom(const GraphOpCreation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphOpCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphOpCreation::InternalSwap(GraphOpCreation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_names_.InternalSwap(&other->_impl_.input_names_);
  _impl_.output_tensor_ids_.InternalSwap(&other->_impl_.output_tensor_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_type_, &other->_impl_.op_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_name_, &other->_impl_.op_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_name_, &other->_impl_.graph_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_id_, &other->_impl_.graph_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.num_outputs_)
      + sizeof(GraphOpCreation::_impl_.num_outputs_)
      - PROTOBUF_FIELD_OFFSET(GraphOpCreation, _impl_.code_location_)>(
          reinterpret_cast<char*>(&_impl_.code_location_),
          reinterpret_cast<char*>(&other->_impl_.code_location_));
}

::google::protobuf::Metadata GraphOpCreation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DebuggedGraph::_Internal {
 public:
};

DebuggedGraph::DebuggedGraph(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebuggedGraph)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedGraph::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebuggedGraph& from_msg)
      : instrumented_ops_{visibility, arena, from.instrumented_ops_},
        graph_id_(arena, from.graph_id_),
        graph_name_(arena, from.graph_name_),
        original_graph_def_(arena, from.original_graph_def_),
        instrumented_graph_def_(arena, from.instrumented_graph_def_),
        outer_context_id_(arena, from.outer_context_id_),
        _cached_size_{0} {}

DebuggedGraph::DebuggedGraph(
    ::google::protobuf::Arena* arena,
    const DebuggedGraph& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebuggedGraph* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebuggedGraph)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedGraph::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instrumented_ops_{visibility, arena},
        graph_id_(arena),
        graph_name_(arena),
        original_graph_def_(arena),
        instrumented_graph_def_(arena),
        outer_context_id_(arena),
        _cached_size_{0} {}

inline void DebuggedGraph::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DebuggedGraph::~DebuggedGraph() {
  // @@protoc_insertion_point(destructor:tensorflow.DebuggedGraph)
  SharedDtor(*this);
}
inline void DebuggedGraph::SharedDtor(MessageLite& self) {
  DebuggedGraph& this_ = static_cast<DebuggedGraph&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.graph_id_.Destroy();
  this_._impl_.graph_name_.Destroy();
  this_._impl_.original_graph_def_.Destroy();
  this_._impl_.instrumented_graph_def_.Destroy();
  this_._impl_.outer_context_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DebuggedGraph::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebuggedGraph(arena);
}
constexpr auto DebuggedGraph::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.instrumented_ops_) +
          decltype(DebuggedGraph::_impl_.instrumented_ops_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DebuggedGraph), alignof(DebuggedGraph), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DebuggedGraph::PlacementNew_,
                                 sizeof(DebuggedGraph),
                                 alignof(DebuggedGraph));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebuggedGraph::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebuggedGraph_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebuggedGraph::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebuggedGraph>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebuggedGraph::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebuggedGraph>(), &DebuggedGraph::ByteSizeLong,
            &DebuggedGraph::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_._cached_size_),
        false,
    },
    &DebuggedGraph::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebuggedGraph::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 83, 2> DebuggedGraph::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebuggedGraph>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string graph_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.graph_id_)}},
    // string graph_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.graph_name_)}},
    // repeated string instrumented_ops = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.instrumented_ops_)}},
    // bytes original_graph_def = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.original_graph_def_)}},
    // bytes instrumented_graph_def = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.instrumented_graph_def_)}},
    // string outer_context_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.outer_context_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string graph_id = 1;
    {PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.graph_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string graph_name = 2;
    {PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.graph_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string instrumented_ops = 3;
    {PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.instrumented_ops_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bytes original_graph_def = 4;
    {PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.original_graph_def_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes instrumented_graph_def = 5;
    {PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.instrumented_graph_def_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string outer_context_id = 6;
    {PROTOBUF_FIELD_OFFSET(DebuggedGraph, _impl_.outer_context_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\10\12\20\0\0\20\0"
    "tensorflow.DebuggedGraph"
    "graph_id"
    "graph_name"
    "instrumented_ops"
    "outer_context_id"
  }},
};

PROTOBUF_NOINLINE void DebuggedGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebuggedGraph)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instrumented_ops_.Clear();
  _impl_.graph_id_.ClearToEmpty();
  _impl_.graph_name_.ClearToEmpty();
  _impl_.original_graph_def_.ClearToEmpty();
  _impl_.instrumented_graph_def_.ClearToEmpty();
  _impl_.outer_context_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebuggedGraph::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebuggedGraph& this_ = static_cast<const DebuggedGraph&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebuggedGraph::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebuggedGraph& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebuggedGraph)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string graph_id = 1;
          if (!this_._internal_graph_id().empty()) {
            const std::string& _s = this_._internal_graph_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedGraph.graph_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string graph_name = 2;
          if (!this_._internal_graph_name().empty()) {
            const std::string& _s = this_._internal_graph_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedGraph.graph_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string instrumented_ops = 3;
          for (int i = 0, n = this_._internal_instrumented_ops_size(); i < n; ++i) {
            const auto& s = this_._internal_instrumented_ops().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedGraph.instrumented_ops");
            target = stream->WriteString(3, s, target);
          }

          // bytes original_graph_def = 4;
          if (!this_._internal_original_graph_def().empty()) {
            const std::string& _s = this_._internal_original_graph_def();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bytes instrumented_graph_def = 5;
          if (!this_._internal_instrumented_graph_def().empty()) {
            const std::string& _s = this_._internal_instrumented_graph_def();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // string outer_context_id = 6;
          if (!this_._internal_outer_context_id().empty()) {
            const std::string& _s = this_._internal_outer_context_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedGraph.outer_context_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebuggedGraph)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebuggedGraph::ByteSizeLong(const MessageLite& base) {
          const DebuggedGraph& this_ = static_cast<const DebuggedGraph&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebuggedGraph::ByteSizeLong() const {
          const DebuggedGraph& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebuggedGraph)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string instrumented_ops = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_instrumented_ops().size());
              for (int i = 0, n = this_._internal_instrumented_ops().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_instrumented_ops().Get(i));
              }
            }
          }
           {
            // string graph_id = 1;
            if (!this_._internal_graph_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_id());
            }
            // string graph_name = 2;
            if (!this_._internal_graph_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_name());
            }
            // bytes original_graph_def = 4;
            if (!this_._internal_original_graph_def().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_original_graph_def());
            }
            // bytes instrumented_graph_def = 5;
            if (!this_._internal_instrumented_graph_def().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_instrumented_graph_def());
            }
            // string outer_context_id = 6;
            if (!this_._internal_outer_context_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_outer_context_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebuggedGraph::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebuggedGraph*>(&to_msg);
  auto& from = static_cast<const DebuggedGraph&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebuggedGraph)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instrumented_ops()->MergeFrom(from._internal_instrumented_ops());
  if (!from._internal_graph_id().empty()) {
    _this->_internal_set_graph_id(from._internal_graph_id());
  }
  if (!from._internal_graph_name().empty()) {
    _this->_internal_set_graph_name(from._internal_graph_name());
  }
  if (!from._internal_original_graph_def().empty()) {
    _this->_internal_set_original_graph_def(from._internal_original_graph_def());
  }
  if (!from._internal_instrumented_graph_def().empty()) {
    _this->_internal_set_instrumented_graph_def(from._internal_instrumented_graph_def());
  }
  if (!from._internal_outer_context_id().empty()) {
    _this->_internal_set_outer_context_id(from._internal_outer_context_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebuggedGraph::CopyFrom(const DebuggedGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebuggedGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebuggedGraph::InternalSwap(DebuggedGraph* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instrumented_ops_.InternalSwap(&other->_impl_.instrumented_ops_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_id_, &other->_impl_.graph_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_name_, &other->_impl_.graph_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.original_graph_def_, &other->_impl_.original_graph_def_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrumented_graph_def_, &other->_impl_.instrumented_graph_def_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outer_context_id_, &other->_impl_.outer_context_id_, arena);
}

::google::protobuf::Metadata DebuggedGraph::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DebuggedDevice::_Internal {
 public:
};

DebuggedDevice::DebuggedDevice(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.DebuggedDevice)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedDevice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::DebuggedDevice& from_msg)
      : device_name_(arena, from.device_name_),
        _cached_size_{0} {}

DebuggedDevice::DebuggedDevice(
    ::google::protobuf::Arena* arena,
    const DebuggedDevice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DebuggedDevice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.device_id_ = from._impl_.device_id_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.DebuggedDevice)
}
inline PROTOBUF_NDEBUG_INLINE DebuggedDevice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        _cached_size_{0} {}

inline void DebuggedDevice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_id_ = {};
}
DebuggedDevice::~DebuggedDevice() {
  // @@protoc_insertion_point(destructor:tensorflow.DebuggedDevice)
  SharedDtor(*this);
}
inline void DebuggedDevice::SharedDtor(MessageLite& self) {
  DebuggedDevice& this_ = static_cast<DebuggedDevice&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DebuggedDevice::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DebuggedDevice(arena);
}
constexpr auto DebuggedDevice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DebuggedDevice),
                                            alignof(DebuggedDevice));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DebuggedDevice::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DebuggedDevice_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DebuggedDevice::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DebuggedDevice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DebuggedDevice::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DebuggedDevice>(), &DebuggedDevice::ByteSizeLong,
            &DebuggedDevice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DebuggedDevice, _impl_._cached_size_),
        false,
    },
    &DebuggedDevice::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DebuggedDevice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> DebuggedDevice::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::DebuggedDevice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 device_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DebuggedDevice, _impl_.device_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedDevice, _impl_.device_id_)}},
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DebuggedDevice, _impl_.device_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DebuggedDevice, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 device_id = 2;
    {PROTOBUF_FIELD_OFFSET(DebuggedDevice, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\31\13\0\0\0\0\0\0"
    "tensorflow.DebuggedDevice"
    "device_name"
  }},
};

PROTOBUF_NOINLINE void DebuggedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.DebuggedDevice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _impl_.device_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DebuggedDevice::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DebuggedDevice& this_ = static_cast<const DebuggedDevice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DebuggedDevice::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DebuggedDevice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.DebuggedDevice)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_name = 1;
          if (!this_._internal_device_name().empty()) {
            const std::string& _s = this_._internal_device_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.DebuggedDevice.device_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 device_id = 2;
          if (this_._internal_device_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_device_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.DebuggedDevice)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DebuggedDevice::ByteSizeLong(const MessageLite& base) {
          const DebuggedDevice& this_ = static_cast<const DebuggedDevice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DebuggedDevice::ByteSizeLong() const {
          const DebuggedDevice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.DebuggedDevice)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string device_name = 1;
            if (!this_._internal_device_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_name());
            }
            // int32 device_id = 2;
            if (this_._internal_device_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_device_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DebuggedDevice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DebuggedDevice*>(&to_msg);
  auto& from = static_cast<const DebuggedDevice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.DebuggedDevice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  if (from._internal_device_id() != 0) {
    _this->_impl_.device_id_ = from._impl_.device_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DebuggedDevice::CopyFrom(const DebuggedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.DebuggedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DebuggedDevice::InternalSwap(DebuggedDevice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
        swap(_impl_.device_id_, other->_impl_.device_id_);
}

::google::protobuf::Metadata DebuggedDevice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Execution::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Execution>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Execution, _impl_._has_bits_);
};

void Execution::clear_tensor_protos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tensor_protos_.Clear();
}
Execution::Execution(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.Execution)
}
inline PROTOBUF_NDEBUG_INLINE Execution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::Execution& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_tensor_ids_{visibility, arena, from.input_tensor_ids_},
        _input_tensor_ids_cached_byte_size_{0},
        output_tensor_ids_{visibility, arena, from.output_tensor_ids_},
        _output_tensor_ids_cached_byte_size_{0},
        tensor_protos_{visibility, arena, from.tensor_protos_},
        output_tensor_device_ids_{visibility, arena, from.output_tensor_device_ids_},
        _output_tensor_device_ids_cached_byte_size_{0},
        op_type_(arena, from.op_type_),
        graph_id_(arena, from.graph_id_) {}

Execution::Execution(
    ::google::protobuf::Arena* arena,
    const Execution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Execution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::CodeLocation>(
                              arena, *from._impl_.code_location_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_outputs_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_outputs_),
           offsetof(Impl_, tensor_debug_mode_) -
               offsetof(Impl_, num_outputs_) +
               sizeof(Impl_::tensor_debug_mode_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.Execution)
}
inline PROTOBUF_NDEBUG_INLINE Execution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        input_tensor_ids_{visibility, arena},
        _input_tensor_ids_cached_byte_size_{0},
        output_tensor_ids_{visibility, arena},
        _output_tensor_ids_cached_byte_size_{0},
        tensor_protos_{visibility, arena},
        output_tensor_device_ids_{visibility, arena},
        _output_tensor_device_ids_cached_byte_size_{0},
        op_type_(arena),
        graph_id_(arena) {}

inline void Execution::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_location_),
           0,
           offsetof(Impl_, tensor_debug_mode_) -
               offsetof(Impl_, code_location_) +
               sizeof(Impl_::tensor_debug_mode_));
}
Execution::~Execution() {
  // @@protoc_insertion_point(destructor:tensorflow.Execution)
  SharedDtor(*this);
}
inline void Execution::SharedDtor(MessageLite& self) {
  Execution& this_ = static_cast<Execution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.op_type_.Destroy();
  this_._impl_.graph_id_.Destroy();
  delete this_._impl_.code_location_;
  this_._impl_.~Impl_();
}

inline void* Execution::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Execution(arena);
}
constexpr auto Execution::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Execution, _impl_.input_tensor_ids_) +
          decltype(Execution::_impl_.input_tensor_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Execution, _impl_.output_tensor_ids_) +
          decltype(Execution::_impl_.output_tensor_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Execution, _impl_.tensor_protos_) +
          decltype(Execution::_impl_.tensor_protos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Execution, _impl_.output_tensor_device_ids_) +
          decltype(Execution::_impl_.output_tensor_device_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Execution), alignof(Execution), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Execution::PlacementNew_,
                                 sizeof(Execution),
                                 alignof(Execution));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Execution::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Execution_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Execution::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Execution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Execution::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Execution>(), &Execution::ByteSizeLong,
            &Execution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Execution, _impl_._cached_size_),
        false,
    },
    &Execution::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Execution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 52, 2> Execution::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Execution, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::Execution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string op_type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.op_type_)}},
    // int32 num_outputs = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Execution, _impl_.num_outputs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.num_outputs_)}},
    // string graph_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.graph_id_)}},
    // repeated int64 input_tensor_ids = 4;
    {::_pbi::TcParser::FastV64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.input_tensor_ids_)}},
    // repeated int64 output_tensor_ids = 5;
    {::_pbi::TcParser::FastV64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.output_tensor_ids_)}},
    // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Execution, _impl_.tensor_debug_mode_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.tensor_debug_mode_)}},
    // repeated .tensorflow.TensorProto tensor_protos = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.tensor_protos_)}},
    // .tensorflow.CodeLocation code_location = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 1, PROTOBUF_FIELD_OFFSET(Execution, _impl_.code_location_)}},
    // repeated int32 output_tensor_device_ids = 9;
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Execution, _impl_.output_tensor_device_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string op_type = 1;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.op_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 num_outputs = 2;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.num_outputs_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string graph_id = 3;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.graph_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int64 input_tensor_ids = 4;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.input_tensor_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated int64 output_tensor_ids = 5;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.output_tensor_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.tensor_debug_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tensorflow.TensorProto tensor_protos = 7;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.tensor_protos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.CodeLocation code_location = 8;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.code_location_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 output_tensor_device_ids = 9;
    {PROTOBUF_FIELD_OFFSET(Execution, _impl_.output_tensor_device_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::CodeLocation>()},
  }}, {{
    "\24\7\0\10\0\0\0\0\0\0\0\0\0\0\0\0"
    "tensorflow.Execution"
    "op_type"
    "graph_id"
  }},
};

PROTOBUF_NOINLINE void Execution::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.Execution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_tensor_ids_.Clear();
  _impl_.output_tensor_ids_.Clear();
  _impl_.tensor_protos_.Clear();
  _impl_.output_tensor_device_ids_.Clear();
  _impl_.op_type_.ClearToEmpty();
  _impl_.graph_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_location_ != nullptr);
    _impl_.code_location_->Clear();
  }
  ::memset(&_impl_.num_outputs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tensor_debug_mode_) -
      reinterpret_cast<char*>(&_impl_.num_outputs_)) + sizeof(_impl_.tensor_debug_mode_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Execution::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Execution& this_ = static_cast<const Execution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Execution::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Execution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.Execution)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string op_type = 1;
          if (!this_._internal_op_type().empty()) {
            const std::string& _s = this_._internal_op_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.Execution.op_type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 num_outputs = 2;
          if (this_._internal_num_outputs() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_num_outputs(), target);
          }

          // string graph_id = 3;
          if (!this_._internal_graph_id().empty()) {
            const std::string& _s = this_._internal_graph_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.Execution.graph_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated int64 input_tensor_ids = 4;
          {
            int byte_size = this_._impl_._input_tensor_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  4, this_._internal_input_tensor_ids(), byte_size, target);
            }
          }

          // repeated int64 output_tensor_ids = 5;
          {
            int byte_size = this_._impl_._output_tensor_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  5, this_._internal_output_tensor_ids(), byte_size, target);
            }
          }

          // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
          if (this_._internal_tensor_debug_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_tensor_debug_mode(), target);
          }

          // repeated .tensorflow.TensorProto tensor_protos = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tensor_protos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tensor_protos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.CodeLocation code_location = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.code_location_, this_._impl_.code_location_->GetCachedSize(), target,
                stream);
          }

          // repeated int32 output_tensor_device_ids = 9;
          {
            int byte_size = this_._impl_._output_tensor_device_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  9, this_._internal_output_tensor_device_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.Execution)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Execution::ByteSizeLong(const MessageLite& base) {
          const Execution& this_ = static_cast<const Execution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Execution::ByteSizeLong() const {
          const Execution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.Execution)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 input_tensor_ids = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_input_tensor_ids(), 1,
                      this_._impl_._input_tensor_ids_cached_byte_size_);
            }
            // repeated int64 output_tensor_ids = 5;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_output_tensor_ids(), 1,
                      this_._impl_._output_tensor_ids_cached_byte_size_);
            }
            // repeated .tensorflow.TensorProto tensor_protos = 7;
            {
              total_size += 1UL * this_._internal_tensor_protos_size();
              for (const auto& msg : this_._internal_tensor_protos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated int32 output_tensor_device_ids = 9;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_output_tensor_device_ids(), 1,
                      this_._impl_._output_tensor_device_ids_cached_byte_size_);
            }
          }
           {
            // string op_type = 1;
            if (!this_._internal_op_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_op_type());
            }
            // string graph_id = 3;
            if (!this_._internal_graph_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_id());
            }
          }
           {
            // .tensorflow.CodeLocation code_location = 8;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.code_location_);
            }
          }
           {
            // int32 num_outputs = 2;
            if (this_._internal_num_outputs() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_outputs());
            }
            // .tensorflow.TensorDebugMode tensor_debug_mode = 6;
            if (this_._internal_tensor_debug_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_tensor_debug_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Execution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Execution*>(&to_msg);
  auto& from = static_cast<const Execution&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.Execution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_tensor_ids()->MergeFrom(from._internal_input_tensor_ids());
  _this->_internal_mutable_output_tensor_ids()->MergeFrom(from._internal_output_tensor_ids());
  _this->_internal_mutable_tensor_protos()->MergeFrom(
      from._internal_tensor_protos());
  _this->_internal_mutable_output_tensor_device_ids()->MergeFrom(from._internal_output_tensor_device_ids());
  if (!from._internal_op_type().empty()) {
    _this->_internal_set_op_type(from._internal_op_type());
  }
  if (!from._internal_graph_id().empty()) {
    _this->_internal_set_graph_id(from._internal_graph_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_location_ != nullptr);
    if (_this->_impl_.code_location_ == nullptr) {
      _this->_impl_.code_location_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::CodeLocation>(arena, *from._impl_.code_location_);
    } else {
      _this->_impl_.code_location_->MergeFrom(*from._impl_.code_location_);
    }
  }
  if (from._internal_num_outputs() != 0) {
    _this->_impl_.num_outputs_ = from._impl_.num_outputs_;
  }
  if (from._internal_tensor_debug_mode() != 0) {
    _this->_impl_.tensor_debug_mode_ = from._impl_.tensor_debug_mode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Execution::CopyFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Execution::InternalSwap(Execution* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_tensor_ids_.InternalSwap(&other->_impl_.input_tensor_ids_);
  _impl_.output_tensor_ids_.InternalSwap(&other->_impl_.output_tensor_ids_);
  _impl_.tensor_protos_.InternalSwap(&other->_impl_.tensor_protos_);
  _impl_.output_tensor_device_ids_.InternalSwap(&other->_impl_.output_tensor_device_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_type_, &other->_impl_.op_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_id_, &other->_impl_.graph_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Execution, _impl_.tensor_debug_mode_)
      + sizeof(Execution::_impl_.tensor_debug_mode_)
      - PROTOBUF_FIELD_OFFSET(Execution, _impl_.code_location_)>(
          reinterpret_cast<char*>(&_impl_.code_location_),
          reinterpret_cast<char*>(&other->_impl_.code_location_));
}

::google::protobuf::Metadata Execution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphExecutionTrace::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GraphExecutionTrace>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_._has_bits_);
};

void GraphExecutionTrace::clear_tensor_proto() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tensor_proto_ != nullptr) _impl_.tensor_proto_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GraphExecutionTrace::GraphExecutionTrace(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GraphExecutionTrace)
}
inline PROTOBUF_NDEBUG_INLINE GraphExecutionTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GraphExecutionTrace& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tfdbg_context_id_(arena, from.tfdbg_context_id_),
        op_name_(arena, from.op_name_),
        device_name_(arena, from.device_name_) {}

GraphExecutionTrace::GraphExecutionTrace(
    ::google::protobuf::Arena* arena,
    const GraphExecutionTrace& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphExecutionTrace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tensor_proto_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorProto>(
                              arena, *from._impl_.tensor_proto_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, output_slot_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, output_slot_),
           offsetof(Impl_, tensor_debug_mode_) -
               offsetof(Impl_, output_slot_) +
               sizeof(Impl_::tensor_debug_mode_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.GraphExecutionTrace)
}
inline PROTOBUF_NDEBUG_INLINE GraphExecutionTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tfdbg_context_id_(arena),
        op_name_(arena),
        device_name_(arena) {}

inline void GraphExecutionTrace::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tensor_proto_),
           0,
           offsetof(Impl_, tensor_debug_mode_) -
               offsetof(Impl_, tensor_proto_) +
               sizeof(Impl_::tensor_debug_mode_));
}
GraphExecutionTrace::~GraphExecutionTrace() {
  // @@protoc_insertion_point(destructor:tensorflow.GraphExecutionTrace)
  SharedDtor(*this);
}
inline void GraphExecutionTrace::SharedDtor(MessageLite& self) {
  GraphExecutionTrace& this_ = static_cast<GraphExecutionTrace&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tfdbg_context_id_.Destroy();
  this_._impl_.op_name_.Destroy();
  this_._impl_.device_name_.Destroy();
  delete this_._impl_.tensor_proto_;
  this_._impl_.~Impl_();
}

inline void* GraphExecutionTrace::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GraphExecutionTrace(arena);
}
constexpr auto GraphExecutionTrace::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GraphExecutionTrace),
                                            alignof(GraphExecutionTrace));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GraphExecutionTrace::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GraphExecutionTrace_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GraphExecutionTrace::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GraphExecutionTrace>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GraphExecutionTrace::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GraphExecutionTrace>(), &GraphExecutionTrace::ByteSizeLong,
            &GraphExecutionTrace::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_._cached_size_),
        false,
    },
    &GraphExecutionTrace::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GraphExecutionTrace::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 73, 2> GraphExecutionTrace::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GraphExecutionTrace>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string tfdbg_context_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tfdbg_context_id_)}},
    // string op_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.op_name_)}},
    // int32 output_slot = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphExecutionTrace, _impl_.output_slot_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.output_slot_)}},
    // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphExecutionTrace, _impl_.tensor_debug_mode_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tensor_debug_mode_)}},
    // .tensorflow.TensorProto tensor_proto = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tensor_proto_)}},
    // string device_name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.device_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string tfdbg_context_id = 1;
    {PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tfdbg_context_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string op_name = 2;
    {PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.op_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 output_slot = 3;
    {PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.output_slot_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
    {PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tensor_debug_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.TensorProto tensor_proto = 5;
    {PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tensor_proto_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string device_name = 6;
    {PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.device_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorProto>()},
  }}, {{
    "\36\20\7\0\0\0\13\0"
    "tensorflow.GraphExecutionTrace"
    "tfdbg_context_id"
    "op_name"
    "device_name"
  }},
};

PROTOBUF_NOINLINE void GraphExecutionTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GraphExecutionTrace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tfdbg_context_id_.ClearToEmpty();
  _impl_.op_name_.ClearToEmpty();
  _impl_.device_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tensor_proto_ != nullptr);
    _impl_.tensor_proto_->Clear();
  }
  ::memset(&_impl_.output_slot_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tensor_debug_mode_) -
      reinterpret_cast<char*>(&_impl_.output_slot_)) + sizeof(_impl_.tensor_debug_mode_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphExecutionTrace::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphExecutionTrace& this_ = static_cast<const GraphExecutionTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphExecutionTrace::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphExecutionTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GraphExecutionTrace)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tfdbg_context_id = 1;
          if (!this_._internal_tfdbg_context_id().empty()) {
            const std::string& _s = this_._internal_tfdbg_context_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphExecutionTrace.tfdbg_context_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string op_name = 2;
          if (!this_._internal_op_name().empty()) {
            const std::string& _s = this_._internal_op_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphExecutionTrace.op_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 output_slot = 3;
          if (this_._internal_output_slot() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_output_slot(), target);
          }

          // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
          if (this_._internal_tensor_debug_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_tensor_debug_mode(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorProto tensor_proto = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.tensor_proto_, this_._impl_.tensor_proto_->GetCachedSize(), target,
                stream);
          }

          // string device_name = 6;
          if (!this_._internal_device_name().empty()) {
            const std::string& _s = this_._internal_device_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GraphExecutionTrace.device_name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GraphExecutionTrace)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphExecutionTrace::ByteSizeLong(const MessageLite& base) {
          const GraphExecutionTrace& this_ = static_cast<const GraphExecutionTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphExecutionTrace::ByteSizeLong() const {
          const GraphExecutionTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GraphExecutionTrace)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string tfdbg_context_id = 1;
            if (!this_._internal_tfdbg_context_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tfdbg_context_id());
            }
            // string op_name = 2;
            if (!this_._internal_op_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_op_name());
            }
            // string device_name = 6;
            if (!this_._internal_device_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_name());
            }
          }
           {
            // .tensorflow.TensorProto tensor_proto = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tensor_proto_);
            }
          }
           {
            // int32 output_slot = 3;
            if (this_._internal_output_slot() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_output_slot());
            }
            // .tensorflow.TensorDebugMode tensor_debug_mode = 4;
            if (this_._internal_tensor_debug_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_tensor_debug_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphExecutionTrace::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphExecutionTrace*>(&to_msg);
  auto& from = static_cast<const GraphExecutionTrace&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GraphExecutionTrace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tfdbg_context_id().empty()) {
    _this->_internal_set_tfdbg_context_id(from._internal_tfdbg_context_id());
  }
  if (!from._internal_op_name().empty()) {
    _this->_internal_set_op_name(from._internal_op_name());
  }
  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tensor_proto_ != nullptr);
    if (_this->_impl_.tensor_proto_ == nullptr) {
      _this->_impl_.tensor_proto_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorProto>(arena, *from._impl_.tensor_proto_);
    } else {
      _this->_impl_.tensor_proto_->MergeFrom(*from._impl_.tensor_proto_);
    }
  }
  if (from._internal_output_slot() != 0) {
    _this->_impl_.output_slot_ = from._impl_.output_slot_;
  }
  if (from._internal_tensor_debug_mode() != 0) {
    _this->_impl_.tensor_debug_mode_ = from._impl_.tensor_debug_mode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphExecutionTrace::CopyFrom(const GraphExecutionTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GraphExecutionTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphExecutionTrace::InternalSwap(GraphExecutionTrace* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tfdbg_context_id_, &other->_impl_.tfdbg_context_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.op_name_, &other->_impl_.op_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tensor_debug_mode_)
      + sizeof(GraphExecutionTrace::_impl_.tensor_debug_mode_)
      - PROTOBUF_FIELD_OFFSET(GraphExecutionTrace, _impl_.tensor_proto_)>(
          reinterpret_cast<char*>(&_impl_.tensor_proto_),
          reinterpret_cast<char*>(&other->_impl_.tensor_proto_));
}

::google::protobuf::Metadata GraphExecutionTrace::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fdebug_5fevent_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
