// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow/core/protobuf/tensor_bundle.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow/core/protobuf/tensor_bundle.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr BundleHeaderProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_{nullptr},
        num_shards_{0},
        endianness_{static_cast< ::tensorflow::BundleHeaderProto_Endianness >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR BundleHeaderProto::BundleHeaderProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BundleHeaderProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BundleHeaderProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BundleHeaderProtoDefaultTypeInternal() {}
  union {
    BundleHeaderProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BundleHeaderProtoDefaultTypeInternal _BundleHeaderProto_default_instance_;

inline constexpr BundleEntryProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slices_{},
        shape_{nullptr},
        dtype_{static_cast< ::tensorflow::DataType >(0)},
        shard_id_{0},
        offset_{::int64_t{0}},
        size_{::int64_t{0}},
        crc32c_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR BundleEntryProto::BundleEntryProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BundleEntryProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BundleEntryProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BundleEntryProtoDefaultTypeInternal() {}
  union {
    BundleEntryProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BundleEntryProtoDefaultTypeInternal _BundleEntryProto_default_instance_;
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleHeaderProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleHeaderProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleHeaderProto, _impl_.num_shards_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleHeaderProto, _impl_.endianness_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleHeaderProto, _impl_.version_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.dtype_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.shard_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.crc32c_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BundleEntryProto, _impl_.slices_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::tensorflow::BundleHeaderProto)},
        {14, 29, -1, sizeof(::tensorflow::BundleEntryProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_BundleHeaderProto_default_instance_._instance,
    &::tensorflow::_BundleEntryProto_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n,tensorflow/core/protobuf/tensor_bundle"
    ".proto\022\ntensorflow\032,tensorflow/core/fram"
    "ework/tensor_shape.proto\032,tensorflow/cor"
    "e/framework/tensor_slice.proto\032%tensorfl"
    "ow/core/framework/types.proto\032(tensorflo"
    "w/core/framework/versions.proto\"\261\001\n\021Bund"
    "leHeaderProto\022\022\n\nnum_shards\030\001 \001(\005\022<\n\nend"
    "ianness\030\002 \001(\0162(.tensorflow.BundleHeaderP"
    "roto.Endianness\022\'\n\007version\030\003 \001(\0132\026.tenso"
    "rflow.VersionDef\"!\n\nEndianness\022\n\n\006LITTLE"
    "\020\000\022\007\n\003BIG\020\001\"\322\001\n\020BundleEntryProto\022#\n\005dtyp"
    "e\030\001 \001(\0162\024.tensorflow.DataType\022+\n\005shape\030\002"
    " \001(\0132\034.tensorflow.TensorShapeProto\022\020\n\010sh"
    "ard_id\030\003 \001(\005\022\016\n\006offset\030\004 \001(\003\022\014\n\004size\030\005 \001"
    "(\003\022\016\n\006crc32c\030\006 \001(\007\022,\n\006slices\030\007 \003(\0132\034.ten"
    "sorflow.TensorSliceProtoB\205\001\n\023org.tensorf"
    "low.utilB\022TensorBundleProtosP\001ZUgithub.c"
    "om/tensorflow/tensorflow/tensorflow/go/c"
    "ore/protobuf/for_core_protos_go_proto\370\001\001"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto_deps[4] =
    {
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
        &::descriptor_table_tensorflow_2fcore_2fframework_2fversions_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto = {
    false,
    false,
    768,
    descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto,
    "tensorflow/core/protobuf/tensor_bundle.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto_once,
    descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto_deps,
    4,
    2,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto,
};
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* BundleHeaderProto_Endianness_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto);
  return file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t BundleHeaderProto_Endianness_internal_data_[] = {
    131072u, 0u, };
bool BundleHeaderProto_Endianness_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr BundleHeaderProto_Endianness BundleHeaderProto::LITTLE;
constexpr BundleHeaderProto_Endianness BundleHeaderProto::BIG;
constexpr BundleHeaderProto_Endianness BundleHeaderProto::Endianness_MIN;
constexpr BundleHeaderProto_Endianness BundleHeaderProto::Endianness_MAX;
constexpr int BundleHeaderProto::Endianness_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class BundleHeaderProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BundleHeaderProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_._has_bits_);
};

void BundleHeaderProto::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ != nullptr) _impl_.version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BundleHeaderProto::BundleHeaderProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BundleHeaderProto)
}
inline PROTOBUF_NDEBUG_INLINE BundleHeaderProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::BundleHeaderProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BundleHeaderProto::BundleHeaderProto(
    ::google::protobuf::Arena* arena,
    const BundleHeaderProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BundleHeaderProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.version_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::VersionDef>(
                              arena, *from._impl_.version_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_shards_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_shards_),
           offsetof(Impl_, endianness_) -
               offsetof(Impl_, num_shards_) +
               sizeof(Impl_::endianness_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.BundleHeaderProto)
}
inline PROTOBUF_NDEBUG_INLINE BundleHeaderProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BundleHeaderProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           0,
           offsetof(Impl_, endianness_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::endianness_));
}
BundleHeaderProto::~BundleHeaderProto() {
  // @@protoc_insertion_point(destructor:tensorflow.BundleHeaderProto)
  SharedDtor(*this);
}
inline void BundleHeaderProto::SharedDtor(MessageLite& self) {
  BundleHeaderProto& this_ = static_cast<BundleHeaderProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.version_;
  this_._impl_.~Impl_();
}

inline void* BundleHeaderProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BundleHeaderProto(arena);
}
constexpr auto BundleHeaderProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BundleHeaderProto),
                                            alignof(BundleHeaderProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BundleHeaderProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BundleHeaderProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BundleHeaderProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BundleHeaderProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BundleHeaderProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BundleHeaderProto>(), &BundleHeaderProto::ByteSizeLong,
            &BundleHeaderProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_._cached_size_),
        false,
    },
    &BundleHeaderProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BundleHeaderProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> BundleHeaderProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::BundleHeaderProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 num_shards = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BundleHeaderProto, _impl_.num_shards_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.num_shards_)}},
    // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BundleHeaderProto, _impl_.endianness_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.endianness_)}},
    // .tensorflow.VersionDef version = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 num_shards = 1;
    {PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.num_shards_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
    {PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.endianness_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.VersionDef version = 3;
    {PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::VersionDef>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BundleHeaderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BundleHeaderProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.version_ != nullptr);
    _impl_.version_->Clear();
  }
  ::memset(&_impl_.num_shards_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.endianness_) -
      reinterpret_cast<char*>(&_impl_.num_shards_)) + sizeof(_impl_.endianness_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BundleHeaderProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BundleHeaderProto& this_ = static_cast<const BundleHeaderProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BundleHeaderProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BundleHeaderProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BundleHeaderProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 num_shards = 1;
          if (this_._internal_num_shards() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_num_shards(), target);
          }

          // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
          if (this_._internal_endianness() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_endianness(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.VersionDef version = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.version_, this_._impl_.version_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BundleHeaderProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BundleHeaderProto::ByteSizeLong(const MessageLite& base) {
          const BundleHeaderProto& this_ = static_cast<const BundleHeaderProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BundleHeaderProto::ByteSizeLong() const {
          const BundleHeaderProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.BundleHeaderProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tensorflow.VersionDef version = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_);
            }
          }
           {
            // int32 num_shards = 1;
            if (this_._internal_num_shards() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_shards());
            }
            // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
            if (this_._internal_endianness() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_endianness());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BundleHeaderProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BundleHeaderProto*>(&to_msg);
  auto& from = static_cast<const BundleHeaderProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BundleHeaderProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.version_ != nullptr);
    if (_this->_impl_.version_ == nullptr) {
      _this->_impl_.version_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::VersionDef>(arena, *from._impl_.version_);
    } else {
      _this->_impl_.version_->MergeFrom(*from._impl_.version_);
    }
  }
  if (from._internal_num_shards() != 0) {
    _this->_impl_.num_shards_ = from._impl_.num_shards_;
  }
  if (from._internal_endianness() != 0) {
    _this->_impl_.endianness_ = from._impl_.endianness_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BundleHeaderProto::CopyFrom(const BundleHeaderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BundleHeaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BundleHeaderProto::InternalSwap(BundleHeaderProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.endianness_)
      + sizeof(BundleHeaderProto::_impl_.endianness_)
      - PROTOBUF_FIELD_OFFSET(BundleHeaderProto, _impl_.version_)>(
          reinterpret_cast<char*>(&_impl_.version_),
          reinterpret_cast<char*>(&other->_impl_.version_));
}

::google::protobuf::Metadata BundleHeaderProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BundleEntryProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BundleEntryProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_._has_bits_);
};

void BundleEntryProto::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ != nullptr) _impl_.shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BundleEntryProto::clear_slices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slices_.Clear();
}
BundleEntryProto::BundleEntryProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BundleEntryProto)
}
inline PROTOBUF_NDEBUG_INLINE BundleEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::BundleEntryProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        slices_{visibility, arena, from.slices_} {}

BundleEntryProto::BundleEntryProto(
    ::google::protobuf::Arena* arena,
    const BundleEntryProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BundleEntryProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(
                              arena, *from._impl_.shape_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dtype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, dtype_),
           offsetof(Impl_, crc32c_) -
               offsetof(Impl_, dtype_) +
               sizeof(Impl_::crc32c_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.BundleEntryProto)
}
inline PROTOBUF_NDEBUG_INLINE BundleEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        slices_{visibility, arena} {}

inline void BundleEntryProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, crc32c_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::crc32c_));
}
BundleEntryProto::~BundleEntryProto() {
  // @@protoc_insertion_point(destructor:tensorflow.BundleEntryProto)
  SharedDtor(*this);
}
inline void BundleEntryProto::SharedDtor(MessageLite& self) {
  BundleEntryProto& this_ = static_cast<BundleEntryProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.shape_;
  this_._impl_.~Impl_();
}

inline void* BundleEntryProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BundleEntryProto(arena);
}
constexpr auto BundleEntryProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.slices_) +
          decltype(BundleEntryProto::_impl_.slices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BundleEntryProto), alignof(BundleEntryProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BundleEntryProto::PlacementNew_,
                                 sizeof(BundleEntryProto),
                                 alignof(BundleEntryProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BundleEntryProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BundleEntryProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BundleEntryProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BundleEntryProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BundleEntryProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BundleEntryProto>(), &BundleEntryProto::ByteSizeLong,
            &BundleEntryProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_._cached_size_),
        false,
    },
    &BundleEntryProto::kDescriptorMethods,
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BundleEntryProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 0, 2> BundleEntryProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::BundleEntryProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tensorflow.DataType dtype = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BundleEntryProto, _impl_.dtype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.dtype_)}},
    // .tensorflow.TensorShapeProto shape = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.shape_)}},
    // int32 shard_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BundleEntryProto, _impl_.shard_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.shard_id_)}},
    // int64 offset = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BundleEntryProto, _impl_.offset_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.offset_)}},
    // int64 size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BundleEntryProto, _impl_.size_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.size_)}},
    // fixed32 crc32c = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.crc32c_)}},
    // repeated .tensorflow.TensorSliceProto slices = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.slices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.DataType dtype = 1;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.dtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tensorflow.TensorShapeProto shape = 2;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 shard_id = 3;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.shard_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 offset = 4;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.offset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 size = 5;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // fixed32 crc32c = 6;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.crc32c_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFixed32)},
    // repeated .tensorflow.TensorSliceProto slices = 7;
    {PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.slices_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::TensorShapeProto>()},
    {::_pbi::TcParser::GetTable<::tensorflow::TensorSliceProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BundleEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BundleEntryProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.shape_ != nullptr);
    _impl_.shape_->Clear();
  }
  ::memset(&_impl_.dtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.crc32c_) -
      reinterpret_cast<char*>(&_impl_.dtype_)) + sizeof(_impl_.crc32c_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BundleEntryProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BundleEntryProto& this_ = static_cast<const BundleEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BundleEntryProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BundleEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BundleEntryProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tensorflow.DataType dtype = 1;
          if (this_._internal_dtype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_dtype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.TensorShapeProto shape = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
                stream);
          }

          // int32 shard_id = 3;
          if (this_._internal_shard_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_shard_id(), target);
          }

          // int64 offset = 4;
          if (this_._internal_offset() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_offset(), target);
          }

          // int64 size = 5;
          if (this_._internal_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_size(), target);
          }

          // fixed32 crc32c = 6;
          if (this_._internal_crc32c() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
                6, this_._internal_crc32c(), target);
          }

          // repeated .tensorflow.TensorSliceProto slices = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_slices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_slices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BundleEntryProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BundleEntryProto::ByteSizeLong(const MessageLite& base) {
          const BundleEntryProto& this_ = static_cast<const BundleEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BundleEntryProto::ByteSizeLong() const {
          const BundleEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.BundleEntryProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.TensorSliceProto slices = 7;
            {
              total_size += 1UL * this_._internal_slices_size();
              for (const auto& msg : this_._internal_slices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tensorflow.TensorShapeProto shape = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
            }
          }
           {
            // .tensorflow.DataType dtype = 1;
            if (this_._internal_dtype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_dtype());
            }
            // int32 shard_id = 3;
            if (this_._internal_shard_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_shard_id());
            }
            // int64 offset = 4;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset());
            }
            // int64 size = 5;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_size());
            }
            // fixed32 crc32c = 6;
            if (this_._internal_crc32c() != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BundleEntryProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BundleEntryProto*>(&to_msg);
  auto& from = static_cast<const BundleEntryProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BundleEntryProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_slices()->MergeFrom(
      from._internal_slices());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.shape_ != nullptr);
    if (_this->_impl_.shape_ == nullptr) {
      _this->_impl_.shape_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::TensorShapeProto>(arena, *from._impl_.shape_);
    } else {
      _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
    }
  }
  if (from._internal_dtype() != 0) {
    _this->_impl_.dtype_ = from._impl_.dtype_;
  }
  if (from._internal_shard_id() != 0) {
    _this->_impl_.shard_id_ = from._impl_.shard_id_;
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  if (from._internal_crc32c() != 0) {
    _this->_impl_.crc32c_ = from._impl_.crc32c_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BundleEntryProto::CopyFrom(const BundleEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BundleEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BundleEntryProto::InternalSwap(BundleEntryProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.slices_.InternalSwap(&other->_impl_.slices_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.crc32c_)
      + sizeof(BundleEntryProto::_impl_.crc32c_)
      - PROTOBUF_FIELD_OFFSET(BundleEntryProto, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
}

::google::protobuf::Metadata BundleEntryProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
