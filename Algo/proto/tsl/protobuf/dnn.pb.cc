// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsl/protobuf/dnn.proto
// Protobuf C++ Version: 5.29.0

#include "tsl/protobuf/dnn.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace stream_executor {
namespace dnn {

inline constexpr TensorDescriptorProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dimensions_{},
        _dimensions_cached_byte_size_{0},
        data_type_{static_cast< ::stream_executor::dnn::DataType >(0)},
        layout_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TensorDescriptorProto::TensorDescriptorProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TensorDescriptorProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TensorDescriptorProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TensorDescriptorProtoDefaultTypeInternal() {}
  union {
    TensorDescriptorProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TensorDescriptorProtoDefaultTypeInternal _TensorDescriptorProto_default_instance_;

inline constexpr ConvolutionDescriptorProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : paddings_{},
        _paddings_cached_byte_size_{0},
        strides_{},
        _strides_cached_byte_size_{0},
        dilations_{},
        _dilations_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compute_mode_{static_cast< ::stream_executor::dnn::DataType >(0)},
        group_count_{0},
        convolution_mode_{static_cast< ::stream_executor::dnn::ConvolutionMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConvolutionDescriptorProto::ConvolutionDescriptorProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConvolutionDescriptorProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConvolutionDescriptorProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConvolutionDescriptorProtoDefaultTypeInternal() {}
  union {
    ConvolutionDescriptorProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConvolutionDescriptorProtoDefaultTypeInternal _ConvolutionDescriptorProto_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AlgorithmProto_TuningKnobsEntry_DoNotUse::AlgorithmProto_TuningKnobsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : AlgorithmProto_TuningKnobsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : AlgorithmProto_TuningKnobsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AlgorithmProto_TuningKnobsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlgorithmProto_TuningKnobsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlgorithmProto_TuningKnobsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AlgorithmProto_TuningKnobsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlgorithmProto_TuningKnobsEntry_DoNotUseDefaultTypeInternal _AlgorithmProto_TuningKnobsEntry_DoNotUse_default_instance_;

inline constexpr AlgorithmProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tuning_knobs_{},
        workspace_size_{nullptr},
        algo_id_{::int64_t{0}},
        math_type_{static_cast< ::stream_executor::dnn::AlgorithmProto_MathType >(0)},
        is_cudnn_frontend_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AlgorithmProto::AlgorithmProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AlgorithmProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlgorithmProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlgorithmProtoDefaultTypeInternal() {}
  union {
    AlgorithmProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlgorithmProtoDefaultTypeInternal _AlgorithmProto_default_instance_;

inline constexpr AlgorithmConfigProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : optional_algorithm_{},
        optional_algorithm_no_scratch_{},
        optional_scratch_size_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AlgorithmConfigProto::AlgorithmConfigProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AlgorithmConfigProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlgorithmConfigProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlgorithmConfigProtoDefaultTypeInternal() {}
  union {
    AlgorithmConfigProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlgorithmConfigProtoDefaultTypeInternal _AlgorithmConfigProto_default_instance_;
}  // namespace dnn
}  // namespace stream_executor
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[10];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tsl_2fprotobuf_2fdnn_2eproto = nullptr;
const ::uint32_t
    TableStruct_tsl_2fprotobuf_2fdnn_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::TensorDescriptorProto, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::TensorDescriptorProto, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::TensorDescriptorProto, _impl_.dimensions_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::TensorDescriptorProto, _impl_.data_type_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::TensorDescriptorProto, _impl_.layout_oneof_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto_TuningKnobsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _impl_.algo_id_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _impl_.math_type_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _impl_.tuning_knobs_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _impl_.is_cudnn_frontend_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmProto, _impl_.workspace_size_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmConfigProto, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmConfigProto, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmConfigProto, _impl_.optional_algorithm_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmConfigProto, _impl_.optional_algorithm_no_scratch_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmConfigProto, _impl_.optional_scratch_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.paddings_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.strides_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.dilations_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.compute_mode_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.group_count_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.convolution_mode_),
        PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::ConvolutionDescriptorProto, _impl_.name_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::stream_executor::dnn::TensorDescriptorProto)},
        {13, 23, -1, sizeof(::stream_executor::dnn::AlgorithmProto_TuningKnobsEntry_DoNotUse)},
        {25, 38, -1, sizeof(::stream_executor::dnn::AlgorithmProto)},
        {43, -1, -1, sizeof(::stream_executor::dnn::AlgorithmConfigProto)},
        {57, -1, -1, sizeof(::stream_executor::dnn::ConvolutionDescriptorProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::stream_executor::dnn::_TensorDescriptorProto_default_instance_._instance,
    &::stream_executor::dnn::_AlgorithmProto_TuningKnobsEntry_DoNotUse_default_instance_._instance,
    &::stream_executor::dnn::_AlgorithmProto_default_instance_._instance,
    &::stream_executor::dnn::_AlgorithmConfigProto_default_instance_._instance,
    &::stream_executor::dnn::_ConvolutionDescriptorProto_default_instance_._instance,
};
const char descriptor_table_protodef_tsl_2fprotobuf_2fdnn_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026tsl/protobuf/dnn.proto\022\023stream_executo"
    "r.dnn\032\036google/protobuf/wrappers.proto\"\341\001"
    "\n\025TensorDescriptorProto\022\022\n\ndimensions\030\001 "
    "\003(\003\0220\n\tdata_type\030\002 \001(\0162\035.stream_executor"
    ".dnn.DataType\0226\n\013data_layout\030\003 \001(\0162\037.str"
    "eam_executor.dnn.DataLayoutH\000\022:\n\rfilter_"
    "layout\030\004 \001(\0162!.stream_executor.dnn.Filte"
    "rLayoutH\000B\016\n\014layout_oneof\"\353\002\n\016AlgorithmP"
    "roto\022\017\n\007algo_id\030\001 \001(\003\022\?\n\tmath_type\030\002 \001(\016"
    "2,.stream_executor.dnn.AlgorithmProto.Ma"
    "thType\022J\n\014tuning_knobs\030\004 \003(\01324.stream_ex"
    "ecutor.dnn.AlgorithmProto.TuningKnobsEnt"
    "ry\022\031\n\021is_cudnn_frontend\030\005 \001(\010\0224\n\016workspa"
    "ce_size\030\006 \001(\0132\034.google.protobuf.UInt64Va"
    "lue\0322\n\020TuningKnobsEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005"
    "value\030\002 \001(\003:\0028\001\"0\n\010MathType\022\020\n\014DEFAULT_M"
    "ATH\020\000\022\022\n\016TENSOR_OP_MATH\020\001J\004\010\003\020\004\"\375\001\n\024Algo"
    "rithmConfigProto\0228\n\talgorithm\030\001 \001(\0132#.st"
    "ream_executor.dnn.AlgorithmProtoH\000\022C\n\024al"
    "gorithm_no_scratch\030\002 \001(\0132#.stream_execut"
    "or.dnn.AlgorithmProtoH\001\022\026\n\014scratch_size\030"
    "\003 \001(\003H\002B\024\n\022optional_algorithmB\037\n\035optiona"
    "l_algorithm_no_scratchB\027\n\025optional_scrat"
    "ch_size\"\352\001\n\032ConvolutionDescriptorProto\022\020"
    "\n\010paddings\030\001 \003(\003\022\017\n\007strides\030\002 \003(\003\022\021\n\tdil"
    "ations\030\003 \003(\003\0223\n\014compute_mode\030\004 \001(\0162\035.str"
    "eam_executor.dnn.DataType\022\023\n\013group_count"
    "\030\005 \001(\005\022>\n\020convolution_mode\030\006 \001(\0162$.strea"
    "m_executor.dnn.ConvolutionMode\022\014\n\004name\030\007"
    " \001(\t*\301\001\n\010DataType\022\n\n\006kFloat\020\000\022\013\n\007kDouble"
    "\020\001\022\t\n\005kHalf\020\002\022\t\n\005kInt8\020\003\022\n\n\006kInt32\020\004\022\021\n\r"
    "kComplexFloat\020\005\022\022\n\016kComplexDouble\020\006\022\t\n\005k"
    "BF16\020\007\022\013\n\007kF8E5M2\020\010\022\r\n\tkF8E4M3FN\020\t\022\017\n\013kF"
    "8E5M2FNUZ\020\n\022\017\n\013kF8E4M3FNUZ\020\013\022\n\n\006kInt64\020\014"
    "*\201\001\n\nDataLayout\022\021\n\rkYXDepthBatch\020\000\022\021\n\rkY"
    "XBatchDepth\020\001\022\021\n\rkBatchYXDepth\020\002\022\021\n\rkBat"
    "chDepthYX\020\003\022\022\n\016kBatchDepthYX4\020\004\022\023\n\017kBatc"
    "hDepthYX32\020\005*\256\001\n\014FilterLayout\022\022\n\016kOutput"
    "InputYX\020\000\022\022\n\016kOutputYXInput\020\001\022\023\n\017kOutput"
    "InputYX4\020\002\022\024\n\020kOutputInputYX32\020\005\022#\n\037kOut"
    "putInputYX32_CudnnReordered\020\006\022\022\n\016kInputY"
    "XOutput\020\003\022\022\n\016kYXInputOutput\020\004*\220\001\n\016Activa"
    "tionMode\022\t\n\005kNone\020\000\022\014\n\010kSigmoid\020\001\022\t\n\005kRe"
    "lu\020\002\022\n\n\006kRelu6\020\003\022\n\n\006kReluX\020\004\022\t\n\005kTanh\020\005\022"
    "\r\n\tkBandPass\020\006\022\010\n\004kElu\020\007\022\016\n\nkLeakyRelu\020\010"
    "\022\016\n\nkGeluExact\020\t*9\n\017ConvolutionMode\022\025\n\021C"
    "ROSS_CORRELATION\020\000\022\017\n\013CONVOLUTION\020\001*\203\001\n\017"
    "ConvolutionKind\022\013\n\007INVALID\020\000\022\013\n\007FORWARD\020"
    "\001\022\023\n\017BACKWARD_FILTER\020\002\022\021\n\rBACKWARD_DATA\020"
    "\003\022\033\n\027FORWARD_BIAS_ACTIVATION\020\004\022\021\n\rFORWAR"
    "D_GRAPH\020\005*C\n\010NormKind\022\023\n\017LAYER_FWD_INFER"
    "\020\000\022\023\n\017LAYER_FWD_TRAIN\020\001\022\r\n\tLAYER_BWD\020\002*Z"
    "\n\014FusedMHAKind\022\027\n\023BMM1_OUTPUT_UNKNOWN\020\000\022"
    "\032\n\026BMM1_OUTPUT_INPUT_TYPE\020\001\022\025\n\021BMM1_OUTP"
    "UT_FLOAT\020\002*S\n\014FMHAMaskKind\022\013\n\007NO_MASK\020\000\022"
    "\013\n\007PADDING\020\001\022\n\n\006CAUSAL\020\002\022\022\n\016PADDING_CAUS"
    "AL\020\003\022\t\n\005ALIBI\020\004B.Z,github.com/google/tsl"
    "/tsl/go/stream_executorb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tsl_2fprotobuf_2fdnn_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_tsl_2fprotobuf_2fdnn_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tsl_2fprotobuf_2fdnn_2eproto = {
    false,
    false,
    2311,
    descriptor_table_protodef_tsl_2fprotobuf_2fdnn_2eproto,
    "tsl/protobuf/dnn.proto",
    &descriptor_table_tsl_2fprotobuf_2fdnn_2eproto_once,
    descriptor_table_tsl_2fprotobuf_2fdnn_2eproto_deps,
    1,
    5,
    schemas,
    file_default_instances,
    TableStruct_tsl_2fprotobuf_2fdnn_2eproto::offsets,
    file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto,
    file_level_service_descriptors_tsl_2fprotobuf_2fdnn_2eproto,
};
namespace stream_executor {
namespace dnn {
const ::google::protobuf::EnumDescriptor* AlgorithmProto_MathType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AlgorithmProto_MathType_internal_data_[] = {
    131072u, 0u, };
bool AlgorithmProto_MathType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr AlgorithmProto_MathType AlgorithmProto::DEFAULT_MATH;
constexpr AlgorithmProto_MathType AlgorithmProto::TENSOR_OP_MATH;
constexpr AlgorithmProto_MathType AlgorithmProto::MathType_MIN;
constexpr AlgorithmProto_MathType AlgorithmProto::MathType_MAX;
constexpr int AlgorithmProto::MathType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t DataType_internal_data_[] = {
    851968u, 0u, };
bool DataType_IsValid(int value) {
  return 0 <= value && value <= 12;
}
const ::google::protobuf::EnumDescriptor* DataLayout_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t DataLayout_internal_data_[] = {
    393216u, 0u, };
bool DataLayout_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* FilterLayout_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t FilterLayout_internal_data_[] = {
    458752u, 0u, };
bool FilterLayout_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* ActivationMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t ActivationMode_internal_data_[] = {
    655360u, 0u, };
bool ActivationMode_IsValid(int value) {
  return 0 <= value && value <= 9;
}
const ::google::protobuf::EnumDescriptor* ConvolutionMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t ConvolutionMode_internal_data_[] = {
    131072u, 0u, };
bool ConvolutionMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* ConvolutionKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t ConvolutionKind_internal_data_[] = {
    393216u, 0u, };
bool ConvolutionKind_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* NormKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t NormKind_internal_data_[] = {
    196608u, 0u, };
bool NormKind_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* FusedMHAKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t FusedMHAKind_internal_data_[] = {
    196608u, 0u, };
bool FusedMHAKind_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* FMHAMaskKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto);
  return file_level_enum_descriptors_tsl_2fprotobuf_2fdnn_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t FMHAMaskKind_internal_data_[] = {
    327680u, 0u, };
bool FMHAMaskKind_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class TensorDescriptorProto::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::TensorDescriptorProto, _impl_._oneof_case_);
};

TensorDescriptorProto::TensorDescriptorProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stream_executor.dnn.TensorDescriptorProto)
}
inline PROTOBUF_NDEBUG_INLINE TensorDescriptorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stream_executor::dnn::TensorDescriptorProto& from_msg)
      : dimensions_{visibility, arena, from.dimensions_},
        _dimensions_cached_byte_size_{0},
        layout_oneof_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TensorDescriptorProto::TensorDescriptorProto(
    ::google::protobuf::Arena* arena,
    const TensorDescriptorProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TensorDescriptorProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.data_type_ = from._impl_.data_type_;
  switch (layout_oneof_case()) {
    case LAYOUT_ONEOF_NOT_SET:
      break;
      case kDataLayout:
        _impl_.layout_oneof_.data_layout_ = from._impl_.layout_oneof_.data_layout_;
        break;
      case kFilterLayout:
        _impl_.layout_oneof_.filter_layout_ = from._impl_.layout_oneof_.filter_layout_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:stream_executor.dnn.TensorDescriptorProto)
}
inline PROTOBUF_NDEBUG_INLINE TensorDescriptorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dimensions_{visibility, arena},
        _dimensions_cached_byte_size_{0},
        layout_oneof_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TensorDescriptorProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.data_type_ = {};
}
TensorDescriptorProto::~TensorDescriptorProto() {
  // @@protoc_insertion_point(destructor:stream_executor.dnn.TensorDescriptorProto)
  SharedDtor(*this);
}
inline void TensorDescriptorProto::SharedDtor(MessageLite& self) {
  TensorDescriptorProto& this_ = static_cast<TensorDescriptorProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_layout_oneof()) {
    this_.clear_layout_oneof();
  }
  this_._impl_.~Impl_();
}

void TensorDescriptorProto::clear_layout_oneof() {
// @@protoc_insertion_point(one_of_clear_start:stream_executor.dnn.TensorDescriptorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (layout_oneof_case()) {
    case kDataLayout: {
      // No need to clear
      break;
    }
    case kFilterLayout: {
      // No need to clear
      break;
    }
    case LAYOUT_ONEOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = LAYOUT_ONEOF_NOT_SET;
}


inline void* TensorDescriptorProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TensorDescriptorProto(arena);
}
constexpr auto TensorDescriptorProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.dimensions_) +
          decltype(TensorDescriptorProto::_impl_.dimensions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TensorDescriptorProto), alignof(TensorDescriptorProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TensorDescriptorProto::PlacementNew_,
                                 sizeof(TensorDescriptorProto),
                                 alignof(TensorDescriptorProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TensorDescriptorProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TensorDescriptorProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TensorDescriptorProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TensorDescriptorProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TensorDescriptorProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TensorDescriptorProto>(), &TensorDescriptorProto::ByteSizeLong,
            &TensorDescriptorProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_._cached_size_),
        false,
    },
    &TensorDescriptorProto::kDescriptorMethods,
    &descriptor_table_tsl_2fprotobuf_2fdnn_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TensorDescriptorProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 0, 2> TensorDescriptorProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stream_executor::dnn::TensorDescriptorProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .stream_executor.dnn.DataType data_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TensorDescriptorProto, _impl_.data_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.data_type_)}},
    // repeated int64 dimensions = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.dimensions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 dimensions = 1;
    {PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.dimensions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .stream_executor.dnn.DataType data_type = 2;
    {PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .stream_executor.dnn.DataLayout data_layout = 3;
    {PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.layout_oneof_.data_layout_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .stream_executor.dnn.FilterLayout filter_layout = 4;
    {PROTOBUF_FIELD_OFFSET(TensorDescriptorProto, _impl_.layout_oneof_.filter_layout_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TensorDescriptorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.dnn.TensorDescriptorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimensions_.Clear();
  _impl_.data_type_ = 0;
  clear_layout_oneof();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TensorDescriptorProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TensorDescriptorProto& this_ = static_cast<const TensorDescriptorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TensorDescriptorProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TensorDescriptorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:stream_executor.dnn.TensorDescriptorProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int64 dimensions = 1;
          {
            int byte_size = this_._impl_._dimensions_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  1, this_._internal_dimensions(), byte_size, target);
            }
          }

          // .stream_executor.dnn.DataType data_type = 2;
          if (this_._internal_data_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_data_type(), target);
          }

          switch (this_.layout_oneof_case()) {
            case kDataLayout: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteEnumToArray(
                  3, this_._internal_data_layout(), target);
              break;
            }
            case kFilterLayout: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteEnumToArray(
                  4, this_._internal_filter_layout(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:stream_executor.dnn.TensorDescriptorProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TensorDescriptorProto::ByteSizeLong(const MessageLite& base) {
          const TensorDescriptorProto& this_ = static_cast<const TensorDescriptorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TensorDescriptorProto::ByteSizeLong() const {
          const TensorDescriptorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:stream_executor.dnn.TensorDescriptorProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 dimensions = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_dimensions(), 1,
                      this_._impl_._dimensions_cached_byte_size_);
            }
          }
           {
            // .stream_executor.dnn.DataType data_type = 2;
            if (this_._internal_data_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_data_type());
            }
          }
          switch (this_.layout_oneof_case()) {
            // .stream_executor.dnn.DataLayout data_layout = 3;
            case kDataLayout: {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_data_layout());
              break;
            }
            // .stream_executor.dnn.FilterLayout filter_layout = 4;
            case kFilterLayout: {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_filter_layout());
              break;
            }
            case LAYOUT_ONEOF_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TensorDescriptorProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TensorDescriptorProto*>(&to_msg);
  auto& from = static_cast<const TensorDescriptorProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.dnn.TensorDescriptorProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dimensions()->MergeFrom(from._internal_dimensions());
  if (from._internal_data_type() != 0) {
    _this->_impl_.data_type_ = from._impl_.data_type_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_layout_oneof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDataLayout: {
        _this->_impl_.layout_oneof_.data_layout_ = from._impl_.layout_oneof_.data_layout_;
        break;
      }
      case kFilterLayout: {
        _this->_impl_.layout_oneof_.filter_layout_ = from._impl_.layout_oneof_.filter_layout_;
        break;
      }
      case LAYOUT_ONEOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TensorDescriptorProto::CopyFrom(const TensorDescriptorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.dnn.TensorDescriptorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TensorDescriptorProto::InternalSwap(TensorDescriptorProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  swap(_impl_.data_type_, other->_impl_.data_type_);
  swap(_impl_.layout_oneof_, other->_impl_.layout_oneof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TensorDescriptorProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              AlgorithmProto_TuningKnobsEntry_DoNotUse::AlgorithmProto_TuningKnobsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              AlgorithmProto_TuningKnobsEntry_DoNotUse::AlgorithmProto_TuningKnobsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              AlgorithmProto_TuningKnobsEntry_DoNotUse::AlgorithmProto_TuningKnobsEntry_DoNotUse() : SuperType() {}
              AlgorithmProto_TuningKnobsEntry_DoNotUse::AlgorithmProto_TuningKnobsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* AlgorithmProto_TuningKnobsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) AlgorithmProto_TuningKnobsEntry_DoNotUse(arena);
              }
              constexpr auto AlgorithmProto_TuningKnobsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AlgorithmProto_TuningKnobsEntry_DoNotUse),
                                                          alignof(AlgorithmProto_TuningKnobsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull AlgorithmProto_TuningKnobsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_AlgorithmProto_TuningKnobsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &AlgorithmProto_TuningKnobsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<AlgorithmProto_TuningKnobsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &AlgorithmProto_TuningKnobsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &AlgorithmProto_TuningKnobsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &AlgorithmProto_TuningKnobsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tsl_2fprotobuf_2fdnn_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* AlgorithmProto_TuningKnobsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AlgorithmProto_TuningKnobsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stream_executor::dnn::AlgorithmProto_TuningKnobsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.value_)}},
    // int64 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 key = 1;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 value = 2;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto_TuningKnobsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

// ===================================================================

class AlgorithmProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AlgorithmProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_._has_bits_);
};

void AlgorithmProto::clear_workspace_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.workspace_size_ != nullptr) _impl_.workspace_size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AlgorithmProto::AlgorithmProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stream_executor.dnn.AlgorithmProto)
}
inline PROTOBUF_NDEBUG_INLINE AlgorithmProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stream_executor::dnn::AlgorithmProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tuning_knobs_{visibility, arena, from.tuning_knobs_} {}

AlgorithmProto::AlgorithmProto(
    ::google::protobuf::Arena* arena,
    const AlgorithmProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AlgorithmProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.workspace_size_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::UInt64Value>(
                              arena, *from._impl_.workspace_size_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, algo_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, algo_id_),
           offsetof(Impl_, is_cudnn_frontend_) -
               offsetof(Impl_, algo_id_) +
               sizeof(Impl_::is_cudnn_frontend_));

  // @@protoc_insertion_point(copy_constructor:stream_executor.dnn.AlgorithmProto)
}
inline PROTOBUF_NDEBUG_INLINE AlgorithmProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tuning_knobs_{visibility, arena} {}

inline void AlgorithmProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, workspace_size_),
           0,
           offsetof(Impl_, is_cudnn_frontend_) -
               offsetof(Impl_, workspace_size_) +
               sizeof(Impl_::is_cudnn_frontend_));
}
AlgorithmProto::~AlgorithmProto() {
  // @@protoc_insertion_point(destructor:stream_executor.dnn.AlgorithmProto)
  SharedDtor(*this);
}
inline void AlgorithmProto::SharedDtor(MessageLite& self) {
  AlgorithmProto& this_ = static_cast<AlgorithmProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.workspace_size_;
  this_._impl_.~Impl_();
}

inline void* AlgorithmProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AlgorithmProto(arena);
}
constexpr auto AlgorithmProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.tuning_knobs_) +
          decltype(AlgorithmProto::_impl_.tuning_knobs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.tuning_knobs_) +
          decltype(AlgorithmProto::_impl_.tuning_knobs_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AlgorithmProto), alignof(AlgorithmProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AlgorithmProto::PlacementNew_,
                                 sizeof(AlgorithmProto),
                                 alignof(AlgorithmProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AlgorithmProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AlgorithmProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AlgorithmProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AlgorithmProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AlgorithmProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AlgorithmProto>(), &AlgorithmProto::ByteSizeLong,
            &AlgorithmProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_._cached_size_),
        false,
    },
    &AlgorithmProto::kDescriptorMethods,
    &descriptor_table_tsl_2fprotobuf_2fdnn_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AlgorithmProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> AlgorithmProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967236,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stream_executor::dnn::AlgorithmProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 algo_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AlgorithmProto, _impl_.algo_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.algo_id_)}},
    // .stream_executor.dnn.AlgorithmProto.MathType math_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AlgorithmProto, _impl_.math_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.math_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_cudnn_frontend = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AlgorithmProto, _impl_.is_cudnn_frontend_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.is_cudnn_frontend_)}},
    // .google.protobuf.UInt64Value workspace_size = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.workspace_size_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 algo_id = 1;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.algo_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .stream_executor.dnn.AlgorithmProto.MathType math_type = 2;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.math_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<int64, int64> tuning_knobs = 4;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.tuning_knobs_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool is_cudnn_frontend = 5;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.is_cudnn_frontend_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.UInt64Value workspace_size = 6;
    {PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.workspace_size_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::UInt64Value>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(AlgorithmProto()._impl_.tuning_knobs_)>(
        0, 0, 0, 3,
        3)},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AlgorithmProto::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.dnn.AlgorithmProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tuning_knobs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.workspace_size_ != nullptr);
    _impl_.workspace_size_->Clear();
  }
  ::memset(&_impl_.algo_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_cudnn_frontend_) -
      reinterpret_cast<char*>(&_impl_.algo_id_)) + sizeof(_impl_.is_cudnn_frontend_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AlgorithmProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AlgorithmProto& this_ = static_cast<const AlgorithmProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AlgorithmProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AlgorithmProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:stream_executor.dnn.AlgorithmProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 algo_id = 1;
          if (this_._internal_algo_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_algo_id(), target);
          }

          // .stream_executor.dnn.AlgorithmProto.MathType math_type = 2;
          if (this_._internal_math_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_math_type(), target);
          }

          // map<int64, int64> tuning_knobs = 4;
          if (!this_._internal_tuning_knobs().empty()) {
            using MapType = ::google::protobuf::Map<::int64_t, ::int64_t>;
            using WireHelper = _pbi::MapEntryFuncs<::int64_t, ::int64_t,
                                           _pbi::WireFormatLite::TYPE_INT64,
                                           _pbi::WireFormatLite::TYPE_INT64>;
            const auto& field = this_._internal_tuning_knobs();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
              }
            }
          }

          // bool is_cudnn_frontend = 5;
          if (this_._internal_is_cudnn_frontend() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_cudnn_frontend(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.UInt64Value workspace_size = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.workspace_size_, this_._impl_.workspace_size_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:stream_executor.dnn.AlgorithmProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AlgorithmProto::ByteSizeLong(const MessageLite& base) {
          const AlgorithmProto& this_ = static_cast<const AlgorithmProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AlgorithmProto::ByteSizeLong() const {
          const AlgorithmProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:stream_executor.dnn.AlgorithmProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<int64, int64> tuning_knobs = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tuning_knobs_size());
              for (const auto& entry : this_._internal_tuning_knobs()) {
                total_size += _pbi::MapEntryFuncs<::int64_t, ::int64_t,
                                               _pbi::WireFormatLite::TYPE_INT64,
                                               _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // .google.protobuf.UInt64Value workspace_size = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.workspace_size_);
            }
          }
           {
            // int64 algo_id = 1;
            if (this_._internal_algo_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_algo_id());
            }
            // .stream_executor.dnn.AlgorithmProto.MathType math_type = 2;
            if (this_._internal_math_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_math_type());
            }
            // bool is_cudnn_frontend = 5;
            if (this_._internal_is_cudnn_frontend() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AlgorithmProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AlgorithmProto*>(&to_msg);
  auto& from = static_cast<const AlgorithmProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.dnn.AlgorithmProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tuning_knobs_.MergeFrom(from._impl_.tuning_knobs_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.workspace_size_ != nullptr);
    if (_this->_impl_.workspace_size_ == nullptr) {
      _this->_impl_.workspace_size_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::UInt64Value>(arena, *from._impl_.workspace_size_);
    } else {
      _this->_impl_.workspace_size_->MergeFrom(*from._impl_.workspace_size_);
    }
  }
  if (from._internal_algo_id() != 0) {
    _this->_impl_.algo_id_ = from._impl_.algo_id_;
  }
  if (from._internal_math_type() != 0) {
    _this->_impl_.math_type_ = from._impl_.math_type_;
  }
  if (from._internal_is_cudnn_frontend() != 0) {
    _this->_impl_.is_cudnn_frontend_ = from._impl_.is_cudnn_frontend_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AlgorithmProto::CopyFrom(const AlgorithmProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.dnn.AlgorithmProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AlgorithmProto::InternalSwap(AlgorithmProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tuning_knobs_.InternalSwap(&other->_impl_.tuning_knobs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.is_cudnn_frontend_)
      + sizeof(AlgorithmProto::_impl_.is_cudnn_frontend_)
      - PROTOBUF_FIELD_OFFSET(AlgorithmProto, _impl_.workspace_size_)>(
          reinterpret_cast<char*>(&_impl_.workspace_size_),
          reinterpret_cast<char*>(&other->_impl_.workspace_size_));
}

::google::protobuf::Metadata AlgorithmProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AlgorithmConfigProto::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::stream_executor::dnn::AlgorithmConfigProto, _impl_._oneof_case_);
};

void AlgorithmConfigProto::set_allocated_algorithm(::stream_executor::dnn::AlgorithmProto* algorithm) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_optional_algorithm();
  if (algorithm) {
    ::google::protobuf::Arena* submessage_arena = algorithm->GetArena();
    if (message_arena != submessage_arena) {
      algorithm = ::google::protobuf::internal::GetOwnedMessage(message_arena, algorithm, submessage_arena);
    }
    set_has_algorithm();
    _impl_.optional_algorithm_.algorithm_ = algorithm;
  }
  // @@protoc_insertion_point(field_set_allocated:stream_executor.dnn.AlgorithmConfigProto.algorithm)
}
void AlgorithmConfigProto::set_allocated_algorithm_no_scratch(::stream_executor::dnn::AlgorithmProto* algorithm_no_scratch) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_optional_algorithm_no_scratch();
  if (algorithm_no_scratch) {
    ::google::protobuf::Arena* submessage_arena = algorithm_no_scratch->GetArena();
    if (message_arena != submessage_arena) {
      algorithm_no_scratch = ::google::protobuf::internal::GetOwnedMessage(message_arena, algorithm_no_scratch, submessage_arena);
    }
    set_has_algorithm_no_scratch();
    _impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_ = algorithm_no_scratch;
  }
  // @@protoc_insertion_point(field_set_allocated:stream_executor.dnn.AlgorithmConfigProto.algorithm_no_scratch)
}
AlgorithmConfigProto::AlgorithmConfigProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stream_executor.dnn.AlgorithmConfigProto)
}
inline PROTOBUF_NDEBUG_INLINE AlgorithmConfigProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stream_executor::dnn::AlgorithmConfigProto& from_msg)
      : optional_algorithm_{},
        optional_algorithm_no_scratch_{},
        optional_scratch_size_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1], from._oneof_case_[2]} {}

AlgorithmConfigProto::AlgorithmConfigProto(
    ::google::protobuf::Arena* arena,
    const AlgorithmConfigProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AlgorithmConfigProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (optional_algorithm_case()) {
    case OPTIONAL_ALGORITHM_NOT_SET:
      break;
      case kAlgorithm:
        _impl_.optional_algorithm_.algorithm_ = ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::AlgorithmProto>(arena, *from._impl_.optional_algorithm_.algorithm_);
        break;
  }
  switch (optional_algorithm_no_scratch_case()) {
    case OPTIONAL_ALGORITHM_NO_SCRATCH_NOT_SET:
      break;
      case kAlgorithmNoScratch:
        _impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_ = ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::AlgorithmProto>(arena, *from._impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_);
        break;
  }
  switch (optional_scratch_size_case()) {
    case OPTIONAL_SCRATCH_SIZE_NOT_SET:
      break;
      case kScratchSize:
        _impl_.optional_scratch_size_.scratch_size_ = from._impl_.optional_scratch_size_.scratch_size_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:stream_executor.dnn.AlgorithmConfigProto)
}
inline PROTOBUF_NDEBUG_INLINE AlgorithmConfigProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : optional_algorithm_{},
        optional_algorithm_no_scratch_{},
        optional_scratch_size_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void AlgorithmConfigProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AlgorithmConfigProto::~AlgorithmConfigProto() {
  // @@protoc_insertion_point(destructor:stream_executor.dnn.AlgorithmConfigProto)
  SharedDtor(*this);
}
inline void AlgorithmConfigProto::SharedDtor(MessageLite& self) {
  AlgorithmConfigProto& this_ = static_cast<AlgorithmConfigProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_optional_algorithm()) {
    this_.clear_optional_algorithm();
  }
  if (this_.has_optional_algorithm_no_scratch()) {
    this_.clear_optional_algorithm_no_scratch();
  }
  if (this_.has_optional_scratch_size()) {
    this_.clear_optional_scratch_size();
  }
  this_._impl_.~Impl_();
}

void AlgorithmConfigProto::clear_optional_algorithm() {
// @@protoc_insertion_point(one_of_clear_start:stream_executor.dnn.AlgorithmConfigProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (optional_algorithm_case()) {
    case kAlgorithm: {
      if (GetArena() == nullptr) {
        delete _impl_.optional_algorithm_.algorithm_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.optional_algorithm_.algorithm_);
      }
      break;
    }
    case OPTIONAL_ALGORITHM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTIONAL_ALGORITHM_NOT_SET;
}

void AlgorithmConfigProto::clear_optional_algorithm_no_scratch() {
// @@protoc_insertion_point(one_of_clear_start:stream_executor.dnn.AlgorithmConfigProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (optional_algorithm_no_scratch_case()) {
    case kAlgorithmNoScratch: {
      if (GetArena() == nullptr) {
        delete _impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_);
      }
      break;
    }
    case OPTIONAL_ALGORITHM_NO_SCRATCH_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = OPTIONAL_ALGORITHM_NO_SCRATCH_NOT_SET;
}

void AlgorithmConfigProto::clear_optional_scratch_size() {
// @@protoc_insertion_point(one_of_clear_start:stream_executor.dnn.AlgorithmConfigProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (optional_scratch_size_case()) {
    case kScratchSize: {
      // No need to clear
      break;
    }
    case OPTIONAL_SCRATCH_SIZE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[2] = OPTIONAL_SCRATCH_SIZE_NOT_SET;
}


inline void* AlgorithmConfigProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AlgorithmConfigProto(arena);
}
constexpr auto AlgorithmConfigProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AlgorithmConfigProto),
                                            alignof(AlgorithmConfigProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AlgorithmConfigProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AlgorithmConfigProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AlgorithmConfigProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AlgorithmConfigProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AlgorithmConfigProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AlgorithmConfigProto>(), &AlgorithmConfigProto::ByteSizeLong,
            &AlgorithmConfigProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AlgorithmConfigProto, _impl_._cached_size_),
        false,
    },
    &AlgorithmConfigProto::kDescriptorMethods,
    &descriptor_table_tsl_2fprotobuf_2fdnn_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AlgorithmConfigProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 0, 2> AlgorithmConfigProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stream_executor::dnn::AlgorithmConfigProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .stream_executor.dnn.AlgorithmProto algorithm = 1;
    {PROTOBUF_FIELD_OFFSET(AlgorithmConfigProto, _impl_.optional_algorithm_.algorithm_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .stream_executor.dnn.AlgorithmProto algorithm_no_scratch = 2;
    {PROTOBUF_FIELD_OFFSET(AlgorithmConfigProto, _impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_), _Internal::kOneofCaseOffset + 4, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 scratch_size = 3;
    {PROTOBUF_FIELD_OFFSET(AlgorithmConfigProto, _impl_.optional_scratch_size_.scratch_size_), _Internal::kOneofCaseOffset + 8, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::stream_executor::dnn::AlgorithmProto>()},
    {::_pbi::TcParser::GetTable<::stream_executor::dnn::AlgorithmProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AlgorithmConfigProto::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.dnn.AlgorithmConfigProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_optional_algorithm();
  clear_optional_algorithm_no_scratch();
  clear_optional_scratch_size();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AlgorithmConfigProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AlgorithmConfigProto& this_ = static_cast<const AlgorithmConfigProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AlgorithmConfigProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AlgorithmConfigProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:stream_executor.dnn.AlgorithmConfigProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .stream_executor.dnn.AlgorithmProto algorithm = 1;
          if (this_.optional_algorithm_case() == kAlgorithm) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.optional_algorithm_.algorithm_, this_._impl_.optional_algorithm_.algorithm_->GetCachedSize(), target,
                stream);
          }

          // .stream_executor.dnn.AlgorithmProto algorithm_no_scratch = 2;
          if (this_.optional_algorithm_no_scratch_case() == kAlgorithmNoScratch) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_, this_._impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_->GetCachedSize(), target,
                stream);
          }

          // int64 scratch_size = 3;
          if (this_.optional_scratch_size_case() == kScratchSize) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_scratch_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:stream_executor.dnn.AlgorithmConfigProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AlgorithmConfigProto::ByteSizeLong(const MessageLite& base) {
          const AlgorithmConfigProto& this_ = static_cast<const AlgorithmConfigProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AlgorithmConfigProto::ByteSizeLong() const {
          const AlgorithmConfigProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:stream_executor.dnn.AlgorithmConfigProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.optional_algorithm_case()) {
            // .stream_executor.dnn.AlgorithmProto algorithm = 1;
            case kAlgorithm: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_algorithm_.algorithm_);
              break;
            }
            case OPTIONAL_ALGORITHM_NOT_SET: {
              break;
            }
          }
          switch (this_.optional_algorithm_no_scratch_case()) {
            // .stream_executor.dnn.AlgorithmProto algorithm_no_scratch = 2;
            case kAlgorithmNoScratch: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_);
              break;
            }
            case OPTIONAL_ALGORITHM_NO_SCRATCH_NOT_SET: {
              break;
            }
          }
          switch (this_.optional_scratch_size_case()) {
            // int64 scratch_size = 3;
            case kScratchSize: {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_scratch_size());
              break;
            }
            case OPTIONAL_SCRATCH_SIZE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AlgorithmConfigProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AlgorithmConfigProto*>(&to_msg);
  auto& from = static_cast<const AlgorithmConfigProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.dnn.AlgorithmConfigProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_optional_algorithm();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAlgorithm: {
        if (oneof_needs_init) {
          _this->_impl_.optional_algorithm_.algorithm_ =
              ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::AlgorithmProto>(arena, *from._impl_.optional_algorithm_.algorithm_);
        } else {
          _this->_impl_.optional_algorithm_.algorithm_->MergeFrom(from._internal_algorithm());
        }
        break;
      }
      case OPTIONAL_ALGORITHM_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[1]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[1];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_optional_algorithm_no_scratch();
      }
      _this->_impl_._oneof_case_[1] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAlgorithmNoScratch: {
        if (oneof_needs_init) {
          _this->_impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_ =
              ::google::protobuf::Message::CopyConstruct<::stream_executor::dnn::AlgorithmProto>(arena, *from._impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_);
        } else {
          _this->_impl_.optional_algorithm_no_scratch_.algorithm_no_scratch_->MergeFrom(from._internal_algorithm_no_scratch());
        }
        break;
      }
      case OPTIONAL_ALGORITHM_NO_SCRATCH_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[2]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[2];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_optional_scratch_size();
      }
      _this->_impl_._oneof_case_[2] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kScratchSize: {
        _this->_impl_.optional_scratch_size_.scratch_size_ = from._impl_.optional_scratch_size_.scratch_size_;
        break;
      }
      case OPTIONAL_SCRATCH_SIZE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AlgorithmConfigProto::CopyFrom(const AlgorithmConfigProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.dnn.AlgorithmConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AlgorithmConfigProto::InternalSwap(AlgorithmConfigProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.optional_algorithm_, other->_impl_.optional_algorithm_);
  swap(_impl_.optional_algorithm_no_scratch_, other->_impl_.optional_algorithm_no_scratch_);
  swap(_impl_.optional_scratch_size_, other->_impl_.optional_scratch_size_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
  swap(_impl_._oneof_case_[2], other->_impl_._oneof_case_[2]);
}

::google::protobuf::Metadata AlgorithmConfigProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConvolutionDescriptorProto::_Internal {
 public:
};

ConvolutionDescriptorProto::ConvolutionDescriptorProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stream_executor.dnn.ConvolutionDescriptorProto)
}
inline PROTOBUF_NDEBUG_INLINE ConvolutionDescriptorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stream_executor::dnn::ConvolutionDescriptorProto& from_msg)
      : paddings_{visibility, arena, from.paddings_},
        _paddings_cached_byte_size_{0},
        strides_{visibility, arena, from.strides_},
        _strides_cached_byte_size_{0},
        dilations_{visibility, arena, from.dilations_},
        _dilations_cached_byte_size_{0},
        name_(arena, from.name_),
        _cached_size_{0} {}

ConvolutionDescriptorProto::ConvolutionDescriptorProto(
    ::google::protobuf::Arena* arena,
    const ConvolutionDescriptorProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConvolutionDescriptorProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, compute_mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, compute_mode_),
           offsetof(Impl_, convolution_mode_) -
               offsetof(Impl_, compute_mode_) +
               sizeof(Impl_::convolution_mode_));

  // @@protoc_insertion_point(copy_constructor:stream_executor.dnn.ConvolutionDescriptorProto)
}
inline PROTOBUF_NDEBUG_INLINE ConvolutionDescriptorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : paddings_{visibility, arena},
        _paddings_cached_byte_size_{0},
        strides_{visibility, arena},
        _strides_cached_byte_size_{0},
        dilations_{visibility, arena},
        _dilations_cached_byte_size_{0},
        name_(arena),
        _cached_size_{0} {}

inline void ConvolutionDescriptorProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, compute_mode_),
           0,
           offsetof(Impl_, convolution_mode_) -
               offsetof(Impl_, compute_mode_) +
               sizeof(Impl_::convolution_mode_));
}
ConvolutionDescriptorProto::~ConvolutionDescriptorProto() {
  // @@protoc_insertion_point(destructor:stream_executor.dnn.ConvolutionDescriptorProto)
  SharedDtor(*this);
}
inline void ConvolutionDescriptorProto::SharedDtor(MessageLite& self) {
  ConvolutionDescriptorProto& this_ = static_cast<ConvolutionDescriptorProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ConvolutionDescriptorProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConvolutionDescriptorProto(arena);
}
constexpr auto ConvolutionDescriptorProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.paddings_) +
          decltype(ConvolutionDescriptorProto::_impl_.paddings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.strides_) +
          decltype(ConvolutionDescriptorProto::_impl_.strides_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.dilations_) +
          decltype(ConvolutionDescriptorProto::_impl_.dilations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConvolutionDescriptorProto), alignof(ConvolutionDescriptorProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConvolutionDescriptorProto::PlacementNew_,
                                 sizeof(ConvolutionDescriptorProto),
                                 alignof(ConvolutionDescriptorProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConvolutionDescriptorProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConvolutionDescriptorProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConvolutionDescriptorProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConvolutionDescriptorProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConvolutionDescriptorProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConvolutionDescriptorProto>(), &ConvolutionDescriptorProto::ByteSizeLong,
            &ConvolutionDescriptorProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_._cached_size_),
        false,
    },
    &ConvolutionDescriptorProto::kDescriptorMethods,
    &descriptor_table_tsl_2fprotobuf_2fdnn_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConvolutionDescriptorProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 59, 2> ConvolutionDescriptorProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stream_executor::dnn::ConvolutionDescriptorProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int64 paddings = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.paddings_)}},
    // repeated int64 strides = 2;
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.strides_)}},
    // repeated int64 dilations = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.dilations_)}},
    // .stream_executor.dnn.DataType compute_mode = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConvolutionDescriptorProto, _impl_.compute_mode_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.compute_mode_)}},
    // int32 group_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConvolutionDescriptorProto, _impl_.group_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.group_count_)}},
    // .stream_executor.dnn.ConvolutionMode convolution_mode = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConvolutionDescriptorProto, _impl_.convolution_mode_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.convolution_mode_)}},
    // string name = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 paddings = 1;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.paddings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated int64 strides = 2;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.strides_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated int64 dilations = 3;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.dilations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .stream_executor.dnn.DataType compute_mode = 4;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.compute_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 group_count = 5;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.group_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .stream_executor.dnn.ConvolutionMode convolution_mode = 6;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.convolution_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string name = 7;
    {PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\0\0\0\0\0\0\4"
    "stream_executor.dnn.ConvolutionDescriptorProto"
    "name"
  }},
};

PROTOBUF_NOINLINE void ConvolutionDescriptorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:stream_executor.dnn.ConvolutionDescriptorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.paddings_.Clear();
  _impl_.strides_.Clear();
  _impl_.dilations_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.compute_mode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.convolution_mode_) -
      reinterpret_cast<char*>(&_impl_.compute_mode_)) + sizeof(_impl_.convolution_mode_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConvolutionDescriptorProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConvolutionDescriptorProto& this_ = static_cast<const ConvolutionDescriptorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConvolutionDescriptorProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConvolutionDescriptorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:stream_executor.dnn.ConvolutionDescriptorProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int64 paddings = 1;
          {
            int byte_size = this_._impl_._paddings_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  1, this_._internal_paddings(), byte_size, target);
            }
          }

          // repeated int64 strides = 2;
          {
            int byte_size = this_._impl_._strides_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  2, this_._internal_strides(), byte_size, target);
            }
          }

          // repeated int64 dilations = 3;
          {
            int byte_size = this_._impl_._dilations_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  3, this_._internal_dilations(), byte_size, target);
            }
          }

          // .stream_executor.dnn.DataType compute_mode = 4;
          if (this_._internal_compute_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_compute_mode(), target);
          }

          // int32 group_count = 5;
          if (this_._internal_group_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_group_count(), target);
          }

          // .stream_executor.dnn.ConvolutionMode convolution_mode = 6;
          if (this_._internal_convolution_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_convolution_mode(), target);
          }

          // string name = 7;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "stream_executor.dnn.ConvolutionDescriptorProto.name");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:stream_executor.dnn.ConvolutionDescriptorProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConvolutionDescriptorProto::ByteSizeLong(const MessageLite& base) {
          const ConvolutionDescriptorProto& this_ = static_cast<const ConvolutionDescriptorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConvolutionDescriptorProto::ByteSizeLong() const {
          const ConvolutionDescriptorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:stream_executor.dnn.ConvolutionDescriptorProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 paddings = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_paddings(), 1,
                      this_._impl_._paddings_cached_byte_size_);
            }
            // repeated int64 strides = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_strides(), 1,
                      this_._impl_._strides_cached_byte_size_);
            }
            // repeated int64 dilations = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_dilations(), 1,
                      this_._impl_._dilations_cached_byte_size_);
            }
          }
           {
            // string name = 7;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // .stream_executor.dnn.DataType compute_mode = 4;
            if (this_._internal_compute_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_compute_mode());
            }
            // int32 group_count = 5;
            if (this_._internal_group_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_group_count());
            }
            // .stream_executor.dnn.ConvolutionMode convolution_mode = 6;
            if (this_._internal_convolution_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_convolution_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConvolutionDescriptorProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConvolutionDescriptorProto*>(&to_msg);
  auto& from = static_cast<const ConvolutionDescriptorProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stream_executor.dnn.ConvolutionDescriptorProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_paddings()->MergeFrom(from._internal_paddings());
  _this->_internal_mutable_strides()->MergeFrom(from._internal_strides());
  _this->_internal_mutable_dilations()->MergeFrom(from._internal_dilations());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_compute_mode() != 0) {
    _this->_impl_.compute_mode_ = from._impl_.compute_mode_;
  }
  if (from._internal_group_count() != 0) {
    _this->_impl_.group_count_ = from._impl_.group_count_;
  }
  if (from._internal_convolution_mode() != 0) {
    _this->_impl_.convolution_mode_ = from._impl_.convolution_mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConvolutionDescriptorProto::CopyFrom(const ConvolutionDescriptorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stream_executor.dnn.ConvolutionDescriptorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConvolutionDescriptorProto::InternalSwap(ConvolutionDescriptorProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.paddings_.InternalSwap(&other->_impl_.paddings_);
  _impl_.strides_.InternalSwap(&other->_impl_.strides_);
  _impl_.dilations_.InternalSwap(&other->_impl_.dilations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.convolution_mode_)
      + sizeof(ConvolutionDescriptorProto::_impl_.convolution_mode_)
      - PROTOBUF_FIELD_OFFSET(ConvolutionDescriptorProto, _impl_.compute_mode_)>(
          reinterpret_cast<char*>(&_impl_.compute_mode_),
          reinterpret_cast<char*>(&other->_impl_.compute_mode_));
}

::google::protobuf::Metadata ConvolutionDescriptorProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace dnn
}  // namespace stream_executor
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tsl_2fprotobuf_2fdnn_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
