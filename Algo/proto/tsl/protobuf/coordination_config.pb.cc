// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsl/protobuf/coordination_config.proto
// Protobuf C++ Version: 5.29.0

#include "tsl/protobuf/coordination_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {

inline constexpr CoordinatedJob::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_tasks_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinatedJob::CoordinatedJob(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinatedJobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinatedJobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinatedJobDefaultTypeInternal() {}
  union {
    CoordinatedJob _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinatedJobDefaultTypeInternal _CoordinatedJob_default_instance_;

inline constexpr CoordinationServiceConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recoverable_jobs_{},
        coordinated_job_list_{},
        service_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        service_leader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cluster_register_timeout_in_ms_{::int64_t{0}},
        heartbeat_timeout_in_ms_{::int64_t{0}},
        shutdown_barrier_timeout_in_ms_{::int64_t{0}},
        enable_health_check_{false},
        agent_destruction_without_shutdown_{false},
        allow_new_incarnation_to_reconnect_{false},
        force_disable_{false},
        poll_for_error_from_service_at_startup_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CoordinationServiceConfig::CoordinationServiceConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoordinationServiceConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinationServiceConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinationServiceConfigDefaultTypeInternal() {}
  union {
    CoordinationServiceConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinationServiceConfigDefaultTypeInternal _CoordinationServiceConfig_default_instance_;
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinatedJob, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinatedJob, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinatedJob, _impl_.num_tasks_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.service_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.service_leader_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.enable_health_check_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.cluster_register_timeout_in_ms_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.heartbeat_timeout_in_ms_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.coordinated_job_list_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.shutdown_barrier_timeout_in_ms_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.agent_destruction_without_shutdown_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.recoverable_jobs_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.allow_new_incarnation_to_reconnect_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.force_disable_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CoordinationServiceConfig, _impl_.poll_for_error_from_service_at_startup_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::CoordinatedJob)},
        {10, -1, -1, sizeof(::tensorflow::CoordinationServiceConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_CoordinatedJob_default_instance_._instance,
    &::tensorflow::_CoordinationServiceConfig_default_instance_._instance,
};
const char descriptor_table_protodef_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&tsl/protobuf/coordination_config.proto"
    "\022\ntensorflow\"1\n\016CoordinatedJob\022\014\n\004name\030\001"
    " \001(\t\022\021\n\tnum_tasks\030\002 \001(\005\"\320\003\n\031Coordination"
    "ServiceConfig\022\024\n\014service_type\030\001 \001(\t\022\026\n\016s"
    "ervice_leader\030\002 \001(\t\022\033\n\023enable_health_che"
    "ck\030\003 \001(\010\022&\n\036cluster_register_timeout_in_"
    "ms\030\004 \001(\003\022\037\n\027heartbeat_timeout_in_ms\030\005 \001("
    "\003\0228\n\024coordinated_job_list\030\n \003(\0132\032.tensor"
    "flow.CoordinatedJob\022&\n\036shutdown_barrier_"
    "timeout_in_ms\030\007 \001(\003\022*\n\"agent_destruction"
    "_without_shutdown\030\010 \001(\010\022\030\n\020recoverable_j"
    "obs\030\t \003(\t\022*\n\"allow_new_incarnation_to_re"
    "connect\030\013 \001(\010\022\025\n\rforce_disable\030\014 \001(\010\022.\n&"
    "poll_for_error_from_service_at_startup\030\r"
    " \001(\010J\004\010\006\020\007BWZUgithub.com/tensorflow/tens"
    "orflow/tensorflow/go/core/protobuf/for_c"
    "ore_protos_go_protob\006proto3"
};
static ::absl::once_flag descriptor_table_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto = {
    false,
    false,
    667,
    descriptor_table_protodef_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto,
    "tsl/protobuf/coordination_config.proto",
    &descriptor_table_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto,
    file_level_service_descriptors_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto,
};
namespace tensorflow {
// ===================================================================

class CoordinatedJob::_Internal {
 public:
};

CoordinatedJob::CoordinatedJob(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CoordinatedJob)
}
inline PROTOBUF_NDEBUG_INLINE CoordinatedJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::CoordinatedJob& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

CoordinatedJob::CoordinatedJob(
    ::google::protobuf::Arena* arena,
    const CoordinatedJob& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinatedJob* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.num_tasks_ = from._impl_.num_tasks_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.CoordinatedJob)
}
inline PROTOBUF_NDEBUG_INLINE CoordinatedJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void CoordinatedJob::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_tasks_ = {};
}
CoordinatedJob::~CoordinatedJob() {
  // @@protoc_insertion_point(destructor:tensorflow.CoordinatedJob)
  SharedDtor(*this);
}
inline void CoordinatedJob::SharedDtor(MessageLite& self) {
  CoordinatedJob& this_ = static_cast<CoordinatedJob&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinatedJob::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinatedJob(arena);
}
constexpr auto CoordinatedJob::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoordinatedJob),
                                            alignof(CoordinatedJob));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinatedJob::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinatedJob_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinatedJob::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinatedJob>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinatedJob::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinatedJob>(), &CoordinatedJob::ByteSizeLong,
            &CoordinatedJob::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinatedJob, _impl_._cached_size_),
        false,
    },
    &CoordinatedJob::kDescriptorMethods,
    &descriptor_table_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinatedJob::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> CoordinatedJob::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::CoordinatedJob>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 num_tasks = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoordinatedJob, _impl_.num_tasks_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatedJob, _impl_.num_tasks_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinatedJob, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinatedJob, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 num_tasks = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinatedJob, _impl_.num_tasks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0"
    "tensorflow.CoordinatedJob"
    "name"
  }},
};

PROTOBUF_NOINLINE void CoordinatedJob::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CoordinatedJob)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.num_tasks_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinatedJob::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinatedJob& this_ = static_cast<const CoordinatedJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinatedJob::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinatedJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CoordinatedJob)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CoordinatedJob.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 num_tasks = 2;
          if (this_._internal_num_tasks() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_num_tasks(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CoordinatedJob)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinatedJob::ByteSizeLong(const MessageLite& base) {
          const CoordinatedJob& this_ = static_cast<const CoordinatedJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinatedJob::ByteSizeLong() const {
          const CoordinatedJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.CoordinatedJob)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // int32 num_tasks = 2;
            if (this_._internal_num_tasks() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_tasks());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinatedJob::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinatedJob*>(&to_msg);
  auto& from = static_cast<const CoordinatedJob&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CoordinatedJob)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_num_tasks() != 0) {
    _this->_impl_.num_tasks_ = from._impl_.num_tasks_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinatedJob::CopyFrom(const CoordinatedJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CoordinatedJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinatedJob::InternalSwap(CoordinatedJob* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.num_tasks_, other->_impl_.num_tasks_);
}

::google::protobuf::Metadata CoordinatedJob::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CoordinationServiceConfig::_Internal {
 public:
};

CoordinationServiceConfig::CoordinationServiceConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CoordinationServiceConfig)
}
inline PROTOBUF_NDEBUG_INLINE CoordinationServiceConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::CoordinationServiceConfig& from_msg)
      : recoverable_jobs_{visibility, arena, from.recoverable_jobs_},
        coordinated_job_list_{visibility, arena, from.coordinated_job_list_},
        service_type_(arena, from.service_type_),
        service_leader_(arena, from.service_leader_),
        _cached_size_{0} {}

CoordinationServiceConfig::CoordinationServiceConfig(
    ::google::protobuf::Arena* arena,
    const CoordinationServiceConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoordinationServiceConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cluster_register_timeout_in_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cluster_register_timeout_in_ms_),
           offsetof(Impl_, poll_for_error_from_service_at_startup_) -
               offsetof(Impl_, cluster_register_timeout_in_ms_) +
               sizeof(Impl_::poll_for_error_from_service_at_startup_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.CoordinationServiceConfig)
}
inline PROTOBUF_NDEBUG_INLINE CoordinationServiceConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recoverable_jobs_{visibility, arena},
        coordinated_job_list_{visibility, arena},
        service_type_(arena),
        service_leader_(arena),
        _cached_size_{0} {}

inline void CoordinationServiceConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cluster_register_timeout_in_ms_),
           0,
           offsetof(Impl_, poll_for_error_from_service_at_startup_) -
               offsetof(Impl_, cluster_register_timeout_in_ms_) +
               sizeof(Impl_::poll_for_error_from_service_at_startup_));
}
CoordinationServiceConfig::~CoordinationServiceConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.CoordinationServiceConfig)
  SharedDtor(*this);
}
inline void CoordinationServiceConfig::SharedDtor(MessageLite& self) {
  CoordinationServiceConfig& this_ = static_cast<CoordinationServiceConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.service_type_.Destroy();
  this_._impl_.service_leader_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CoordinationServiceConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CoordinationServiceConfig(arena);
}
constexpr auto CoordinationServiceConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.coordinated_job_list_) +
          decltype(CoordinationServiceConfig::_impl_.coordinated_job_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.recoverable_jobs_) +
          decltype(CoordinationServiceConfig::_impl_.recoverable_jobs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CoordinationServiceConfig), alignof(CoordinationServiceConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CoordinationServiceConfig::PlacementNew_,
                                 sizeof(CoordinationServiceConfig),
                                 alignof(CoordinationServiceConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CoordinationServiceConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CoordinationServiceConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CoordinationServiceConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CoordinationServiceConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CoordinationServiceConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CoordinationServiceConfig>(), &CoordinationServiceConfig::ByteSizeLong,
            &CoordinationServiceConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_._cached_size_),
        false,
    },
    &CoordinationServiceConfig::kDescriptorMethods,
    &descriptor_table_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CoordinationServiceConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 95, 2> CoordinationServiceConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959136,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::CoordinationServiceConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string service_type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.service_type_)}},
    // string service_leader = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.service_leader_)}},
    // bool enable_health_check = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CoordinationServiceConfig, _impl_.enable_health_check_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.enable_health_check_)}},
    // int64 cluster_register_timeout_in_ms = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CoordinationServiceConfig, _impl_.cluster_register_timeout_in_ms_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.cluster_register_timeout_in_ms_)}},
    // int64 heartbeat_timeout_in_ms = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CoordinationServiceConfig, _impl_.heartbeat_timeout_in_ms_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.heartbeat_timeout_in_ms_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 shutdown_barrier_timeout_in_ms = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CoordinationServiceConfig, _impl_.shutdown_barrier_timeout_in_ms_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.shutdown_barrier_timeout_in_ms_)}},
    // bool agent_destruction_without_shutdown = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CoordinationServiceConfig, _impl_.agent_destruction_without_shutdown_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.agent_destruction_without_shutdown_)}},
    // repeated string recoverable_jobs = 9;
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.recoverable_jobs_)}},
    // repeated .tensorflow.CoordinatedJob coordinated_job_list = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.coordinated_job_list_)}},
    // bool allow_new_incarnation_to_reconnect = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CoordinationServiceConfig, _impl_.allow_new_incarnation_to_reconnect_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.allow_new_incarnation_to_reconnect_)}},
    // bool force_disable = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CoordinationServiceConfig, _impl_.force_disable_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.force_disable_)}},
    // bool poll_for_error_from_service_at_startup = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CoordinationServiceConfig, _impl_.poll_for_error_from_service_at_startup_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.poll_for_error_from_service_at_startup_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string service_type = 1;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.service_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string service_leader = 2;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.service_leader_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enable_health_check = 3;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.enable_health_check_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 cluster_register_timeout_in_ms = 4;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.cluster_register_timeout_in_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 heartbeat_timeout_in_ms = 5;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.heartbeat_timeout_in_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 shutdown_barrier_timeout_in_ms = 7;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.shutdown_barrier_timeout_in_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool agent_destruction_without_shutdown = 8;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.agent_destruction_without_shutdown_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string recoverable_jobs = 9;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.recoverable_jobs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .tensorflow.CoordinatedJob coordinated_job_list = 10;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.coordinated_job_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool allow_new_incarnation_to_reconnect = 11;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.allow_new_incarnation_to_reconnect_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool force_disable = 12;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.force_disable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool poll_for_error_from_service_at_startup = 13;
    {PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.poll_for_error_from_service_at_startup_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::CoordinatedJob>()},
  }}, {{
    "\44\14\16\0\0\0\0\0\20\0\0\0\0\0\0\0"
    "tensorflow.CoordinationServiceConfig"
    "service_type"
    "service_leader"
    "recoverable_jobs"
  }},
};

PROTOBUF_NOINLINE void CoordinationServiceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CoordinationServiceConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recoverable_jobs_.Clear();
  _impl_.coordinated_job_list_.Clear();
  _impl_.service_type_.ClearToEmpty();
  _impl_.service_leader_.ClearToEmpty();
  ::memset(&_impl_.cluster_register_timeout_in_ms_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.poll_for_error_from_service_at_startup_) -
      reinterpret_cast<char*>(&_impl_.cluster_register_timeout_in_ms_)) + sizeof(_impl_.poll_for_error_from_service_at_startup_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CoordinationServiceConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CoordinationServiceConfig& this_ = static_cast<const CoordinationServiceConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CoordinationServiceConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CoordinationServiceConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CoordinationServiceConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string service_type = 1;
          if (!this_._internal_service_type().empty()) {
            const std::string& _s = this_._internal_service_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CoordinationServiceConfig.service_type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string service_leader = 2;
          if (!this_._internal_service_leader().empty()) {
            const std::string& _s = this_._internal_service_leader();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CoordinationServiceConfig.service_leader");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool enable_health_check = 3;
          if (this_._internal_enable_health_check() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_enable_health_check(), target);
          }

          // int64 cluster_register_timeout_in_ms = 4;
          if (this_._internal_cluster_register_timeout_in_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_cluster_register_timeout_in_ms(), target);
          }

          // int64 heartbeat_timeout_in_ms = 5;
          if (this_._internal_heartbeat_timeout_in_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_heartbeat_timeout_in_ms(), target);
          }

          // int64 shutdown_barrier_timeout_in_ms = 7;
          if (this_._internal_shutdown_barrier_timeout_in_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_shutdown_barrier_timeout_in_ms(), target);
          }

          // bool agent_destruction_without_shutdown = 8;
          if (this_._internal_agent_destruction_without_shutdown() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_agent_destruction_without_shutdown(), target);
          }

          // repeated string recoverable_jobs = 9;
          for (int i = 0, n = this_._internal_recoverable_jobs_size(); i < n; ++i) {
            const auto& s = this_._internal_recoverable_jobs().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CoordinationServiceConfig.recoverable_jobs");
            target = stream->WriteString(9, s, target);
          }

          // repeated .tensorflow.CoordinatedJob coordinated_job_list = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_coordinated_job_list_size());
               i < n; i++) {
            const auto& repfield = this_._internal_coordinated_job_list().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool allow_new_incarnation_to_reconnect = 11;
          if (this_._internal_allow_new_incarnation_to_reconnect() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_allow_new_incarnation_to_reconnect(), target);
          }

          // bool force_disable = 12;
          if (this_._internal_force_disable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_force_disable(), target);
          }

          // bool poll_for_error_from_service_at_startup = 13;
          if (this_._internal_poll_for_error_from_service_at_startup() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_poll_for_error_from_service_at_startup(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CoordinationServiceConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CoordinationServiceConfig::ByteSizeLong(const MessageLite& base) {
          const CoordinationServiceConfig& this_ = static_cast<const CoordinationServiceConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CoordinationServiceConfig::ByteSizeLong() const {
          const CoordinationServiceConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.CoordinationServiceConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string recoverable_jobs = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_recoverable_jobs().size());
              for (int i = 0, n = this_._internal_recoverable_jobs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_recoverable_jobs().Get(i));
              }
            }
            // repeated .tensorflow.CoordinatedJob coordinated_job_list = 10;
            {
              total_size += 1UL * this_._internal_coordinated_job_list_size();
              for (const auto& msg : this_._internal_coordinated_job_list()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string service_type = 1;
            if (!this_._internal_service_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_service_type());
            }
            // string service_leader = 2;
            if (!this_._internal_service_leader().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_service_leader());
            }
            // int64 cluster_register_timeout_in_ms = 4;
            if (this_._internal_cluster_register_timeout_in_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_cluster_register_timeout_in_ms());
            }
            // int64 heartbeat_timeout_in_ms = 5;
            if (this_._internal_heartbeat_timeout_in_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_heartbeat_timeout_in_ms());
            }
            // int64 shutdown_barrier_timeout_in_ms = 7;
            if (this_._internal_shutdown_barrier_timeout_in_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_shutdown_barrier_timeout_in_ms());
            }
            // bool enable_health_check = 3;
            if (this_._internal_enable_health_check() != 0) {
              total_size += 2;
            }
            // bool agent_destruction_without_shutdown = 8;
            if (this_._internal_agent_destruction_without_shutdown() != 0) {
              total_size += 2;
            }
            // bool allow_new_incarnation_to_reconnect = 11;
            if (this_._internal_allow_new_incarnation_to_reconnect() != 0) {
              total_size += 2;
            }
            // bool force_disable = 12;
            if (this_._internal_force_disable() != 0) {
              total_size += 2;
            }
            // bool poll_for_error_from_service_at_startup = 13;
            if (this_._internal_poll_for_error_from_service_at_startup() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CoordinationServiceConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoordinationServiceConfig*>(&to_msg);
  auto& from = static_cast<const CoordinationServiceConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CoordinationServiceConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_recoverable_jobs()->MergeFrom(from._internal_recoverable_jobs());
  _this->_internal_mutable_coordinated_job_list()->MergeFrom(
      from._internal_coordinated_job_list());
  if (!from._internal_service_type().empty()) {
    _this->_internal_set_service_type(from._internal_service_type());
  }
  if (!from._internal_service_leader().empty()) {
    _this->_internal_set_service_leader(from._internal_service_leader());
  }
  if (from._internal_cluster_register_timeout_in_ms() != 0) {
    _this->_impl_.cluster_register_timeout_in_ms_ = from._impl_.cluster_register_timeout_in_ms_;
  }
  if (from._internal_heartbeat_timeout_in_ms() != 0) {
    _this->_impl_.heartbeat_timeout_in_ms_ = from._impl_.heartbeat_timeout_in_ms_;
  }
  if (from._internal_shutdown_barrier_timeout_in_ms() != 0) {
    _this->_impl_.shutdown_barrier_timeout_in_ms_ = from._impl_.shutdown_barrier_timeout_in_ms_;
  }
  if (from._internal_enable_health_check() != 0) {
    _this->_impl_.enable_health_check_ = from._impl_.enable_health_check_;
  }
  if (from._internal_agent_destruction_without_shutdown() != 0) {
    _this->_impl_.agent_destruction_without_shutdown_ = from._impl_.agent_destruction_without_shutdown_;
  }
  if (from._internal_allow_new_incarnation_to_reconnect() != 0) {
    _this->_impl_.allow_new_incarnation_to_reconnect_ = from._impl_.allow_new_incarnation_to_reconnect_;
  }
  if (from._internal_force_disable() != 0) {
    _this->_impl_.force_disable_ = from._impl_.force_disable_;
  }
  if (from._internal_poll_for_error_from_service_at_startup() != 0) {
    _this->_impl_.poll_for_error_from_service_at_startup_ = from._impl_.poll_for_error_from_service_at_startup_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoordinationServiceConfig::CopyFrom(const CoordinationServiceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CoordinationServiceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoordinationServiceConfig::InternalSwap(CoordinationServiceConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.recoverable_jobs_.InternalSwap(&other->_impl_.recoverable_jobs_);
  _impl_.coordinated_job_list_.InternalSwap(&other->_impl_.coordinated_job_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_type_, &other->_impl_.service_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_leader_, &other->_impl_.service_leader_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.poll_for_error_from_service_at_startup_)
      + sizeof(CoordinationServiceConfig::_impl_.poll_for_error_from_service_at_startup_)
      - PROTOBUF_FIELD_OFFSET(CoordinationServiceConfig, _impl_.cluster_register_timeout_in_ms_)>(
          reinterpret_cast<char*>(&_impl_.cluster_register_timeout_in_ms_),
          reinterpret_cast<char*>(&other->_impl_.cluster_register_timeout_in_ms_));
}

::google::protobuf::Metadata CoordinationServiceConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tsl_2fprotobuf_2fcoordination_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
