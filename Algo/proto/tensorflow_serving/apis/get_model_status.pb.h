// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/apis/get_model_status.proto
// Protobuf C++ Version: 5.29.0

#ifndef tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto_2epb_2eh
#define tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow_serving/apis/model.pb.h"
#include "tensorflow_serving/apis/status.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto;
namespace tensorflow {
namespace serving {
class GetModelStatusRequest;
struct GetModelStatusRequestDefaultTypeInternal;
extern GetModelStatusRequestDefaultTypeInternal _GetModelStatusRequest_default_instance_;
class GetModelStatusResponse;
struct GetModelStatusResponseDefaultTypeInternal;
extern GetModelStatusResponseDefaultTypeInternal _GetModelStatusResponse_default_instance_;
class ModelVersionStatus;
struct ModelVersionStatusDefaultTypeInternal;
extern ModelVersionStatusDefaultTypeInternal _ModelVersionStatus_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace serving {
enum ModelVersionStatus_State : int {
  ModelVersionStatus_State_UNKNOWN = 0,
  ModelVersionStatus_State_START = 10,
  ModelVersionStatus_State_LOADING = 20,
  ModelVersionStatus_State_AVAILABLE = 30,
  ModelVersionStatus_State_UNLOADING = 40,
  ModelVersionStatus_State_END = 50,
  ModelVersionStatus_State_ModelVersionStatus_State_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ModelVersionStatus_State_ModelVersionStatus_State_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ModelVersionStatus_State_IsValid(int value);
extern const uint32_t ModelVersionStatus_State_internal_data_[];
constexpr ModelVersionStatus_State ModelVersionStatus_State_State_MIN = static_cast<ModelVersionStatus_State>(0);
constexpr ModelVersionStatus_State ModelVersionStatus_State_State_MAX = static_cast<ModelVersionStatus_State>(50);
constexpr int ModelVersionStatus_State_State_ARRAYSIZE = 50 + 1;
const ::google::protobuf::EnumDescriptor*
ModelVersionStatus_State_descriptor();
template <typename T>
const std::string& ModelVersionStatus_State_Name(T value) {
  static_assert(std::is_same<T, ModelVersionStatus_State>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to State_Name().");
  return ::google::protobuf::internal::NameOfEnum(ModelVersionStatus_State_descriptor(), value);
}
inline bool ModelVersionStatus_State_Parse(absl::string_view name, ModelVersionStatus_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModelVersionStatus_State>(
      ModelVersionStatus_State_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ModelVersionStatus final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.ModelVersionStatus) */ {
 public:
  inline ModelVersionStatus() : ModelVersionStatus(nullptr) {}
  ~ModelVersionStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModelVersionStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModelVersionStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelVersionStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModelVersionStatus(const ModelVersionStatus& from) : ModelVersionStatus(nullptr, from) {}
  inline ModelVersionStatus(ModelVersionStatus&& from) noexcept
      : ModelVersionStatus(nullptr, std::move(from)) {}
  inline ModelVersionStatus& operator=(const ModelVersionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelVersionStatus& operator=(ModelVersionStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelVersionStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelVersionStatus* internal_default_instance() {
    return reinterpret_cast<const ModelVersionStatus*>(
        &_ModelVersionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ModelVersionStatus& a, ModelVersionStatus& b) { a.Swap(&b); }
  inline void Swap(ModelVersionStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelVersionStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelVersionStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModelVersionStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelVersionStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModelVersionStatus& from) { ModelVersionStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModelVersionStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.ModelVersionStatus"; }

 protected:
  explicit ModelVersionStatus(::google::protobuf::Arena* arena);
  ModelVersionStatus(::google::protobuf::Arena* arena, const ModelVersionStatus& from);
  ModelVersionStatus(::google::protobuf::Arena* arena, ModelVersionStatus&& from) noexcept
      : ModelVersionStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using State = ModelVersionStatus_State;
  static constexpr State UNKNOWN = ModelVersionStatus_State_UNKNOWN;
  static constexpr State START = ModelVersionStatus_State_START;
  static constexpr State LOADING = ModelVersionStatus_State_LOADING;
  static constexpr State AVAILABLE = ModelVersionStatus_State_AVAILABLE;
  static constexpr State UNLOADING = ModelVersionStatus_State_UNLOADING;
  static constexpr State END = ModelVersionStatus_State_END;
  static inline bool State_IsValid(int value) {
    return ModelVersionStatus_State_IsValid(value);
  }
  static constexpr State State_MIN = ModelVersionStatus_State_State_MIN;
  static constexpr State State_MAX = ModelVersionStatus_State_State_MAX;
  static constexpr int State_ARRAYSIZE = ModelVersionStatus_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* State_descriptor() {
    return ModelVersionStatus_State_descriptor();
  }
  template <typename T>
  static inline const std::string& State_Name(T value) {
    return ModelVersionStatus_State_Name(value);
  }
  static inline bool State_Parse(absl::string_view name, State* value) {
    return ModelVersionStatus_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 3,
    kVersionFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // .tensorflow.serving.StatusProto status = 3;
  bool has_status() const;
  void clear_status() ;
  const ::tensorflow::serving::StatusProto& status() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::StatusProto* release_status();
  ::tensorflow::serving::StatusProto* mutable_status();
  void set_allocated_status(::tensorflow::serving::StatusProto* value);
  void unsafe_arena_set_allocated_status(::tensorflow::serving::StatusProto* value);
  ::tensorflow::serving::StatusProto* unsafe_arena_release_status();

  private:
  const ::tensorflow::serving::StatusProto& _internal_status() const;
  ::tensorflow::serving::StatusProto* _internal_mutable_status();

  public:
  // int64 version = 1;
  void clear_version() ;
  ::int64_t version() const;
  void set_version(::int64_t value);

  private:
  ::int64_t _internal_version() const;
  void _internal_set_version(::int64_t value);

  public:
  // .tensorflow.serving.ModelVersionStatus.State state = 2;
  void clear_state() ;
  ::tensorflow::serving::ModelVersionStatus_State state() const;
  void set_state(::tensorflow::serving::ModelVersionStatus_State value);

  private:
  ::tensorflow::serving::ModelVersionStatus_State _internal_state() const;
  void _internal_set_state(::tensorflow::serving::ModelVersionStatus_State value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.serving.ModelVersionStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModelVersionStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::serving::StatusProto* status_;
    ::int64_t version_;
    int state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto;
};
// -------------------------------------------------------------------

class GetModelStatusResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.GetModelStatusResponse) */ {
 public:
  inline GetModelStatusResponse() : GetModelStatusResponse(nullptr) {}
  ~GetModelStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetModelStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetModelStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetModelStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetModelStatusResponse(const GetModelStatusResponse& from) : GetModelStatusResponse(nullptr, from) {}
  inline GetModelStatusResponse(GetModelStatusResponse&& from) noexcept
      : GetModelStatusResponse(nullptr, std::move(from)) {}
  inline GetModelStatusResponse& operator=(const GetModelStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModelStatusResponse& operator=(GetModelStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModelStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModelStatusResponse* internal_default_instance() {
    return reinterpret_cast<const GetModelStatusResponse*>(
        &_GetModelStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetModelStatusResponse& a, GetModelStatusResponse& b) { a.Swap(&b); }
  inline void Swap(GetModelStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModelStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModelStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetModelStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModelStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetModelStatusResponse& from) { GetModelStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetModelStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.GetModelStatusResponse"; }

 protected:
  explicit GetModelStatusResponse(::google::protobuf::Arena* arena);
  GetModelStatusResponse(::google::protobuf::Arena* arena, const GetModelStatusResponse& from);
  GetModelStatusResponse(::google::protobuf::Arena* arena, GetModelStatusResponse&& from) noexcept
      : GetModelStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelVersionStatusFieldNumber = 1,
  };
  // repeated .tensorflow.serving.ModelVersionStatus model_version_status = 1 [json_name = "model_version_status"];
  int model_version_status_size() const;
  private:
  int _internal_model_version_status_size() const;

  public:
  void clear_model_version_status() ;
  ::tensorflow::serving::ModelVersionStatus* mutable_model_version_status(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>* mutable_model_version_status();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>& _internal_model_version_status() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>* _internal_mutable_model_version_status();
  public:
  const ::tensorflow::serving::ModelVersionStatus& model_version_status(int index) const;
  ::tensorflow::serving::ModelVersionStatus* add_model_version_status();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>& model_version_status() const;
  // @@protoc_insertion_point(class_scope:tensorflow.serving.GetModelStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetModelStatusResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ModelVersionStatus > model_version_status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto;
};
// -------------------------------------------------------------------

class GetModelStatusRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.GetModelStatusRequest) */ {
 public:
  inline GetModelStatusRequest() : GetModelStatusRequest(nullptr) {}
  ~GetModelStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetModelStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetModelStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetModelStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetModelStatusRequest(const GetModelStatusRequest& from) : GetModelStatusRequest(nullptr, from) {}
  inline GetModelStatusRequest(GetModelStatusRequest&& from) noexcept
      : GetModelStatusRequest(nullptr, std::move(from)) {}
  inline GetModelStatusRequest& operator=(const GetModelStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModelStatusRequest& operator=(GetModelStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetModelStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetModelStatusRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelStatusRequest*>(
        &_GetModelStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetModelStatusRequest& a, GetModelStatusRequest& b) { a.Swap(&b); }
  inline void Swap(GetModelStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModelStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetModelStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetModelStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetModelStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetModelStatusRequest& from) { GetModelStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetModelStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.GetModelStatusRequest"; }

 protected:
  explicit GetModelStatusRequest(::google::protobuf::Arena* arena);
  GetModelStatusRequest(::google::protobuf::Arena* arena, const GetModelStatusRequest& from);
  GetModelStatusRequest(::google::protobuf::Arena* arena, GetModelStatusRequest&& from) noexcept
      : GetModelStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelSpecFieldNumber = 1,
  };
  // .tensorflow.serving.ModelSpec model_spec = 1;
  bool has_model_spec() const;
  void clear_model_spec() ;
  const ::tensorflow::serving::ModelSpec& model_spec() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::ModelSpec* release_model_spec();
  ::tensorflow::serving::ModelSpec* mutable_model_spec();
  void set_allocated_model_spec(::tensorflow::serving::ModelSpec* value);
  void unsafe_arena_set_allocated_model_spec(::tensorflow::serving::ModelSpec* value);
  ::tensorflow::serving::ModelSpec* unsafe_arena_release_model_spec();

  private:
  const ::tensorflow::serving::ModelSpec& _internal_model_spec() const;
  ::tensorflow::serving::ModelSpec* _internal_mutable_model_spec();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.serving.GetModelStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetModelStatusRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::serving::ModelSpec* model_spec_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetModelStatusRequest

// .tensorflow.serving.ModelSpec model_spec = 1;
inline bool GetModelStatusRequest::has_model_spec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.model_spec_ != nullptr);
  return value;
}
inline const ::tensorflow::serving::ModelSpec& GetModelStatusRequest::_internal_model_spec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::serving::ModelSpec* p = _impl_.model_spec_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::serving::ModelSpec&>(::tensorflow::serving::_ModelSpec_default_instance_);
}
inline const ::tensorflow::serving::ModelSpec& GetModelStatusRequest::model_spec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.GetModelStatusRequest.model_spec)
  return _internal_model_spec();
}
inline void GetModelStatusRequest::unsafe_arena_set_allocated_model_spec(::tensorflow::serving::ModelSpec* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_spec_);
  }
  _impl_.model_spec_ = reinterpret_cast<::tensorflow::serving::ModelSpec*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.GetModelStatusRequest.model_spec)
}
inline ::tensorflow::serving::ModelSpec* GetModelStatusRequest::release_model_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::ModelSpec* released = _impl_.model_spec_;
  _impl_.model_spec_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::serving::ModelSpec* GetModelStatusRequest::unsafe_arena_release_model_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.GetModelStatusRequest.model_spec)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::ModelSpec* temp = _impl_.model_spec_;
  _impl_.model_spec_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::ModelSpec* GetModelStatusRequest::_internal_mutable_model_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.model_spec_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::ModelSpec>(GetArena());
    _impl_.model_spec_ = reinterpret_cast<::tensorflow::serving::ModelSpec*>(p);
  }
  return _impl_.model_spec_;
}
inline ::tensorflow::serving::ModelSpec* GetModelStatusRequest::mutable_model_spec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::serving::ModelSpec* _msg = _internal_mutable_model_spec();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.GetModelStatusRequest.model_spec)
  return _msg;
}
inline void GetModelStatusRequest::set_allocated_model_spec(::tensorflow::serving::ModelSpec* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_spec_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.model_spec_ = reinterpret_cast<::tensorflow::serving::ModelSpec*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.GetModelStatusRequest.model_spec)
}

// -------------------------------------------------------------------

// ModelVersionStatus

// int64 version = 1;
inline void ModelVersionStatus::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = ::int64_t{0};
}
inline ::int64_t ModelVersionStatus::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelVersionStatus.version)
  return _internal_version();
}
inline void ModelVersionStatus::set_version(::int64_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelVersionStatus.version)
}
inline ::int64_t ModelVersionStatus::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_;
}
inline void ModelVersionStatus::_internal_set_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_ = value;
}

// .tensorflow.serving.ModelVersionStatus.State state = 2;
inline void ModelVersionStatus::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::tensorflow::serving::ModelVersionStatus_State ModelVersionStatus::state() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelVersionStatus.state)
  return _internal_state();
}
inline void ModelVersionStatus::set_state(::tensorflow::serving::ModelVersionStatus_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelVersionStatus.state)
}
inline ::tensorflow::serving::ModelVersionStatus_State ModelVersionStatus::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tensorflow::serving::ModelVersionStatus_State>(_impl_.state_);
}
inline void ModelVersionStatus::_internal_set_state(::tensorflow::serving::ModelVersionStatus_State value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// .tensorflow.serving.StatusProto status = 3;
inline bool ModelVersionStatus::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::tensorflow::serving::StatusProto& ModelVersionStatus::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::serving::StatusProto* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::serving::StatusProto&>(::tensorflow::serving::_StatusProto_default_instance_);
}
inline const ::tensorflow::serving::StatusProto& ModelVersionStatus::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelVersionStatus.status)
  return _internal_status();
}
inline void ModelVersionStatus::unsafe_arena_set_allocated_status(::tensorflow::serving::StatusProto* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::tensorflow::serving::StatusProto*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelVersionStatus.status)
}
inline ::tensorflow::serving::StatusProto* ModelVersionStatus::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::StatusProto* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::serving::StatusProto* ModelVersionStatus::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelVersionStatus.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::StatusProto* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::StatusProto* ModelVersionStatus::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::StatusProto>(GetArena());
    _impl_.status_ = reinterpret_cast<::tensorflow::serving::StatusProto*>(p);
  }
  return _impl_.status_;
}
inline ::tensorflow::serving::StatusProto* ModelVersionStatus::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::serving::StatusProto* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelVersionStatus.status)
  return _msg;
}
inline void ModelVersionStatus::set_allocated_status(::tensorflow::serving::StatusProto* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::tensorflow::serving::StatusProto*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelVersionStatus.status)
}

// -------------------------------------------------------------------

// GetModelStatusResponse

// repeated .tensorflow.serving.ModelVersionStatus model_version_status = 1 [json_name = "model_version_status"];
inline int GetModelStatusResponse::_internal_model_version_status_size() const {
  return _internal_model_version_status().size();
}
inline int GetModelStatusResponse::model_version_status_size() const {
  return _internal_model_version_status_size();
}
inline void GetModelStatusResponse::clear_model_version_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_version_status_.Clear();
}
inline ::tensorflow::serving::ModelVersionStatus* GetModelStatusResponse::mutable_model_version_status(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.GetModelStatusResponse.model_version_status)
  return _internal_mutable_model_version_status()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>* GetModelStatusResponse::mutable_model_version_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.GetModelStatusResponse.model_version_status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_model_version_status();
}
inline const ::tensorflow::serving::ModelVersionStatus& GetModelStatusResponse::model_version_status(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.GetModelStatusResponse.model_version_status)
  return _internal_model_version_status().Get(index);
}
inline ::tensorflow::serving::ModelVersionStatus* GetModelStatusResponse::add_model_version_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::serving::ModelVersionStatus* _add = _internal_mutable_model_version_status()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.serving.GetModelStatusResponse.model_version_status)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>& GetModelStatusResponse::model_version_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.serving.GetModelStatusResponse.model_version_status)
  return _internal_model_version_status();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>&
GetModelStatusResponse::_internal_model_version_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_version_status_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::serving::ModelVersionStatus>*
GetModelStatusResponse::_internal_mutable_model_version_status() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.model_version_status_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tensorflow::serving::ModelVersionStatus_State> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tensorflow::serving::ModelVersionStatus_State>() {
  return ::tensorflow::serving::ModelVersionStatus_State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_5fserving_2fapis_2fget_5fmodel_5fstatus_2eproto_2epb_2eh
