// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/apis/logging.proto
// Protobuf C++ Version: 5.29.0

#ifndef tensorflow_5fserving_2fapis_2flogging_2eproto_2epb_2eh
#define tensorflow_5fserving_2fapis_2flogging_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow_serving/apis/model.pb.h"
#include "tensorflow_serving/config/logging_config.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2flogging_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5fserving_2fapis_2flogging_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_5fserving_2fapis_2flogging_2eproto;
namespace tensorflow {
namespace serving {
class LogMetadata;
struct LogMetadataDefaultTypeInternal;
extern LogMetadataDefaultTypeInternal _LogMetadata_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace serving {

// ===================================================================


// -------------------------------------------------------------------

class LogMetadata final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.LogMetadata) */ {
 public:
  inline LogMetadata() : LogMetadata(nullptr) {}
  ~LogMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LogMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LogMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline LogMetadata(const LogMetadata& from) : LogMetadata(nullptr, from) {}
  inline LogMetadata(LogMetadata&& from) noexcept
      : LogMetadata(nullptr, std::move(from)) {}
  inline LogMetadata& operator=(const LogMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogMetadata& operator=(LogMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogMetadata* internal_default_instance() {
    return reinterpret_cast<const LogMetadata*>(
        &_LogMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LogMetadata& a, LogMetadata& b) { a.Swap(&b); }
  inline void Swap(LogMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LogMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogMetadata& from) { LogMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LogMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.LogMetadata"; }

 protected:
  explicit LogMetadata(::google::protobuf::Arena* arena);
  LogMetadata(::google::protobuf::Arena* arena, const LogMetadata& from);
  LogMetadata(::google::protobuf::Arena* arena, LogMetadata&& from) noexcept
      : LogMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSavedModelTagsFieldNumber = 3,
    kDcFieldNumber = 5,
    kRequestOriginFieldNumber = 6,
    kRequestCriticalityFieldNumber = 7,
    kModelSpecFieldNumber = 1,
    kSamplingConfigFieldNumber = 2,
    kTimestampSecsFieldNumber = 4,
  };
  // repeated string saved_model_tags = 3;
  int saved_model_tags_size() const;
  private:
  int _internal_saved_model_tags_size() const;

  public:
  void clear_saved_model_tags() ;
  const std::string& saved_model_tags(int index) const;
  std::string* mutable_saved_model_tags(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_saved_model_tags(int index, Arg_&& value, Args_... args);
  std::string* add_saved_model_tags();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_saved_model_tags(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& saved_model_tags() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_saved_model_tags();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_saved_model_tags() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_saved_model_tags();

  public:
  // string dc = 5;
  void clear_dc() ;
  const std::string& dc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dc(Arg_&& arg, Args_... args);
  std::string* mutable_dc();
  PROTOBUF_NODISCARD std::string* release_dc();
  void set_allocated_dc(std::string* value);

  private:
  const std::string& _internal_dc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dc(
      const std::string& value);
  std::string* _internal_mutable_dc();

  public:
  // string request_origin = 6;
  void clear_request_origin() ;
  const std::string& request_origin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_origin(Arg_&& arg, Args_... args);
  std::string* mutable_request_origin();
  PROTOBUF_NODISCARD std::string* release_request_origin();
  void set_allocated_request_origin(std::string* value);

  private:
  const std::string& _internal_request_origin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_origin(
      const std::string& value);
  std::string* _internal_mutable_request_origin();

  public:
  // string request_criticality = 7;
  void clear_request_criticality() ;
  const std::string& request_criticality() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_request_criticality(Arg_&& arg, Args_... args);
  std::string* mutable_request_criticality();
  PROTOBUF_NODISCARD std::string* release_request_criticality();
  void set_allocated_request_criticality(std::string* value);

  private:
  const std::string& _internal_request_criticality() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_request_criticality(
      const std::string& value);
  std::string* _internal_mutable_request_criticality();

  public:
  // .tensorflow.serving.ModelSpec model_spec = 1;
  bool has_model_spec() const;
  void clear_model_spec() ;
  const ::tensorflow::serving::ModelSpec& model_spec() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::ModelSpec* release_model_spec();
  ::tensorflow::serving::ModelSpec* mutable_model_spec();
  void set_allocated_model_spec(::tensorflow::serving::ModelSpec* value);
  void unsafe_arena_set_allocated_model_spec(::tensorflow::serving::ModelSpec* value);
  ::tensorflow::serving::ModelSpec* unsafe_arena_release_model_spec();

  private:
  const ::tensorflow::serving::ModelSpec& _internal_model_spec() const;
  ::tensorflow::serving::ModelSpec* _internal_mutable_model_spec();

  public:
  // .tensorflow.serving.SamplingConfig sampling_config = 2;
  bool has_sampling_config() const;
  void clear_sampling_config() ;
  const ::tensorflow::serving::SamplingConfig& sampling_config() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::SamplingConfig* release_sampling_config();
  ::tensorflow::serving::SamplingConfig* mutable_sampling_config();
  void set_allocated_sampling_config(::tensorflow::serving::SamplingConfig* value);
  void unsafe_arena_set_allocated_sampling_config(::tensorflow::serving::SamplingConfig* value);
  ::tensorflow::serving::SamplingConfig* unsafe_arena_release_sampling_config();

  private:
  const ::tensorflow::serving::SamplingConfig& _internal_sampling_config() const;
  ::tensorflow::serving::SamplingConfig* _internal_mutable_sampling_config();

  public:
  // int64 timestamp_secs = 4;
  void clear_timestamp_secs() ;
  ::int64_t timestamp_secs() const;
  void set_timestamp_secs(::int64_t value);

  private:
  ::int64_t _internal_timestamp_secs() const;
  void _internal_set_timestamp_secs(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.serving.LogMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LogMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> saved_model_tags_;
    ::google::protobuf::internal::ArenaStringPtr dc_;
    ::google::protobuf::internal::ArenaStringPtr request_origin_;
    ::google::protobuf::internal::ArenaStringPtr request_criticality_;
    ::tensorflow::serving::ModelSpec* model_spec_;
    ::tensorflow::serving::SamplingConfig* sampling_config_;
    ::int64_t timestamp_secs_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2flogging_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LogMetadata

// .tensorflow.serving.ModelSpec model_spec = 1;
inline bool LogMetadata::has_model_spec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.model_spec_ != nullptr);
  return value;
}
inline const ::tensorflow::serving::ModelSpec& LogMetadata::_internal_model_spec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::serving::ModelSpec* p = _impl_.model_spec_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::serving::ModelSpec&>(::tensorflow::serving::_ModelSpec_default_instance_);
}
inline const ::tensorflow::serving::ModelSpec& LogMetadata::model_spec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.model_spec)
  return _internal_model_spec();
}
inline void LogMetadata::unsafe_arena_set_allocated_model_spec(::tensorflow::serving::ModelSpec* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_spec_);
  }
  _impl_.model_spec_ = reinterpret_cast<::tensorflow::serving::ModelSpec*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.LogMetadata.model_spec)
}
inline ::tensorflow::serving::ModelSpec* LogMetadata::release_model_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::ModelSpec* released = _impl_.model_spec_;
  _impl_.model_spec_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::serving::ModelSpec* LogMetadata::unsafe_arena_release_model_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.LogMetadata.model_spec)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::ModelSpec* temp = _impl_.model_spec_;
  _impl_.model_spec_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::ModelSpec* LogMetadata::_internal_mutable_model_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.model_spec_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::ModelSpec>(GetArena());
    _impl_.model_spec_ = reinterpret_cast<::tensorflow::serving::ModelSpec*>(p);
  }
  return _impl_.model_spec_;
}
inline ::tensorflow::serving::ModelSpec* LogMetadata::mutable_model_spec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::serving::ModelSpec* _msg = _internal_mutable_model_spec();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.LogMetadata.model_spec)
  return _msg;
}
inline void LogMetadata::set_allocated_model_spec(::tensorflow::serving::ModelSpec* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.model_spec_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.model_spec_ = reinterpret_cast<::tensorflow::serving::ModelSpec*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.LogMetadata.model_spec)
}

// .tensorflow.serving.SamplingConfig sampling_config = 2;
inline bool LogMetadata::has_sampling_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sampling_config_ != nullptr);
  return value;
}
inline const ::tensorflow::serving::SamplingConfig& LogMetadata::_internal_sampling_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::serving::SamplingConfig* p = _impl_.sampling_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::serving::SamplingConfig&>(::tensorflow::serving::_SamplingConfig_default_instance_);
}
inline const ::tensorflow::serving::SamplingConfig& LogMetadata::sampling_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.sampling_config)
  return _internal_sampling_config();
}
inline void LogMetadata::unsafe_arena_set_allocated_sampling_config(::tensorflow::serving::SamplingConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sampling_config_);
  }
  _impl_.sampling_config_ = reinterpret_cast<::tensorflow::serving::SamplingConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.LogMetadata.sampling_config)
}
inline ::tensorflow::serving::SamplingConfig* LogMetadata::release_sampling_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::serving::SamplingConfig* released = _impl_.sampling_config_;
  _impl_.sampling_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::serving::SamplingConfig* LogMetadata::unsafe_arena_release_sampling_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.LogMetadata.sampling_config)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tensorflow::serving::SamplingConfig* temp = _impl_.sampling_config_;
  _impl_.sampling_config_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::SamplingConfig* LogMetadata::_internal_mutable_sampling_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sampling_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::SamplingConfig>(GetArena());
    _impl_.sampling_config_ = reinterpret_cast<::tensorflow::serving::SamplingConfig*>(p);
  }
  return _impl_.sampling_config_;
}
inline ::tensorflow::serving::SamplingConfig* LogMetadata::mutable_sampling_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tensorflow::serving::SamplingConfig* _msg = _internal_mutable_sampling_config();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.LogMetadata.sampling_config)
  return _msg;
}
inline void LogMetadata::set_allocated_sampling_config(::tensorflow::serving::SamplingConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sampling_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.sampling_config_ = reinterpret_cast<::tensorflow::serving::SamplingConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.LogMetadata.sampling_config)
}

// repeated string saved_model_tags = 3;
inline int LogMetadata::_internal_saved_model_tags_size() const {
  return _internal_saved_model_tags().size();
}
inline int LogMetadata::saved_model_tags_size() const {
  return _internal_saved_model_tags_size();
}
inline void LogMetadata::clear_saved_model_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.saved_model_tags_.Clear();
}
inline std::string* LogMetadata::add_saved_model_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_saved_model_tags()->Add();
  // @@protoc_insertion_point(field_add_mutable:tensorflow.serving.LogMetadata.saved_model_tags)
  return _s;
}
inline const std::string& LogMetadata::saved_model_tags(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.saved_model_tags)
  return _internal_saved_model_tags().Get(index);
}
inline std::string* LogMetadata::mutable_saved_model_tags(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.LogMetadata.saved_model_tags)
  return _internal_mutable_saved_model_tags()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void LogMetadata::set_saved_model_tags(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_saved_model_tags()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tensorflow.serving.LogMetadata.saved_model_tags)
}
template <typename Arg_, typename... Args_>
inline void LogMetadata::add_saved_model_tags(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_saved_model_tags(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tensorflow.serving.LogMetadata.saved_model_tags)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LogMetadata::saved_model_tags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.serving.LogMetadata.saved_model_tags)
  return _internal_saved_model_tags();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LogMetadata::mutable_saved_model_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.LogMetadata.saved_model_tags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_saved_model_tags();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LogMetadata::_internal_saved_model_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.saved_model_tags_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LogMetadata::_internal_mutable_saved_model_tags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.saved_model_tags_;
}

// int64 timestamp_secs = 4;
inline void LogMetadata::clear_timestamp_secs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_secs_ = ::int64_t{0};
}
inline ::int64_t LogMetadata::timestamp_secs() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.timestamp_secs)
  return _internal_timestamp_secs();
}
inline void LogMetadata::set_timestamp_secs(::int64_t value) {
  _internal_set_timestamp_secs(value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.LogMetadata.timestamp_secs)
}
inline ::int64_t LogMetadata::_internal_timestamp_secs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_secs_;
}
inline void LogMetadata::_internal_set_timestamp_secs(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_secs_ = value;
}

// string dc = 5;
inline void LogMetadata::clear_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dc_.ClearToEmpty();
}
inline const std::string& LogMetadata::dc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.dc)
  return _internal_dc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogMetadata::set_dc(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.serving.LogMetadata.dc)
}
inline std::string* LogMetadata::mutable_dc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dc();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.LogMetadata.dc)
  return _s;
}
inline const std::string& LogMetadata::_internal_dc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dc_.Get();
}
inline void LogMetadata::_internal_set_dc(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dc_.Set(value, GetArena());
}
inline std::string* LogMetadata::_internal_mutable_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dc_.Mutable( GetArena());
}
inline std::string* LogMetadata::release_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.LogMetadata.dc)
  return _impl_.dc_.Release();
}
inline void LogMetadata::set_allocated_dc(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dc_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dc_.IsDefault()) {
    _impl_.dc_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.LogMetadata.dc)
}

// string request_origin = 6;
inline void LogMetadata::clear_request_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_origin_.ClearToEmpty();
}
inline const std::string& LogMetadata::request_origin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.request_origin)
  return _internal_request_origin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogMetadata::set_request_origin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_origin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.serving.LogMetadata.request_origin)
}
inline std::string* LogMetadata::mutable_request_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_origin();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.LogMetadata.request_origin)
  return _s;
}
inline const std::string& LogMetadata::_internal_request_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_origin_.Get();
}
inline void LogMetadata::_internal_set_request_origin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_origin_.Set(value, GetArena());
}
inline std::string* LogMetadata::_internal_mutable_request_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_origin_.Mutable( GetArena());
}
inline std::string* LogMetadata::release_request_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.LogMetadata.request_origin)
  return _impl_.request_origin_.Release();
}
inline void LogMetadata::set_allocated_request_origin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_origin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_origin_.IsDefault()) {
    _impl_.request_origin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.LogMetadata.request_origin)
}

// string request_criticality = 7;
inline void LogMetadata::clear_request_criticality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_criticality_.ClearToEmpty();
}
inline const std::string& LogMetadata::request_criticality() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.LogMetadata.request_criticality)
  return _internal_request_criticality();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogMetadata::set_request_criticality(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_criticality_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.serving.LogMetadata.request_criticality)
}
inline std::string* LogMetadata::mutable_request_criticality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_request_criticality();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.LogMetadata.request_criticality)
  return _s;
}
inline const std::string& LogMetadata::_internal_request_criticality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_criticality_.Get();
}
inline void LogMetadata::_internal_set_request_criticality(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_criticality_.Set(value, GetArena());
}
inline std::string* LogMetadata::_internal_mutable_request_criticality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.request_criticality_.Mutable( GetArena());
}
inline std::string* LogMetadata::release_request_criticality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.LogMetadata.request_criticality)
  return _impl_.request_criticality_.Release();
}
inline void LogMetadata::set_allocated_request_criticality(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_criticality_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.request_criticality_.IsDefault()) {
    _impl_.request_criticality_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.LogMetadata.request_criticality)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_5fserving_2fapis_2flogging_2eproto_2epb_2eh
