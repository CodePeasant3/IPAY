// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/apis/input.proto
// Protobuf C++ Version: 5.29.0

#ifndef tensorflow_5fserving_2fapis_2finput_2eproto_2epb_2eh
#define tensorflow_5fserving_2fapis_2finput_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tensorflow/core/example/example.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fapis_2finput_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5fserving_2fapis_2finput_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_5fserving_2fapis_2finput_2eproto;
namespace tensorflow {
namespace serving {
class ExampleList;
struct ExampleListDefaultTypeInternal;
extern ExampleListDefaultTypeInternal _ExampleList_default_instance_;
class ExampleListWithContext;
struct ExampleListWithContextDefaultTypeInternal;
extern ExampleListWithContextDefaultTypeInternal _ExampleListWithContext_default_instance_;
class Input;
struct InputDefaultTypeInternal;
extern InputDefaultTypeInternal _Input_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace serving {

// ===================================================================


// -------------------------------------------------------------------

class ExampleListWithContext final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.ExampleListWithContext) */ {
 public:
  inline ExampleListWithContext() : ExampleListWithContext(nullptr) {}
  ~ExampleListWithContext() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExampleListWithContext* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExampleListWithContext));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExampleListWithContext(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExampleListWithContext(const ExampleListWithContext& from) : ExampleListWithContext(nullptr, from) {}
  inline ExampleListWithContext(ExampleListWithContext&& from) noexcept
      : ExampleListWithContext(nullptr, std::move(from)) {}
  inline ExampleListWithContext& operator=(const ExampleListWithContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExampleListWithContext& operator=(ExampleListWithContext&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExampleListWithContext& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExampleListWithContext* internal_default_instance() {
    return reinterpret_cast<const ExampleListWithContext*>(
        &_ExampleListWithContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ExampleListWithContext& a, ExampleListWithContext& b) { a.Swap(&b); }
  inline void Swap(ExampleListWithContext* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExampleListWithContext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExampleListWithContext* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExampleListWithContext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExampleListWithContext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExampleListWithContext& from) { ExampleListWithContext::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExampleListWithContext* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.ExampleListWithContext"; }

 protected:
  explicit ExampleListWithContext(::google::protobuf::Arena* arena);
  ExampleListWithContext(::google::protobuf::Arena* arena, const ExampleListWithContext& from);
  ExampleListWithContext(::google::protobuf::Arena* arena, ExampleListWithContext&& from) noexcept
      : ExampleListWithContext(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExamplesFieldNumber = 1,
    kContextFieldNumber = 2,
  };
  // repeated .tensorflow.Example examples = 1;
  int examples_size() const;
  private:
  int _internal_examples_size() const;

  public:
  void clear_examples() ;
  ::tensorflow::Example* mutable_examples(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::Example>* mutable_examples();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>& _internal_examples() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::Example>* _internal_mutable_examples();
  public:
  const ::tensorflow::Example& examples(int index) const;
  ::tensorflow::Example* add_examples();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>& examples() const;
  // .tensorflow.Example context = 2;
  bool has_context() const;
  void clear_context() ;
  const ::tensorflow::Example& context() const;
  PROTOBUF_NODISCARD ::tensorflow::Example* release_context();
  ::tensorflow::Example* mutable_context();
  void set_allocated_context(::tensorflow::Example* value);
  void unsafe_arena_set_allocated_context(::tensorflow::Example* value);
  ::tensorflow::Example* unsafe_arena_release_context();

  private:
  const ::tensorflow::Example& _internal_context() const;
  ::tensorflow::Example* _internal_mutable_context();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.serving.ExampleListWithContext)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExampleListWithContext& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tensorflow::Example > examples_;
    ::tensorflow::Example* context_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2finput_2eproto;
};
// -------------------------------------------------------------------

class ExampleList final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.ExampleList) */ {
 public:
  inline ExampleList() : ExampleList(nullptr) {}
  ~ExampleList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExampleList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExampleList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExampleList(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExampleList(const ExampleList& from) : ExampleList(nullptr, from) {}
  inline ExampleList(ExampleList&& from) noexcept
      : ExampleList(nullptr, std::move(from)) {}
  inline ExampleList& operator=(const ExampleList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExampleList& operator=(ExampleList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExampleList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExampleList* internal_default_instance() {
    return reinterpret_cast<const ExampleList*>(
        &_ExampleList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ExampleList& a, ExampleList& b) { a.Swap(&b); }
  inline void Swap(ExampleList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExampleList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExampleList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExampleList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExampleList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExampleList& from) { ExampleList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExampleList* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.ExampleList"; }

 protected:
  explicit ExampleList(::google::protobuf::Arena* arena);
  ExampleList(::google::protobuf::Arena* arena, const ExampleList& from);
  ExampleList(::google::protobuf::Arena* arena, ExampleList&& from) noexcept
      : ExampleList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExamplesFieldNumber = 1,
  };
  // repeated .tensorflow.Example examples = 1;
  int examples_size() const;
  private:
  int _internal_examples_size() const;

  public:
  void clear_examples() ;
  ::tensorflow::Example* mutable_examples(int index);
  ::google::protobuf::RepeatedPtrField<::tensorflow::Example>* mutable_examples();

  private:
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>& _internal_examples() const;
  ::google::protobuf::RepeatedPtrField<::tensorflow::Example>* _internal_mutable_examples();
  public:
  const ::tensorflow::Example& examples(int index) const;
  ::tensorflow::Example* add_examples();
  const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>& examples() const;
  // @@protoc_insertion_point(class_scope:tensorflow.serving.ExampleList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExampleList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tensorflow::Example > examples_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2finput_2eproto;
};
// -------------------------------------------------------------------

class Input final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.Input) */ {
 public:
  inline Input() : Input(nullptr) {}
  ~Input() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Input* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Input));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Input(
      ::google::protobuf::internal::ConstantInitialized);

  inline Input(const Input& from) : Input(nullptr, from) {}
  inline Input(Input&& from) noexcept
      : Input(nullptr, std::move(from)) {}
  inline Input& operator=(const Input& from) {
    CopyFrom(from);
    return *this;
  }
  inline Input& operator=(Input&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Input& default_instance() {
    return *internal_default_instance();
  }
  enum KindCase {
    kExampleList = 1,
    kExampleListWithContext = 2,
    KIND_NOT_SET = 0,
  };
  static inline const Input* internal_default_instance() {
    return reinterpret_cast<const Input*>(
        &_Input_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Input& a, Input& b) { a.Swap(&b); }
  inline void Swap(Input* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Input* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Input* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Input>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Input& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Input& from) { Input::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Input* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.Input"; }

 protected:
  explicit Input(::google::protobuf::Arena* arena);
  Input(::google::protobuf::Arena* arena, const Input& from);
  Input(::google::protobuf::Arena* arena, Input&& from) noexcept
      : Input(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExampleListFieldNumber = 1,
    kExampleListWithContextFieldNumber = 2,
  };
  // .tensorflow.serving.ExampleList example_list = 1 [lazy = true];
  bool has_example_list() const;
  private:
  bool _internal_has_example_list() const;

  public:
  void clear_example_list() ;
  const ::tensorflow::serving::ExampleList& example_list() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::ExampleList* release_example_list();
  ::tensorflow::serving::ExampleList* mutable_example_list();
  void set_allocated_example_list(::tensorflow::serving::ExampleList* value);
  void unsafe_arena_set_allocated_example_list(::tensorflow::serving::ExampleList* value);
  ::tensorflow::serving::ExampleList* unsafe_arena_release_example_list();

  private:
  const ::tensorflow::serving::ExampleList& _internal_example_list() const;
  ::tensorflow::serving::ExampleList* _internal_mutable_example_list();

  public:
  // .tensorflow.serving.ExampleListWithContext example_list_with_context = 2 [lazy = true];
  bool has_example_list_with_context() const;
  private:
  bool _internal_has_example_list_with_context() const;

  public:
  void clear_example_list_with_context() ;
  const ::tensorflow::serving::ExampleListWithContext& example_list_with_context() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::ExampleListWithContext* release_example_list_with_context();
  ::tensorflow::serving::ExampleListWithContext* mutable_example_list_with_context();
  void set_allocated_example_list_with_context(::tensorflow::serving::ExampleListWithContext* value);
  void unsafe_arena_set_allocated_example_list_with_context(::tensorflow::serving::ExampleListWithContext* value);
  ::tensorflow::serving::ExampleListWithContext* unsafe_arena_release_example_list_with_context();

  private:
  const ::tensorflow::serving::ExampleListWithContext& _internal_example_list_with_context() const;
  ::tensorflow::serving::ExampleListWithContext* _internal_mutable_example_list_with_context();

  public:
  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.serving.Input)
 private:
  class _Internal;
  void set_has_example_list();
  void set_has_example_list_with_context();
  inline bool has_kind() const;
  inline void clear_has_kind();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Input& from_msg);
    union KindUnion {
      constexpr KindUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tensorflow::serving::ExampleList* example_list_;
      ::tensorflow::serving::ExampleListWithContext* example_list_with_context_;
    } kind_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fapis_2finput_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExampleList

// repeated .tensorflow.Example examples = 1;
inline int ExampleList::_internal_examples_size() const {
  return _internal_examples().size();
}
inline int ExampleList::examples_size() const {
  return _internal_examples_size();
}
inline ::tensorflow::Example* ExampleList::mutable_examples(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ExampleList.examples)
  return _internal_mutable_examples()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Example>* ExampleList::mutable_examples()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.ExampleList.examples)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_examples();
}
inline const ::tensorflow::Example& ExampleList::examples(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ExampleList.examples)
  return _internal_examples().Get(index);
}
inline ::tensorflow::Example* ExampleList::add_examples() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::Example* _add = _internal_mutable_examples()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.serving.ExampleList.examples)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>& ExampleList::examples() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.serving.ExampleList.examples)
  return _internal_examples();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>&
ExampleList::_internal_examples() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.examples_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Example>*
ExampleList::_internal_mutable_examples() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.examples_;
}

// -------------------------------------------------------------------

// ExampleListWithContext

// repeated .tensorflow.Example examples = 1;
inline int ExampleListWithContext::_internal_examples_size() const {
  return _internal_examples().size();
}
inline int ExampleListWithContext::examples_size() const {
  return _internal_examples_size();
}
inline ::tensorflow::Example* ExampleListWithContext::mutable_examples(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ExampleListWithContext.examples)
  return _internal_mutable_examples()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Example>* ExampleListWithContext::mutable_examples()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.ExampleListWithContext.examples)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_examples();
}
inline const ::tensorflow::Example& ExampleListWithContext::examples(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ExampleListWithContext.examples)
  return _internal_examples().Get(index);
}
inline ::tensorflow::Example* ExampleListWithContext::add_examples() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tensorflow::Example* _add = _internal_mutable_examples()->Add();
  // @@protoc_insertion_point(field_add:tensorflow.serving.ExampleListWithContext.examples)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>& ExampleListWithContext::examples() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tensorflow.serving.ExampleListWithContext.examples)
  return _internal_examples();
}
inline const ::google::protobuf::RepeatedPtrField<::tensorflow::Example>&
ExampleListWithContext::_internal_examples() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.examples_;
}
inline ::google::protobuf::RepeatedPtrField<::tensorflow::Example>*
ExampleListWithContext::_internal_mutable_examples() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.examples_;
}

// .tensorflow.Example context = 2;
inline bool ExampleListWithContext::has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_ != nullptr);
  return value;
}
inline const ::tensorflow::Example& ExampleListWithContext::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::Example* p = _impl_.context_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::Example&>(::tensorflow::_Example_default_instance_);
}
inline const ::tensorflow::Example& ExampleListWithContext::context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ExampleListWithContext.context)
  return _internal_context();
}
inline void ExampleListWithContext::unsafe_arena_set_allocated_context(::tensorflow::Example* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }
  _impl_.context_ = reinterpret_cast<::tensorflow::Example*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ExampleListWithContext.context)
}
inline ::tensorflow::Example* ExampleListWithContext::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::Example* released = _impl_.context_;
  _impl_.context_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::Example* ExampleListWithContext::unsafe_arena_release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.ExampleListWithContext.context)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::Example* temp = _impl_.context_;
  _impl_.context_ = nullptr;
  return temp;
}
inline ::tensorflow::Example* ExampleListWithContext::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.context_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::Example>(GetArena());
    _impl_.context_ = reinterpret_cast<::tensorflow::Example*>(p);
  }
  return _impl_.context_;
}
inline ::tensorflow::Example* ExampleListWithContext::mutable_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::Example* _msg = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ExampleListWithContext.context)
  return _msg;
}
inline void ExampleListWithContext::set_allocated_context(::tensorflow::Example* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.context_ = reinterpret_cast<::tensorflow::Example*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ExampleListWithContext.context)
}

// -------------------------------------------------------------------

// Input

// .tensorflow.serving.ExampleList example_list = 1 [lazy = true];
inline bool Input::has_example_list() const {
  return kind_case() == kExampleList;
}
inline bool Input::_internal_has_example_list() const {
  return kind_case() == kExampleList;
}
inline void Input::set_has_example_list() {
  _impl_._oneof_case_[0] = kExampleList;
}
inline void Input::clear_example_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kExampleList) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.example_list_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.example_list_);
    }
    clear_has_kind();
  }
}
inline ::tensorflow::serving::ExampleList* Input::release_example_list() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Input.example_list)
  if (kind_case() == kExampleList) {
    clear_has_kind();
    auto* temp = _impl_.kind_.example_list_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.example_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::serving::ExampleList& Input::_internal_example_list() const {
  return kind_case() == kExampleList ? *_impl_.kind_.example_list_ : reinterpret_cast<::tensorflow::serving::ExampleList&>(::tensorflow::serving::_ExampleList_default_instance_);
}
inline const ::tensorflow::serving::ExampleList& Input::example_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Input.example_list)
  return _internal_example_list();
}
inline ::tensorflow::serving::ExampleList* Input::unsafe_arena_release_example_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.Input.example_list)
  if (kind_case() == kExampleList) {
    clear_has_kind();
    auto* temp = _impl_.kind_.example_list_;
    _impl_.kind_.example_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Input::unsafe_arena_set_allocated_example_list(::tensorflow::serving::ExampleList* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_example_list();
    _impl_.kind_.example_list_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.Input.example_list)
}
inline ::tensorflow::serving::ExampleList* Input::_internal_mutable_example_list() {
  if (kind_case() != kExampleList) {
    clear_kind();
    set_has_example_list();
    _impl_.kind_.example_list_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::ExampleList>(GetArena());
  }
  return _impl_.kind_.example_list_;
}
inline ::tensorflow::serving::ExampleList* Input::mutable_example_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::serving::ExampleList* _msg = _internal_mutable_example_list();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Input.example_list)
  return _msg;
}

// .tensorflow.serving.ExampleListWithContext example_list_with_context = 2 [lazy = true];
inline bool Input::has_example_list_with_context() const {
  return kind_case() == kExampleListWithContext;
}
inline bool Input::_internal_has_example_list_with_context() const {
  return kind_case() == kExampleListWithContext;
}
inline void Input::set_has_example_list_with_context() {
  _impl_._oneof_case_[0] = kExampleListWithContext;
}
inline void Input::clear_example_list_with_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kExampleListWithContext) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.example_list_with_context_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.example_list_with_context_);
    }
    clear_has_kind();
  }
}
inline ::tensorflow::serving::ExampleListWithContext* Input::release_example_list_with_context() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Input.example_list_with_context)
  if (kind_case() == kExampleListWithContext) {
    clear_has_kind();
    auto* temp = _impl_.kind_.example_list_with_context_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.kind_.example_list_with_context_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tensorflow::serving::ExampleListWithContext& Input::_internal_example_list_with_context() const {
  return kind_case() == kExampleListWithContext ? *_impl_.kind_.example_list_with_context_ : reinterpret_cast<::tensorflow::serving::ExampleListWithContext&>(::tensorflow::serving::_ExampleListWithContext_default_instance_);
}
inline const ::tensorflow::serving::ExampleListWithContext& Input::example_list_with_context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Input.example_list_with_context)
  return _internal_example_list_with_context();
}
inline ::tensorflow::serving::ExampleListWithContext* Input::unsafe_arena_release_example_list_with_context() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.Input.example_list_with_context)
  if (kind_case() == kExampleListWithContext) {
    clear_has_kind();
    auto* temp = _impl_.kind_.example_list_with_context_;
    _impl_.kind_.example_list_with_context_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Input::unsafe_arena_set_allocated_example_list_with_context(::tensorflow::serving::ExampleListWithContext* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_kind();
  if (value) {
    set_has_example_list_with_context();
    _impl_.kind_.example_list_with_context_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.Input.example_list_with_context)
}
inline ::tensorflow::serving::ExampleListWithContext* Input::_internal_mutable_example_list_with_context() {
  if (kind_case() != kExampleListWithContext) {
    clear_kind();
    set_has_example_list_with_context();
    _impl_.kind_.example_list_with_context_ =
        ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::ExampleListWithContext>(GetArena());
  }
  return _impl_.kind_.example_list_with_context_;
}
inline ::tensorflow::serving::ExampleListWithContext* Input::mutable_example_list_with_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tensorflow::serving::ExampleListWithContext* _msg = _internal_mutable_example_list_with_context();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Input.example_list_with_context)
  return _msg;
}

inline bool Input::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void Input::clear_has_kind() {
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}
inline Input::KindCase Input::kind_case() const {
  return Input::KindCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_5fserving_2fapis_2finput_2eproto_2epb_2eh
