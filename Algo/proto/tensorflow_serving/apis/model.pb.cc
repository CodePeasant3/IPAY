// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/apis/model.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow_serving/apis/model.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
namespace serving {

inline constexpr ModelSpec::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_choice_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ModelSpec::ModelSpec(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelSpecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelSpecDefaultTypeInternal() {}
  union {
    ModelSpec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelSpecDefaultTypeInternal _ModelSpec_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fmodel_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5fserving_2fapis_2fmodel_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_5fserving_2fapis_2fmodel_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelSpec, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelSpec, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelSpec, _impl_.name_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelSpec, _impl_.signature_name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelSpec, _impl_.version_choice_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::serving::ModelSpec)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::serving::_ModelSpec_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5fserving_2fapis_2fmodel_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#tensorflow_serving/apis/model.proto\022\022t"
    "ensorflow.serving\032\036google/protobuf/wrapp"
    "ers.proto\"\214\001\n\tModelSpec\022\014\n\004name\030\001 \001(\t\022.\n"
    "\007version\030\002 \001(\0132\033.google.protobuf.Int64Va"
    "lueH\000\022\027\n\rversion_label\030\004 \001(\tH\000\022\026\n\016signat"
    "ure_name\030\003 \001(\tB\020\n\016version_choiceB\003\370\001\001b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto = {
    false,
    false,
    245,
    descriptor_table_protodef_tensorflow_5fserving_2fapis_2fmodel_2eproto,
    "tensorflow_serving/apis/model.proto",
    &descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto_once,
    descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5fserving_2fapis_2fmodel_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fmodel_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fapis_2fmodel_2eproto,
};
namespace tensorflow {
namespace serving {
// ===================================================================

class ModelSpec::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelSpec, _impl_._oneof_case_);
};

void ModelSpec::set_allocated_version(::google::protobuf::Int64Value* version) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_version_choice();
  if (version) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(version)->GetArena();
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(message_arena, version, submessage_arena);
    }
    set_has_version();
    _impl_.version_choice_.version_ = version;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelSpec.version)
}
void ModelSpec::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (version_choice_case() == kVersion) {
    if (GetArena() == nullptr) {
      delete _impl_.version_choice_.version_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.version_choice_.version_);
    }
    clear_has_version_choice();
  }
}
ModelSpec::ModelSpec(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelSpec)
}
inline PROTOBUF_NDEBUG_INLINE ModelSpec::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::ModelSpec& from_msg)
      : name_(arena, from.name_),
        signature_name_(arena, from.signature_name_),
        version_choice_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ModelSpec::ModelSpec(
    ::google::protobuf::Arena* arena,
    const ModelSpec& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelSpec* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (version_choice_case()) {
    case VERSION_CHOICE_NOT_SET:
      break;
      case kVersion:
        _impl_.version_choice_.version_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::Int64Value>(arena, *from._impl_.version_choice_.version_);
        break;
      case kVersionLabel:
        new (&_impl_.version_choice_.version_label_) decltype(_impl_.version_choice_.version_label_){arena, from._impl_.version_choice_.version_label_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelSpec)
}
inline PROTOBUF_NDEBUG_INLINE ModelSpec::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        signature_name_(arena),
        version_choice_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ModelSpec::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModelSpec::~ModelSpec() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelSpec)
  SharedDtor(*this);
}
inline void ModelSpec::SharedDtor(MessageLite& self) {
  ModelSpec& this_ = static_cast<ModelSpec&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.signature_name_.Destroy();
  if (this_.has_version_choice()) {
    this_.clear_version_choice();
  }
  this_._impl_.~Impl_();
}

void ModelSpec::clear_version_choice() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.serving.ModelSpec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (version_choice_case()) {
    case kVersion: {
      if (GetArena() == nullptr) {
        delete _impl_.version_choice_.version_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.version_choice_.version_);
      }
      break;
    }
    case kVersionLabel: {
      _impl_.version_choice_.version_label_.Destroy();
      break;
    }
    case VERSION_CHOICE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VERSION_CHOICE_NOT_SET;
}


inline void* ModelSpec::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModelSpec(arena);
}
constexpr auto ModelSpec::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModelSpec),
                                            alignof(ModelSpec));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModelSpec::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModelSpec_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModelSpec::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModelSpec>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModelSpec::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModelSpec>(), &ModelSpec::ByteSizeLong,
            &ModelSpec::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_._cached_size_),
        false,
    },
    &ModelSpec::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModelSpec::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 68, 2> ModelSpec::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::ModelSpec>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string signature_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_.signature_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Int64Value version = 2;
    {PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_.version_choice_.version_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string signature_name = 3;
    {PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_.signature_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version_label = 4;
    {PROTOBUF_FIELD_OFFSET(ModelSpec, _impl_.version_choice_.version_label_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
  }}, {{
    "\34\4\0\16\15\0\0\0"
    "tensorflow.serving.ModelSpec"
    "name"
    "signature_name"
    "version_label"
  }},
};

PROTOBUF_NOINLINE void ModelSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelSpec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.signature_name_.ClearToEmpty();
  clear_version_choice();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModelSpec::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModelSpec& this_ = static_cast<const ModelSpec&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModelSpec::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModelSpec& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelSpec)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelSpec.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .google.protobuf.Int64Value version = 2;
          if (this_.version_choice_case() == kVersion) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.version_choice_.version_, this_._impl_.version_choice_.version_->GetCachedSize(), target,
                stream);
          }

          // string signature_name = 3;
          if (!this_._internal_signature_name().empty()) {
            const std::string& _s = this_._internal_signature_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelSpec.signature_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string version_label = 4;
          if (this_.version_choice_case() == kVersionLabel) {
            const std::string& _s = this_._internal_version_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelSpec.version_label");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelSpec)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModelSpec::ByteSizeLong(const MessageLite& base) {
          const ModelSpec& this_ = static_cast<const ModelSpec&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModelSpec::ByteSizeLong() const {
          const ModelSpec& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelSpec)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string signature_name = 3;
            if (!this_._internal_signature_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_signature_name());
            }
          }
          switch (this_.version_choice_case()) {
            // .google.protobuf.Int64Value version = 2;
            case kVersion: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.version_choice_.version_);
              break;
            }
            // string version_label = 4;
            case kVersionLabel: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version_label());
              break;
            }
            case VERSION_CHOICE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModelSpec::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelSpec*>(&to_msg);
  auto& from = static_cast<const ModelSpec&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelSpec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_signature_name().empty()) {
    _this->_internal_set_signature_name(from._internal_signature_name());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_version_choice();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kVersion: {
        if (oneof_needs_init) {
          _this->_impl_.version_choice_.version_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::Int64Value>(arena, *from._impl_.version_choice_.version_);
        } else {
          _this->_impl_.version_choice_.version_->MergeFrom(from._internal_version());
        }
        break;
      }
      case kVersionLabel: {
        if (oneof_needs_init) {
          _this->_impl_.version_choice_.version_label_.InitDefault();
        }
        _this->_impl_.version_choice_.version_label_.Set(from._internal_version_label(), arena);
        break;
      }
      case VERSION_CHOICE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModelSpec::CopyFrom(const ModelSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelSpec::InternalSwap(ModelSpec* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_name_, &other->_impl_.signature_name_, arena);
  swap(_impl_.version_choice_, other->_impl_.version_choice_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ModelSpec::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
