// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/apis/prediction_log.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow_serving/apis/prediction_log.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
namespace serving {

inline constexpr PredictStreamedLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_{},
        response_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PredictStreamedLog::PredictStreamedLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PredictStreamedLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictStreamedLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictStreamedLogDefaultTypeInternal() {}
  union {
    PredictStreamedLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictStreamedLogDefaultTypeInternal _PredictStreamedLog_default_instance_;

inline constexpr PredictLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PredictLog::PredictLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PredictLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictLogDefaultTypeInternal() {}
  union {
    PredictLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictLogDefaultTypeInternal _PredictLog_default_instance_;

inline constexpr RegressLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RegressLog::RegressLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegressLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegressLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegressLogDefaultTypeInternal() {}
  union {
    RegressLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegressLogDefaultTypeInternal _RegressLog_default_instance_;

inline constexpr MultiInferenceLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MultiInferenceLog::MultiInferenceLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiInferenceLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiInferenceLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiInferenceLogDefaultTypeInternal() {}
  union {
    MultiInferenceLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiInferenceLogDefaultTypeInternal _MultiInferenceLog_default_instance_;

inline constexpr ClassifyLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ClassifyLog::ClassifyLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClassifyLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassifyLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassifyLogDefaultTypeInternal() {}
  union {
    ClassifyLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassifyLogDefaultTypeInternal _ClassifyLog_default_instance_;

inline constexpr SessionRunLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SessionRunLog::SessionRunLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SessionRunLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionRunLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionRunLogDefaultTypeInternal() {}
  union {
    SessionRunLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionRunLogDefaultTypeInternal _SessionRunLog_default_instance_;

inline constexpr PredictionLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        log_metadata_{nullptr},
        log_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PredictionLog::PredictionLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PredictionLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PredictionLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PredictionLogDefaultTypeInternal() {}
  union {
    PredictionLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PredictionLogDefaultTypeInternal _PredictionLog_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ClassifyLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ClassifyLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ClassifyLog, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ClassifyLog, _impl_.response_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressLog, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressLog, _impl_.response_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictLog, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictLog, _impl_.response_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictStreamedLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictStreamedLog, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictStreamedLog, _impl_.response_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::MultiInferenceLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::MultiInferenceLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::MultiInferenceLog, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::MultiInferenceLog, _impl_.response_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SessionRunLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SessionRunLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SessionRunLog, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SessionRunLog, _impl_.response_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictionLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictionLog, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictionLog, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictionLog, _impl_.log_metadata_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictionLog, _impl_.log_type_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::tensorflow::serving::ClassifyLog)},
        {12, 22, -1, sizeof(::tensorflow::serving::RegressLog)},
        {24, 34, -1, sizeof(::tensorflow::serving::PredictLog)},
        {36, -1, -1, sizeof(::tensorflow::serving::PredictStreamedLog)},
        {46, 56, -1, sizeof(::tensorflow::serving::MultiInferenceLog)},
        {58, 68, -1, sizeof(::tensorflow::serving::SessionRunLog)},
        {70, 86, -1, sizeof(::tensorflow::serving::PredictionLog)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::serving::_ClassifyLog_default_instance_._instance,
    &::tensorflow::serving::_RegressLog_default_instance_._instance,
    &::tensorflow::serving::_PredictLog_default_instance_._instance,
    &::tensorflow::serving::_PredictStreamedLog_default_instance_._instance,
    &::tensorflow::serving::_MultiInferenceLog_default_instance_._instance,
    &::tensorflow::serving::_SessionRunLog_default_instance_._instance,
    &::tensorflow::serving::_PredictionLog_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n,tensorflow_serving/apis/prediction_log"
    ".proto\022\022tensorflow.serving\032,tensorflow_s"
    "erving/apis/classification.proto\032\'tensor"
    "flow_serving/apis/inference.proto\032%tenso"
    "rflow_serving/apis/logging.proto\032%tensor"
    "flow_serving/apis/predict.proto\032(tensorf"
    "low_serving/apis/regression.proto\032-tenso"
    "rflow_serving/apis/session_service.proto"
    "\"\207\001\n\013ClassifyLog\022:\n\007request\030\001 \001(\0132).tens"
    "orflow.serving.ClassificationRequest\022<\n\010"
    "response\030\002 \001(\0132*.tensorflow.serving.Clas"
    "sificationResponse\"~\n\nRegressLog\0226\n\007requ"
    "est\030\001 \001(\0132%.tensorflow.serving.Regressio"
    "nRequest\0228\n\010response\030\002 \001(\0132&.tensorflow."
    "serving.RegressionResponse\"x\n\nPredictLog"
    "\0223\n\007request\030\001 \001(\0132\".tensorflow.serving.P"
    "redictRequest\0225\n\010response\030\002 \001(\0132#.tensor"
    "flow.serving.PredictResponse\"\200\001\n\022Predict"
    "StreamedLog\0223\n\007request\030\001 \003(\0132\".tensorflo"
    "w.serving.PredictRequest\0225\n\010response\030\002 \003"
    "(\0132#.tensorflow.serving.PredictResponse\""
    "\215\001\n\021MultiInferenceLog\022:\n\007request\030\001 \001(\0132)"
    ".tensorflow.serving.MultiInferenceReques"
    "t\022<\n\010response\030\002 \001(\0132*.tensorflow.serving"
    ".MultiInferenceResponse\"\201\001\n\rSessionRunLo"
    "g\0226\n\007request\030\001 \001(\0132%.tensorflow.serving."
    "SessionRunRequest\0228\n\010response\030\002 \001(\0132&.te"
    "nsorflow.serving.SessionRunResponse\"\305\003\n\r"
    "PredictionLog\0225\n\014log_metadata\030\001 \001(\0132\037.te"
    "nsorflow.serving.LogMetadata\0227\n\014classify"
    "_log\030\002 \001(\0132\037.tensorflow.serving.Classify"
    "LogH\000\0225\n\013regress_log\030\003 \001(\0132\036.tensorflow."
    "serving.RegressLogH\000\0225\n\013predict_log\030\006 \001("
    "\0132\036.tensorflow.serving.PredictLogH\000\022F\n\024p"
    "redict_streamed_log\030\007 \001(\0132&.tensorflow.s"
    "erving.PredictStreamedLogH\000\022D\n\023multi_inf"
    "erence_log\030\004 \001(\0132%.tensorflow.serving.Mu"
    "ltiInferenceLogH\000\022<\n\017session_run_log\030\005 \001"
    "(\0132!.tensorflow.serving.SessionRunLogH\000B"
    "\n\n\010log_typeB\003\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto_deps[6] =
    {
        &::descriptor_table_tensorflow_5fserving_2fapis_2fclassification_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fapis_2finference_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fapis_2flogging_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fapis_2fpredict_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fapis_2fsession_5fservice_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto = {
    false,
    false,
    1584,
    descriptor_table_protodef_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    "tensorflow_serving/apis/prediction_log.proto",
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto_once,
    descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto_deps,
    6,
    7,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
};
namespace tensorflow {
namespace serving {
// ===================================================================

class ClassifyLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ClassifyLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_._has_bits_);
};

void ClassifyLog::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ClassifyLog::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ClassifyLog::ClassifyLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ClassifyLog)
}
inline PROTOBUF_NDEBUG_INLINE ClassifyLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::ClassifyLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClassifyLog::ClassifyLog(
    ::google::protobuf::Arena* arena,
    const ClassifyLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClassifyLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ClassificationRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ClassificationResponse>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ClassifyLog)
}
inline PROTOBUF_NDEBUG_INLINE ClassifyLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClassifyLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, request_) +
               sizeof(Impl_::response_));
}
ClassifyLog::~ClassifyLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ClassifyLog)
  SharedDtor(*this);
}
inline void ClassifyLog::SharedDtor(MessageLite& self) {
  ClassifyLog& this_ = static_cast<ClassifyLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.request_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* ClassifyLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClassifyLog(arena);
}
constexpr auto ClassifyLog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClassifyLog),
                                            alignof(ClassifyLog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClassifyLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClassifyLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClassifyLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClassifyLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClassifyLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClassifyLog>(), &ClassifyLog::ByteSizeLong,
            &ClassifyLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_._cached_size_),
        false,
    },
    &ClassifyLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClassifyLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ClassifyLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::ClassifyLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.ClassificationResponse response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_.response_)}},
    // .tensorflow.serving.ClassificationRequest request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.ClassificationRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.ClassificationResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::ClassificationRequest>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::ClassificationResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ClassifyLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ClassifyLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClassifyLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClassifyLog& this_ = static_cast<const ClassifyLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClassifyLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClassifyLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ClassifyLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.ClassificationRequest request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.ClassificationResponse response = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ClassifyLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClassifyLog::ByteSizeLong(const MessageLite& base) {
          const ClassifyLog& this_ = static_cast<const ClassifyLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClassifyLog::ByteSizeLong() const {
          const ClassifyLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ClassifyLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.ClassificationRequest request = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
            // .tensorflow.serving.ClassificationResponse response = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClassifyLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClassifyLog*>(&to_msg);
  auto& from = static_cast<const ClassifyLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ClassifyLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.request_ != nullptr);
      if (_this->_impl_.request_ == nullptr) {
        _this->_impl_.request_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ClassificationRequest>(arena, *from._impl_.request_);
      } else {
        _this->_impl_.request_->MergeFrom(*from._impl_.request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ClassificationResponse>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClassifyLog::CopyFrom(const ClassifyLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ClassifyLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClassifyLog::InternalSwap(ClassifyLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_.response_)
      + sizeof(ClassifyLog::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(ClassifyLog, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::google::protobuf::Metadata ClassifyLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegressLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RegressLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RegressLog, _impl_._has_bits_);
};

void RegressLog::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RegressLog::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RegressLog::RegressLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressLog)
}
inline PROTOBUF_NDEBUG_INLINE RegressLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::RegressLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RegressLog::RegressLog(
    ::google::protobuf::Arena* arena,
    const RegressLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegressLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::RegressionRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::RegressionResponse>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressLog)
}
inline PROTOBUF_NDEBUG_INLINE RegressLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RegressLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, request_) +
               sizeof(Impl_::response_));
}
RegressLog::~RegressLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressLog)
  SharedDtor(*this);
}
inline void RegressLog::SharedDtor(MessageLite& self) {
  RegressLog& this_ = static_cast<RegressLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.request_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* RegressLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RegressLog(arena);
}
constexpr auto RegressLog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RegressLog),
                                            alignof(RegressLog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RegressLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RegressLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RegressLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RegressLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RegressLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RegressLog>(), &RegressLog::ByteSizeLong,
            &RegressLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RegressLog, _impl_._cached_size_),
        false,
    },
    &RegressLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RegressLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RegressLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RegressLog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::RegressLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.RegressionResponse response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RegressLog, _impl_.response_)}},
    // .tensorflow.serving.RegressionRequest request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RegressLog, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.RegressionRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(RegressLog, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.RegressionResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(RegressLog, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::RegressionRequest>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::RegressionResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RegressLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegressLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegressLog& this_ = static_cast<const RegressLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegressLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegressLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.RegressionRequest request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.RegressionResponse response = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegressLog::ByteSizeLong(const MessageLite& base) {
          const RegressLog& this_ = static_cast<const RegressLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegressLog::ByteSizeLong() const {
          const RegressLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.RegressionRequest request = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
            // .tensorflow.serving.RegressionResponse response = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegressLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegressLog*>(&to_msg);
  auto& from = static_cast<const RegressLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.request_ != nullptr);
      if (_this->_impl_.request_ == nullptr) {
        _this->_impl_.request_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::RegressionRequest>(arena, *from._impl_.request_);
      } else {
        _this->_impl_.request_->MergeFrom(*from._impl_.request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::RegressionResponse>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegressLog::CopyFrom(const RegressLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegressLog::InternalSwap(RegressLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegressLog, _impl_.response_)
      + sizeof(RegressLog::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(RegressLog, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::google::protobuf::Metadata RegressLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PredictLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PredictLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PredictLog, _impl_._has_bits_);
};

void PredictLog::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PredictLog::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PredictLog::PredictLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PredictLog)
}
inline PROTOBUF_NDEBUG_INLINE PredictLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::PredictLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PredictLog::PredictLog(
    ::google::protobuf::Arena* arena,
    const PredictLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PredictLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictResponse>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PredictLog)
}
inline PROTOBUF_NDEBUG_INLINE PredictLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PredictLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, request_) +
               sizeof(Impl_::response_));
}
PredictLog::~PredictLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PredictLog)
  SharedDtor(*this);
}
inline void PredictLog::SharedDtor(MessageLite& self) {
  PredictLog& this_ = static_cast<PredictLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.request_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* PredictLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PredictLog(arena);
}
constexpr auto PredictLog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PredictLog),
                                            alignof(PredictLog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PredictLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PredictLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PredictLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PredictLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PredictLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PredictLog>(), &PredictLog::ByteSizeLong,
            &PredictLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PredictLog, _impl_._cached_size_),
        false,
    },
    &PredictLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PredictLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PredictLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PredictLog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::PredictLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.PredictResponse response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PredictLog, _impl_.response_)}},
    // .tensorflow.serving.PredictRequest request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PredictLog, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.PredictRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(PredictLog, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.PredictResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(PredictLog, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::PredictRequest>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::PredictResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PredictLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PredictLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PredictLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PredictLog& this_ = static_cast<const PredictLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PredictLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PredictLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PredictLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.PredictRequest request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.PredictResponse response = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PredictLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PredictLog::ByteSizeLong(const MessageLite& base) {
          const PredictLog& this_ = static_cast<const PredictLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PredictLog::ByteSizeLong() const {
          const PredictLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PredictLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.PredictRequest request = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
            // .tensorflow.serving.PredictResponse response = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PredictLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PredictLog*>(&to_msg);
  auto& from = static_cast<const PredictLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PredictLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.request_ != nullptr);
      if (_this->_impl_.request_ == nullptr) {
        _this->_impl_.request_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictRequest>(arena, *from._impl_.request_);
      } else {
        _this->_impl_.request_->MergeFrom(*from._impl_.request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictResponse>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PredictLog::CopyFrom(const PredictLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PredictLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PredictLog::InternalSwap(PredictLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PredictLog, _impl_.response_)
      + sizeof(PredictLog::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(PredictLog, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::google::protobuf::Metadata PredictLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PredictStreamedLog::_Internal {
 public:
};

void PredictStreamedLog::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_.Clear();
}
void PredictStreamedLog::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.response_.Clear();
}
PredictStreamedLog::PredictStreamedLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PredictStreamedLog)
}
inline PROTOBUF_NDEBUG_INLINE PredictStreamedLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::PredictStreamedLog& from_msg)
      : request_{visibility, arena, from.request_},
        response_{visibility, arena, from.response_},
        _cached_size_{0} {}

PredictStreamedLog::PredictStreamedLog(
    ::google::protobuf::Arena* arena,
    const PredictStreamedLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PredictStreamedLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PredictStreamedLog)
}
inline PROTOBUF_NDEBUG_INLINE PredictStreamedLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_{visibility, arena},
        response_{visibility, arena},
        _cached_size_{0} {}

inline void PredictStreamedLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PredictStreamedLog::~PredictStreamedLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PredictStreamedLog)
  SharedDtor(*this);
}
inline void PredictStreamedLog::SharedDtor(MessageLite& self) {
  PredictStreamedLog& this_ = static_cast<PredictStreamedLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PredictStreamedLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PredictStreamedLog(arena);
}
constexpr auto PredictStreamedLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_.request_) +
          decltype(PredictStreamedLog::_impl_.request_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_.response_) +
          decltype(PredictStreamedLog::_impl_.response_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PredictStreamedLog), alignof(PredictStreamedLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PredictStreamedLog::PlacementNew_,
                                 sizeof(PredictStreamedLog),
                                 alignof(PredictStreamedLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PredictStreamedLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PredictStreamedLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PredictStreamedLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PredictStreamedLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PredictStreamedLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PredictStreamedLog>(), &PredictStreamedLog::ByteSizeLong,
            &PredictStreamedLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_._cached_size_),
        false,
    },
    &PredictStreamedLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PredictStreamedLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PredictStreamedLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::PredictStreamedLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.serving.PredictResponse response = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_.response_)}},
    // repeated .tensorflow.serving.PredictRequest request = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.serving.PredictRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_.request_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.serving.PredictResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(PredictStreamedLog, _impl_.response_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::PredictRequest>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::PredictResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PredictStreamedLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PredictStreamedLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_.Clear();
  _impl_.response_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PredictStreamedLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PredictStreamedLog& this_ = static_cast<const PredictStreamedLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PredictStreamedLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PredictStreamedLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PredictStreamedLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.serving.PredictRequest request = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_request_size());
               i < n; i++) {
            const auto& repfield = this_._internal_request().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.serving.PredictResponse response = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_response_size());
               i < n; i++) {
            const auto& repfield = this_._internal_response().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PredictStreamedLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PredictStreamedLog::ByteSizeLong(const MessageLite& base) {
          const PredictStreamedLog& this_ = static_cast<const PredictStreamedLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PredictStreamedLog::ByteSizeLong() const {
          const PredictStreamedLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PredictStreamedLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.serving.PredictRequest request = 1;
            {
              total_size += 1UL * this_._internal_request_size();
              for (const auto& msg : this_._internal_request()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.serving.PredictResponse response = 2;
            {
              total_size += 1UL * this_._internal_response_size();
              for (const auto& msg : this_._internal_response()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PredictStreamedLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PredictStreamedLog*>(&to_msg);
  auto& from = static_cast<const PredictStreamedLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PredictStreamedLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_request()->MergeFrom(
      from._internal_request());
  _this->_internal_mutable_response()->MergeFrom(
      from._internal_response());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PredictStreamedLog::CopyFrom(const PredictStreamedLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PredictStreamedLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PredictStreamedLog::InternalSwap(PredictStreamedLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.request_.InternalSwap(&other->_impl_.request_);
  _impl_.response_.InternalSwap(&other->_impl_.response_);
}

::google::protobuf::Metadata PredictStreamedLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiInferenceLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MultiInferenceLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_._has_bits_);
};

void MultiInferenceLog::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MultiInferenceLog::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MultiInferenceLog::MultiInferenceLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.MultiInferenceLog)
}
inline PROTOBUF_NDEBUG_INLINE MultiInferenceLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::MultiInferenceLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MultiInferenceLog::MultiInferenceLog(
    ::google::protobuf::Arena* arena,
    const MultiInferenceLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MultiInferenceLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::MultiInferenceRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::MultiInferenceResponse>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.MultiInferenceLog)
}
inline PROTOBUF_NDEBUG_INLINE MultiInferenceLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MultiInferenceLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, request_) +
               sizeof(Impl_::response_));
}
MultiInferenceLog::~MultiInferenceLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.MultiInferenceLog)
  SharedDtor(*this);
}
inline void MultiInferenceLog::SharedDtor(MessageLite& self) {
  MultiInferenceLog& this_ = static_cast<MultiInferenceLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.request_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* MultiInferenceLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MultiInferenceLog(arena);
}
constexpr auto MultiInferenceLog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MultiInferenceLog),
                                            alignof(MultiInferenceLog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MultiInferenceLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MultiInferenceLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MultiInferenceLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MultiInferenceLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MultiInferenceLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MultiInferenceLog>(), &MultiInferenceLog::ByteSizeLong,
            &MultiInferenceLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_._cached_size_),
        false,
    },
    &MultiInferenceLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MultiInferenceLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> MultiInferenceLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::MultiInferenceLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.MultiInferenceResponse response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_.response_)}},
    // .tensorflow.serving.MultiInferenceRequest request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.MultiInferenceRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.MultiInferenceResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::MultiInferenceRequest>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::MultiInferenceResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MultiInferenceLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.MultiInferenceLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MultiInferenceLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MultiInferenceLog& this_ = static_cast<const MultiInferenceLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MultiInferenceLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MultiInferenceLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.MultiInferenceLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.MultiInferenceRequest request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.MultiInferenceResponse response = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.MultiInferenceLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MultiInferenceLog::ByteSizeLong(const MessageLite& base) {
          const MultiInferenceLog& this_ = static_cast<const MultiInferenceLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MultiInferenceLog::ByteSizeLong() const {
          const MultiInferenceLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.MultiInferenceLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.MultiInferenceRequest request = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
            // .tensorflow.serving.MultiInferenceResponse response = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MultiInferenceLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiInferenceLog*>(&to_msg);
  auto& from = static_cast<const MultiInferenceLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.MultiInferenceLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.request_ != nullptr);
      if (_this->_impl_.request_ == nullptr) {
        _this->_impl_.request_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::MultiInferenceRequest>(arena, *from._impl_.request_);
      } else {
        _this->_impl_.request_->MergeFrom(*from._impl_.request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::MultiInferenceResponse>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiInferenceLog::CopyFrom(const MultiInferenceLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.MultiInferenceLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiInferenceLog::InternalSwap(MultiInferenceLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_.response_)
      + sizeof(MultiInferenceLog::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(MultiInferenceLog, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::google::protobuf::Metadata MultiInferenceLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SessionRunLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SessionRunLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_._has_bits_);
};

void SessionRunLog::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SessionRunLog::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SessionRunLog::SessionRunLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.SessionRunLog)
}
inline PROTOBUF_NDEBUG_INLINE SessionRunLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::SessionRunLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SessionRunLog::SessionRunLog(
    ::google::protobuf::Arena* arena,
    const SessionRunLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SessionRunLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SessionRunRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SessionRunResponse>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.SessionRunLog)
}
inline PROTOBUF_NDEBUG_INLINE SessionRunLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SessionRunLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, request_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, request_) +
               sizeof(Impl_::response_));
}
SessionRunLog::~SessionRunLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.SessionRunLog)
  SharedDtor(*this);
}
inline void SessionRunLog::SharedDtor(MessageLite& self) {
  SessionRunLog& this_ = static_cast<SessionRunLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.request_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* SessionRunLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SessionRunLog(arena);
}
constexpr auto SessionRunLog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SessionRunLog),
                                            alignof(SessionRunLog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SessionRunLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SessionRunLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SessionRunLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SessionRunLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SessionRunLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SessionRunLog>(), &SessionRunLog::ByteSizeLong,
            &SessionRunLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_._cached_size_),
        false,
    },
    &SessionRunLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SessionRunLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SessionRunLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::SessionRunLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.SessionRunResponse response = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_.response_)}},
    // .tensorflow.serving.SessionRunRequest request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.SessionRunRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.SessionRunResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::SessionRunRequest>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::SessionRunResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SessionRunLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.SessionRunLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.request_ != nullptr);
      _impl_.request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SessionRunLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SessionRunLog& this_ = static_cast<const SessionRunLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SessionRunLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SessionRunLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.SessionRunLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.SessionRunRequest request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.SessionRunResponse response = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.SessionRunLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SessionRunLog::ByteSizeLong(const MessageLite& base) {
          const SessionRunLog& this_ = static_cast<const SessionRunLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SessionRunLog::ByteSizeLong() const {
          const SessionRunLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.SessionRunLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.SessionRunRequest request = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
            // .tensorflow.serving.SessionRunResponse response = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SessionRunLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SessionRunLog*>(&to_msg);
  auto& from = static_cast<const SessionRunLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.SessionRunLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.request_ != nullptr);
      if (_this->_impl_.request_ == nullptr) {
        _this->_impl_.request_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SessionRunRequest>(arena, *from._impl_.request_);
      } else {
        _this->_impl_.request_->MergeFrom(*from._impl_.request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SessionRunResponse>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SessionRunLog::CopyFrom(const SessionRunLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.SessionRunLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SessionRunLog::InternalSwap(SessionRunLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_.response_)
      + sizeof(SessionRunLog::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(SessionRunLog, _impl_.request_)>(
          reinterpret_cast<char*>(&_impl_.request_),
          reinterpret_cast<char*>(&other->_impl_.request_));
}

::google::protobuf::Metadata SessionRunLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PredictionLog::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PredictionLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PredictionLog, _impl_._oneof_case_);
};

void PredictionLog::clear_log_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.log_metadata_ != nullptr) _impl_.log_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PredictionLog::set_allocated_classify_log(::tensorflow::serving::ClassifyLog* classify_log) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_log_type();
  if (classify_log) {
    ::google::protobuf::Arena* submessage_arena = classify_log->GetArena();
    if (message_arena != submessage_arena) {
      classify_log = ::google::protobuf::internal::GetOwnedMessage(message_arena, classify_log, submessage_arena);
    }
    set_has_classify_log();
    _impl_.log_type_.classify_log_ = classify_log;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PredictionLog.classify_log)
}
void PredictionLog::set_allocated_regress_log(::tensorflow::serving::RegressLog* regress_log) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_log_type();
  if (regress_log) {
    ::google::protobuf::Arena* submessage_arena = regress_log->GetArena();
    if (message_arena != submessage_arena) {
      regress_log = ::google::protobuf::internal::GetOwnedMessage(message_arena, regress_log, submessage_arena);
    }
    set_has_regress_log();
    _impl_.log_type_.regress_log_ = regress_log;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PredictionLog.regress_log)
}
void PredictionLog::set_allocated_predict_log(::tensorflow::serving::PredictLog* predict_log) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_log_type();
  if (predict_log) {
    ::google::protobuf::Arena* submessage_arena = predict_log->GetArena();
    if (message_arena != submessage_arena) {
      predict_log = ::google::protobuf::internal::GetOwnedMessage(message_arena, predict_log, submessage_arena);
    }
    set_has_predict_log();
    _impl_.log_type_.predict_log_ = predict_log;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PredictionLog.predict_log)
}
void PredictionLog::set_allocated_predict_streamed_log(::tensorflow::serving::PredictStreamedLog* predict_streamed_log) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_log_type();
  if (predict_streamed_log) {
    ::google::protobuf::Arena* submessage_arena = predict_streamed_log->GetArena();
    if (message_arena != submessage_arena) {
      predict_streamed_log = ::google::protobuf::internal::GetOwnedMessage(message_arena, predict_streamed_log, submessage_arena);
    }
    set_has_predict_streamed_log();
    _impl_.log_type_.predict_streamed_log_ = predict_streamed_log;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PredictionLog.predict_streamed_log)
}
void PredictionLog::set_allocated_multi_inference_log(::tensorflow::serving::MultiInferenceLog* multi_inference_log) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_log_type();
  if (multi_inference_log) {
    ::google::protobuf::Arena* submessage_arena = multi_inference_log->GetArena();
    if (message_arena != submessage_arena) {
      multi_inference_log = ::google::protobuf::internal::GetOwnedMessage(message_arena, multi_inference_log, submessage_arena);
    }
    set_has_multi_inference_log();
    _impl_.log_type_.multi_inference_log_ = multi_inference_log;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PredictionLog.multi_inference_log)
}
void PredictionLog::set_allocated_session_run_log(::tensorflow::serving::SessionRunLog* session_run_log) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_log_type();
  if (session_run_log) {
    ::google::protobuf::Arena* submessage_arena = session_run_log->GetArena();
    if (message_arena != submessage_arena) {
      session_run_log = ::google::protobuf::internal::GetOwnedMessage(message_arena, session_run_log, submessage_arena);
    }
    set_has_session_run_log();
    _impl_.log_type_.session_run_log_ = session_run_log;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PredictionLog.session_run_log)
}
PredictionLog::PredictionLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PredictionLog)
}
inline PROTOBUF_NDEBUG_INLINE PredictionLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::PredictionLog& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        log_type_{},
        _oneof_case_{from._oneof_case_[0]} {}

PredictionLog::PredictionLog(
    ::google::protobuf::Arena* arena,
    const PredictionLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PredictionLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.log_metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::LogMetadata>(
                              arena, *from._impl_.log_metadata_)
                        : nullptr;
  switch (log_type_case()) {
    case LOG_TYPE_NOT_SET:
      break;
      case kClassifyLog:
        _impl_.log_type_.classify_log_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ClassifyLog>(arena, *from._impl_.log_type_.classify_log_);
        break;
      case kRegressLog:
        _impl_.log_type_.regress_log_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::RegressLog>(arena, *from._impl_.log_type_.regress_log_);
        break;
      case kPredictLog:
        _impl_.log_type_.predict_log_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictLog>(arena, *from._impl_.log_type_.predict_log_);
        break;
      case kPredictStreamedLog:
        _impl_.log_type_.predict_streamed_log_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictStreamedLog>(arena, *from._impl_.log_type_.predict_streamed_log_);
        break;
      case kMultiInferenceLog:
        _impl_.log_type_.multi_inference_log_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::MultiInferenceLog>(arena, *from._impl_.log_type_.multi_inference_log_);
        break;
      case kSessionRunLog:
        _impl_.log_type_.session_run_log_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SessionRunLog>(arena, *from._impl_.log_type_.session_run_log_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PredictionLog)
}
inline PROTOBUF_NDEBUG_INLINE PredictionLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        log_type_{},
        _oneof_case_{} {}

inline void PredictionLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.log_metadata_ = {};
}
PredictionLog::~PredictionLog() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PredictionLog)
  SharedDtor(*this);
}
inline void PredictionLog::SharedDtor(MessageLite& self) {
  PredictionLog& this_ = static_cast<PredictionLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.log_metadata_;
  if (this_.has_log_type()) {
    this_.clear_log_type();
  }
  this_._impl_.~Impl_();
}

void PredictionLog::clear_log_type() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.serving.PredictionLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (log_type_case()) {
    case kClassifyLog: {
      if (GetArena() == nullptr) {
        delete _impl_.log_type_.classify_log_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.log_type_.classify_log_);
      }
      break;
    }
    case kRegressLog: {
      if (GetArena() == nullptr) {
        delete _impl_.log_type_.regress_log_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.log_type_.regress_log_);
      }
      break;
    }
    case kPredictLog: {
      if (GetArena() == nullptr) {
        delete _impl_.log_type_.predict_log_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.log_type_.predict_log_);
      }
      break;
    }
    case kPredictStreamedLog: {
      if (GetArena() == nullptr) {
        delete _impl_.log_type_.predict_streamed_log_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.log_type_.predict_streamed_log_);
      }
      break;
    }
    case kMultiInferenceLog: {
      if (GetArena() == nullptr) {
        delete _impl_.log_type_.multi_inference_log_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.log_type_.multi_inference_log_);
      }
      break;
    }
    case kSessionRunLog: {
      if (GetArena() == nullptr) {
        delete _impl_.log_type_.session_run_log_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.log_type_.session_run_log_);
      }
      break;
    }
    case LOG_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = LOG_TYPE_NOT_SET;
}


inline void* PredictionLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PredictionLog(arena);
}
constexpr auto PredictionLog::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PredictionLog),
                                            alignof(PredictionLog));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PredictionLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PredictionLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PredictionLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PredictionLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PredictionLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PredictionLog>(), &PredictionLog::ByteSizeLong,
            &PredictionLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_._cached_size_),
        false,
    },
    &PredictionLog::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PredictionLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 7, 0, 2> PredictionLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_._has_bits_),
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::PredictionLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.LogMetadata log_metadata = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.LogMetadata log_metadata = 1;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.ClassifyLog classify_log = 2;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_type_.classify_log_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.RegressLog regress_log = 3;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_type_.regress_log_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.MultiInferenceLog multi_inference_log = 4;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_type_.multi_inference_log_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.SessionRunLog session_run_log = 5;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_type_.session_run_log_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.PredictLog predict_log = 6;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_type_.predict_log_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.PredictStreamedLog predict_streamed_log = 7;
    {PROTOBUF_FIELD_OFFSET(PredictionLog, _impl_.log_type_.predict_streamed_log_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::LogMetadata>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::ClassifyLog>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::RegressLog>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::MultiInferenceLog>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::SessionRunLog>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::PredictLog>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::PredictStreamedLog>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PredictionLog::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PredictionLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.log_metadata_ != nullptr);
    _impl_.log_metadata_->Clear();
  }
  clear_log_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PredictionLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PredictionLog& this_ = static_cast<const PredictionLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PredictionLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PredictionLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PredictionLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.LogMetadata log_metadata = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.log_metadata_, this_._impl_.log_metadata_->GetCachedSize(), target,
                stream);
          }

          switch (this_.log_type_case()) {
            case kClassifyLog: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.log_type_.classify_log_, this_._impl_.log_type_.classify_log_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kRegressLog: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.log_type_.regress_log_, this_._impl_.log_type_.regress_log_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMultiInferenceLog: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.log_type_.multi_inference_log_, this_._impl_.log_type_.multi_inference_log_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSessionRunLog: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.log_type_.session_run_log_, this_._impl_.log_type_.session_run_log_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPredictLog: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.log_type_.predict_log_, this_._impl_.log_type_.predict_log_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPredictStreamedLog: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.log_type_.predict_streamed_log_, this_._impl_.log_type_.predict_streamed_log_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PredictionLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PredictionLog::ByteSizeLong(const MessageLite& base) {
          const PredictionLog& this_ = static_cast<const PredictionLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PredictionLog::ByteSizeLong() const {
          const PredictionLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PredictionLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .tensorflow.serving.LogMetadata log_metadata = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_metadata_);
            }
          }
          switch (this_.log_type_case()) {
            // .tensorflow.serving.ClassifyLog classify_log = 2;
            case kClassifyLog: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_type_.classify_log_);
              break;
            }
            // .tensorflow.serving.RegressLog regress_log = 3;
            case kRegressLog: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_type_.regress_log_);
              break;
            }
            // .tensorflow.serving.PredictLog predict_log = 6;
            case kPredictLog: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_type_.predict_log_);
              break;
            }
            // .tensorflow.serving.PredictStreamedLog predict_streamed_log = 7;
            case kPredictStreamedLog: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_type_.predict_streamed_log_);
              break;
            }
            // .tensorflow.serving.MultiInferenceLog multi_inference_log = 4;
            case kMultiInferenceLog: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_type_.multi_inference_log_);
              break;
            }
            // .tensorflow.serving.SessionRunLog session_run_log = 5;
            case kSessionRunLog: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_type_.session_run_log_);
              break;
            }
            case LOG_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PredictionLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PredictionLog*>(&to_msg);
  auto& from = static_cast<const PredictionLog&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PredictionLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.log_metadata_ != nullptr);
    if (_this->_impl_.log_metadata_ == nullptr) {
      _this->_impl_.log_metadata_ =
          ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::LogMetadata>(arena, *from._impl_.log_metadata_);
    } else {
      _this->_impl_.log_metadata_->MergeFrom(*from._impl_.log_metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_log_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kClassifyLog: {
        if (oneof_needs_init) {
          _this->_impl_.log_type_.classify_log_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ClassifyLog>(arena, *from._impl_.log_type_.classify_log_);
        } else {
          _this->_impl_.log_type_.classify_log_->MergeFrom(from._internal_classify_log());
        }
        break;
      }
      case kRegressLog: {
        if (oneof_needs_init) {
          _this->_impl_.log_type_.regress_log_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::RegressLog>(arena, *from._impl_.log_type_.regress_log_);
        } else {
          _this->_impl_.log_type_.regress_log_->MergeFrom(from._internal_regress_log());
        }
        break;
      }
      case kPredictLog: {
        if (oneof_needs_init) {
          _this->_impl_.log_type_.predict_log_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictLog>(arena, *from._impl_.log_type_.predict_log_);
        } else {
          _this->_impl_.log_type_.predict_log_->MergeFrom(from._internal_predict_log());
        }
        break;
      }
      case kPredictStreamedLog: {
        if (oneof_needs_init) {
          _this->_impl_.log_type_.predict_streamed_log_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::PredictStreamedLog>(arena, *from._impl_.log_type_.predict_streamed_log_);
        } else {
          _this->_impl_.log_type_.predict_streamed_log_->MergeFrom(from._internal_predict_streamed_log());
        }
        break;
      }
      case kMultiInferenceLog: {
        if (oneof_needs_init) {
          _this->_impl_.log_type_.multi_inference_log_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::MultiInferenceLog>(arena, *from._impl_.log_type_.multi_inference_log_);
        } else {
          _this->_impl_.log_type_.multi_inference_log_->MergeFrom(from._internal_multi_inference_log());
        }
        break;
      }
      case kSessionRunLog: {
        if (oneof_needs_init) {
          _this->_impl_.log_type_.session_run_log_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SessionRunLog>(arena, *from._impl_.log_type_.session_run_log_);
        } else {
          _this->_impl_.log_type_.session_run_log_->MergeFrom(from._internal_session_run_log());
        }
        break;
      }
      case LOG_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PredictionLog::CopyFrom(const PredictionLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PredictionLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PredictionLog::InternalSwap(PredictionLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.log_metadata_, other->_impl_.log_metadata_);
  swap(_impl_.log_type_, other->_impl_.log_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PredictionLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fapis_2fprediction_5flog_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
