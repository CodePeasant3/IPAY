// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/config/model_server_config.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow_serving/config/model_server_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
namespace serving {
              template <typename>
PROTOBUF_CONSTEXPR ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ModelConfig_VersionLabelsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ModelConfig_VersionLabelsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ModelConfig_VersionLabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfig_VersionLabelsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfig_VersionLabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ModelConfig_VersionLabelsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfig_VersionLabelsEntry_DoNotUseDefaultTypeInternal _ModelConfig_VersionLabelsEntry_DoNotUse_default_instance_;

inline constexpr ModelConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        version_labels_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_platform_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        logging_config_{nullptr},
        model_version_policy_{nullptr},
        model_type_{static_cast< ::tensorflow::serving::ModelType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ModelConfig::ModelConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigDefaultTypeInternal() {}
  union {
    ModelConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigDefaultTypeInternal _ModelConfig_default_instance_;

inline constexpr ModelConfigList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : config_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModelConfigList::ModelConfigList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelConfigListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelConfigListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelConfigListDefaultTypeInternal() {}
  union {
    ModelConfigList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelConfigListDefaultTypeInternal _ModelConfigList_default_instance_;

inline constexpr ModelServerConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : config_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ModelServerConfig::ModelServerConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelServerConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelServerConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelServerConfigDefaultTypeInternal() {}
  union {
    ModelServerConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelServerConfigDefaultTypeInternal _ModelServerConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.base_path_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.model_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.model_platform_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.model_version_policy_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.version_labels_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfig, _impl_.logging_config_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfigList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelConfigList, _impl_.config_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, _impl_.config_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse)},
        {12, 27, -1, sizeof(::tensorflow::serving::ModelConfig)},
        {34, -1, -1, sizeof(::tensorflow::serving::ModelConfigList)},
        {43, -1, -1, sizeof(::tensorflow::serving::ModelServerConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::serving::_ModelConfig_VersionLabelsEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::serving::_ModelConfig_default_instance_._instance,
    &::tensorflow::serving::_ModelConfigList_default_instance_._instance,
    &::tensorflow::serving::_ModelServerConfig_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n3tensorflow_serving/config/model_server"
    "_config.proto\022\022tensorflow.serving\032\031googl"
    "e/protobuf/any.proto\032\?tensorflow_serving"
    "/config/file_system_storage_path_source."
    "proto\032.tensorflow_serving/config/logging"
    "_config.proto\"\261\003\n\013ModelConfig\022\014\n\004name\030\001 "
    "\001(\t\022\021\n\tbase_path\030\002 \001(\t\0225\n\nmodel_type\030\003 \001"
    "(\0162\035.tensorflow.serving.ModelTypeB\002\030\001\022\026\n"
    "\016model_platform\030\004 \001(\t\022i\n\024model_version_p"
    "olicy\030\007 \001(\0132K.tensorflow.serving.FileSys"
    "temStoragePathSourceConfig.ServableVersi"
    "onPolicy\022J\n\016version_labels\030\010 \003(\01322.tenso"
    "rflow.serving.ModelConfig.VersionLabelsE"
    "ntry\0229\n\016logging_config\030\006 \001(\0132!.tensorflo"
    "w.serving.LoggingConfig\0324\n\022VersionLabels"
    "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003:\0028\001J\004\010"
    "\005\020\006J\004\010\t\020\n\"B\n\017ModelConfigList\022/\n\006config\030\001"
    " \003(\0132\037.tensorflow.serving.ModelConfig\"\224\001"
    "\n\021ModelServerConfig\022@\n\021model_config_list"
    "\030\001 \001(\0132#.tensorflow.serving.ModelConfigL"
    "istH\000\0223\n\023custom_model_config\030\002 \001(\0132\024.goo"
    "gle.protobuf.AnyH\000B\010\n\006config*N\n\tModelTyp"
    "e\022\036\n\026MODEL_TYPE_UNSPECIFIED\020\000\032\002\010\001\022\022\n\nTEN"
    "SORFLOW\020\001\032\002\010\001\022\r\n\005OTHER\020\002\032\002\010\001B\003\370\001\001b\006proto"
    "3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto_deps[3] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fconfig_2ffile_5fsystem_5fstorage_5fpath_5fsource_2eproto,
        &::descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto = {
    false,
    false,
    961,
    descriptor_table_protodef_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
    "tensorflow_serving/config/model_server_config.proto",
    &descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto_once,
    descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
};
namespace tensorflow {
namespace serving {
const ::google::protobuf::EnumDescriptor* ModelType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto);
  return file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ModelType_internal_data_[] = {
    196608u, 0u, };
bool ModelType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse() : SuperType() {}
              ModelConfig_VersionLabelsEntry_DoNotUse::ModelConfig_VersionLabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ModelConfig_VersionLabelsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ModelConfig_VersionLabelsEntry_DoNotUse(arena);
              }
              constexpr auto ModelConfig_VersionLabelsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModelConfig_VersionLabelsEntry_DoNotUse),
                                                          alignof(ModelConfig_VersionLabelsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ModelConfig_VersionLabelsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ModelConfig_VersionLabelsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ModelConfig_VersionLabelsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ModelConfig_VersionLabelsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ModelConfig_VersionLabelsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ModelConfig_VersionLabelsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ModelConfig_VersionLabelsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ModelConfig_VersionLabelsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> ModelConfig_VersionLabelsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::ModelConfig_VersionLabelsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 value = 2;
    {PROTOBUF_FIELD_OFFSET(ModelConfig_VersionLabelsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\61\3\0\0\0\0\0\0"
    "tensorflow.serving.ModelConfig.VersionLabelsEntry"
    "key"
  }},
};

// ===================================================================

class ModelConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModelConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_._has_bits_);
};

void ModelConfig::clear_model_version_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.model_version_policy_ != nullptr) _impl_.model_version_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ModelConfig::clear_logging_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.logging_config_ != nullptr) _impl_.logging_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ModelConfig::ModelConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelConfig)
}
inline PROTOBUF_NDEBUG_INLINE ModelConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::ModelConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        version_labels_{visibility, arena, from.version_labels_},
        name_(arena, from.name_),
        base_path_(arena, from.base_path_),
        model_platform_(arena, from.model_platform_) {}

ModelConfig::ModelConfig(
    ::google::protobuf::Arena* arena,
    const ModelConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.logging_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::LoggingConfig>(
                              arena, *from._impl_.logging_config_)
                        : nullptr;
  _impl_.model_version_policy_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy>(
                              arena, *from._impl_.model_version_policy_)
                        : nullptr;
  _impl_.model_type_ = from._impl_.model_type_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelConfig)
}
inline PROTOBUF_NDEBUG_INLINE ModelConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        version_labels_{visibility, arena},
        name_(arena),
        base_path_(arena),
        model_platform_(arena) {}

inline void ModelConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logging_config_),
           0,
           offsetof(Impl_, model_type_) -
               offsetof(Impl_, logging_config_) +
               sizeof(Impl_::model_type_));
}
ModelConfig::~ModelConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelConfig)
  SharedDtor(*this);
}
inline void ModelConfig::SharedDtor(MessageLite& self) {
  ModelConfig& this_ = static_cast<ModelConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.base_path_.Destroy();
  this_._impl_.model_platform_.Destroy();
  delete this_._impl_.logging_config_;
  delete this_._impl_.model_version_policy_;
  this_._impl_.~Impl_();
}

inline void* ModelConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModelConfig(arena);
}
constexpr auto ModelConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.version_labels_) +
          decltype(ModelConfig::_impl_.version_labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.version_labels_) +
          decltype(ModelConfig::_impl_.version_labels_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ModelConfig), alignof(ModelConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModelConfig::PlacementNew_,
                                 sizeof(ModelConfig),
                                 alignof(ModelConfig));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModelConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModelConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModelConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModelConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModelConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModelConfig>(), &ModelConfig::ByteSizeLong,
            &ModelConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_._cached_size_),
        false,
    },
    &ModelConfig::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModelConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 80, 2> ModelConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967056,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::ModelConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.name_)}},
    // string base_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.base_path_)}},
    // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModelConfig, _impl_.model_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_type_)}},
    // string model_platform = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_platform_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tensorflow.serving.LoggingConfig logging_config = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.logging_config_)}},
    // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_version_policy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string base_path = 2;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.base_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string model_platform = 4;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_platform_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.serving.LoggingConfig logging_config = 6;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.logging_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_version_policy_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, int64> version_labels = 8;
    {PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.version_labels_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::LoggingConfig>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ModelConfig()._impl_.version_labels_)>(
        1, 0, 0, 9,
        3)},
  }}, {{
    "\36\4\11\0\16\0\0\16"
    "tensorflow.serving.ModelConfig"
    "name"
    "base_path"
    "model_platform"
    "version_labels"
  }},
};

PROTOBUF_NOINLINE void ModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_labels_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.base_path_.ClearToEmpty();
  _impl_.model_platform_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.logging_config_ != nullptr);
      _impl_.logging_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.model_version_policy_ != nullptr);
      _impl_.model_version_policy_->Clear();
    }
  }
  _impl_.model_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModelConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModelConfig& this_ = static_cast<const ModelConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModelConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModelConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelConfig.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string base_path = 2;
          if (!this_._internal_base_path().empty()) {
            const std::string& _s = this_._internal_base_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelConfig.base_path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
          if (this_._internal_model_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_model_type(), target);
          }

          // string model_platform = 4;
          if (!this_._internal_model_platform().empty()) {
            const std::string& _s = this_._internal_model_platform();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelConfig.model_platform");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.LoggingConfig logging_config = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.logging_config_, this_._impl_.logging_config_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.model_version_policy_, this_._impl_.model_version_policy_->GetCachedSize(), target,
                stream);
          }

          // map<string, int64> version_labels = 8;
          if (!this_._internal_version_labels().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int64_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int64_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT64>;
            const auto& field = this_._internal_version_labels();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelConfig.version_labels");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.ModelConfig.version_labels");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModelConfig::ByteSizeLong(const MessageLite& base) {
          const ModelConfig& this_ = static_cast<const ModelConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModelConfig::ByteSizeLong() const {
          const ModelConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, int64> version_labels = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_version_labels_size());
              for (const auto& entry : this_._internal_version_labels()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int64_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string base_path = 2;
            if (!this_._internal_base_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_base_path());
            }
            // string model_platform = 4;
            if (!this_._internal_model_platform().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model_platform());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.LoggingConfig logging_config = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.logging_config_);
            }
            // .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.model_version_policy_);
            }
          }
           {
            // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
            if (this_._internal_model_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_model_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModelConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelConfig*>(&to_msg);
  auto& from = static_cast<const ModelConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.version_labels_.MergeFrom(from._impl_.version_labels_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_base_path().empty()) {
    _this->_internal_set_base_path(from._internal_base_path());
  }
  if (!from._internal_model_platform().empty()) {
    _this->_internal_set_model_platform(from._internal_model_platform());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.logging_config_ != nullptr);
      if (_this->_impl_.logging_config_ == nullptr) {
        _this->_impl_.logging_config_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::LoggingConfig>(arena, *from._impl_.logging_config_);
      } else {
        _this->_impl_.logging_config_->MergeFrom(*from._impl_.logging_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.model_version_policy_ != nullptr);
      if (_this->_impl_.model_version_policy_ == nullptr) {
        _this->_impl_.model_version_policy_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::FileSystemStoragePathSourceConfig_ServableVersionPolicy>(arena, *from._impl_.model_version_policy_);
      } else {
        _this->_impl_.model_version_policy_->MergeFrom(*from._impl_.model_version_policy_);
      }
    }
  }
  if (from._internal_model_type() != 0) {
    _this->_impl_.model_type_ = from._impl_.model_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfig::CopyFrom(const ModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelConfig::InternalSwap(ModelConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.version_labels_.InternalSwap(&other->_impl_.version_labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.base_path_, &other->_impl_.base_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_platform_, &other->_impl_.model_platform_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.model_type_)
      + sizeof(ModelConfig::_impl_.model_type_)
      - PROTOBUF_FIELD_OFFSET(ModelConfig, _impl_.logging_config_)>(
          reinterpret_cast<char*>(&_impl_.logging_config_),
          reinterpret_cast<char*>(&other->_impl_.logging_config_));
}

::google::protobuf::Metadata ModelConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModelConfigList::_Internal {
 public:
};

ModelConfigList::ModelConfigList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelConfigList)
}
inline PROTOBUF_NDEBUG_INLINE ModelConfigList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::ModelConfigList& from_msg)
      : config_{visibility, arena, from.config_},
        _cached_size_{0} {}

ModelConfigList::ModelConfigList(
    ::google::protobuf::Arena* arena,
    const ModelConfigList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelConfigList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelConfigList)
}
inline PROTOBUF_NDEBUG_INLINE ModelConfigList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : config_{visibility, arena},
        _cached_size_{0} {}

inline void ModelConfigList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModelConfigList::~ModelConfigList() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelConfigList)
  SharedDtor(*this);
}
inline void ModelConfigList::SharedDtor(MessageLite& self) {
  ModelConfigList& this_ = static_cast<ModelConfigList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ModelConfigList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModelConfigList(arena);
}
constexpr auto ModelConfigList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModelConfigList, _impl_.config_) +
          decltype(ModelConfigList::_impl_.config_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ModelConfigList), alignof(ModelConfigList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModelConfigList::PlacementNew_,
                                 sizeof(ModelConfigList),
                                 alignof(ModelConfigList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModelConfigList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModelConfigList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModelConfigList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModelConfigList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModelConfigList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModelConfigList>(), &ModelConfigList::ByteSizeLong,
            &ModelConfigList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModelConfigList, _impl_._cached_size_),
        false,
    },
    &ModelConfigList::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModelConfigList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ModelConfigList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::ModelConfigList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.serving.ModelConfig config = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModelConfigList, _impl_.config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.serving.ModelConfig config = 1;
    {PROTOBUF_FIELD_OFFSET(ModelConfigList, _impl_.config_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::ModelConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ModelConfigList::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelConfigList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModelConfigList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModelConfigList& this_ = static_cast<const ModelConfigList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModelConfigList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModelConfigList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelConfigList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.serving.ModelConfig config = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_config_size());
               i < n; i++) {
            const auto& repfield = this_._internal_config().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelConfigList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModelConfigList::ByteSizeLong(const MessageLite& base) {
          const ModelConfigList& this_ = static_cast<const ModelConfigList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModelConfigList::ByteSizeLong() const {
          const ModelConfigList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelConfigList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.serving.ModelConfig config = 1;
            {
              total_size += 1UL * this_._internal_config_size();
              for (const auto& msg : this_._internal_config()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModelConfigList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelConfigList*>(&to_msg);
  auto& from = static_cast<const ModelConfigList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelConfigList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_config()->MergeFrom(
      from._internal_config());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModelConfigList::CopyFrom(const ModelConfigList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelConfigList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelConfigList::InternalSwap(ModelConfigList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.config_.InternalSwap(&other->_impl_.config_);
}

::google::protobuf::Metadata ModelConfigList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModelServerConfig::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ModelServerConfig, _impl_._oneof_case_);
};

void ModelServerConfig::set_allocated_model_config_list(::tensorflow::serving::ModelConfigList* model_config_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (model_config_list) {
    ::google::protobuf::Arena* submessage_arena = model_config_list->GetArena();
    if (message_arena != submessage_arena) {
      model_config_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, model_config_list, submessage_arena);
    }
    set_has_model_config_list();
    _impl_.config_.model_config_list_ = model_config_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelServerConfig.model_config_list)
}
void ModelServerConfig::set_allocated_custom_model_config(::google::protobuf::Any* custom_model_config) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_config();
  if (custom_model_config) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(custom_model_config)->GetArena();
    if (message_arena != submessage_arena) {
      custom_model_config = ::google::protobuf::internal::GetOwnedMessage(message_arena, custom_model_config, submessage_arena);
    }
    set_has_custom_model_config();
    _impl_.config_.custom_model_config_ = custom_model_config;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelServerConfig.custom_model_config)
}
void ModelServerConfig::clear_custom_model_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (config_case() == kCustomModelConfig) {
    if (GetArena() == nullptr) {
      delete _impl_.config_.custom_model_config_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.custom_model_config_);
    }
    clear_has_config();
  }
}
ModelServerConfig::ModelServerConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ModelServerConfig)
}
inline PROTOBUF_NDEBUG_INLINE ModelServerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::ModelServerConfig& from_msg)
      : config_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ModelServerConfig::ModelServerConfig(
    ::google::protobuf::Arena* arena,
    const ModelServerConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelServerConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (config_case()) {
    case CONFIG_NOT_SET:
      break;
      case kModelConfigList:
        _impl_.config_.model_config_list_ = ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ModelConfigList>(arena, *from._impl_.config_.model_config_list_);
        break;
      case kCustomModelConfig:
        _impl_.config_.custom_model_config_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.config_.custom_model_config_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ModelServerConfig)
}
inline PROTOBUF_NDEBUG_INLINE ModelServerConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : config_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ModelServerConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModelServerConfig::~ModelServerConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ModelServerConfig)
  SharedDtor(*this);
}
inline void ModelServerConfig::SharedDtor(MessageLite& self) {
  ModelServerConfig& this_ = static_cast<ModelServerConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_config()) {
    this_.clear_config();
  }
  this_._impl_.~Impl_();
}

void ModelServerConfig::clear_config() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.serving.ModelServerConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (config_case()) {
    case kModelConfigList: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.model_config_list_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.model_config_list_);
      }
      break;
    }
    case kCustomModelConfig: {
      if (GetArena() == nullptr) {
        delete _impl_.config_.custom_model_config_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.config_.custom_model_config_);
      }
      break;
    }
    case CONFIG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONFIG_NOT_SET;
}


inline void* ModelServerConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModelServerConfig(arena);
}
constexpr auto ModelServerConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModelServerConfig),
                                            alignof(ModelServerConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModelServerConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModelServerConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModelServerConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModelServerConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModelServerConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModelServerConfig>(), &ModelServerConfig::ByteSizeLong,
            &ModelServerConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModelServerConfig, _impl_._cached_size_),
        false,
    },
    &ModelServerConfig::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModelServerConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> ModelServerConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::ModelServerConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.ModelConfigList model_config_list = 1;
    {PROTOBUF_FIELD_OFFSET(ModelServerConfig, _impl_.config_.model_config_list_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Any custom_model_config = 2;
    {PROTOBUF_FIELD_OFFSET(ModelServerConfig, _impl_.config_.custom_model_config_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::ModelConfigList>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ModelServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ModelServerConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_config();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModelServerConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModelServerConfig& this_ = static_cast<const ModelServerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModelServerConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModelServerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ModelServerConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.config_case()) {
            case kModelConfigList: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.config_.model_config_list_, this_._impl_.config_.model_config_list_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCustomModelConfig: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.config_.custom_model_config_, this_._impl_.config_.custom_model_config_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ModelServerConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModelServerConfig::ByteSizeLong(const MessageLite& base) {
          const ModelServerConfig& this_ = static_cast<const ModelServerConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModelServerConfig::ByteSizeLong() const {
          const ModelServerConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ModelServerConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.config_case()) {
            // .tensorflow.serving.ModelConfigList model_config_list = 1;
            case kModelConfigList: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.model_config_list_);
              break;
            }
            // .google.protobuf.Any custom_model_config = 2;
            case kCustomModelConfig: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_.custom_model_config_);
              break;
            }
            case CONFIG_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModelServerConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelServerConfig*>(&to_msg);
  auto& from = static_cast<const ModelServerConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ModelServerConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_config();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kModelConfigList: {
        if (oneof_needs_init) {
          _this->_impl_.config_.model_config_list_ =
              ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::ModelConfigList>(arena, *from._impl_.config_.model_config_list_);
        } else {
          _this->_impl_.config_.model_config_list_->MergeFrom(from._internal_model_config_list());
        }
        break;
      }
      case kCustomModelConfig: {
        if (oneof_needs_init) {
          _this->_impl_.config_.custom_model_config_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.config_.custom_model_config_);
        } else {
          _this->_impl_.config_.custom_model_config_->MergeFrom(from._internal_custom_model_config());
        }
        break;
      }
      case CONFIG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModelServerConfig::CopyFrom(const ModelServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ModelServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelServerConfig::InternalSwap(ModelServerConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.config_, other->_impl_.config_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ModelServerConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
