// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/config/logging_config.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow_serving/config/logging_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
namespace serving {

inline constexpr SamplingConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sampling_rate_{0},
        attributes_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SamplingConfig::SamplingConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SamplingConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SamplingConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SamplingConfigDefaultTypeInternal() {}
  union {
    SamplingConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SamplingConfigDefaultTypeInternal _SamplingConfig_default_instance_;

inline constexpr LoggingConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        log_collector_config_{nullptr},
        sampling_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LoggingConfig::LoggingConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoggingConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoggingConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoggingConfigDefaultTypeInternal() {}
  union {
    LoggingConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoggingConfigDefaultTypeInternal _LoggingConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SamplingConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SamplingConfig, _impl_.sampling_rate_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SamplingConfig, _impl_.attributes_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LoggingConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LoggingConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LoggingConfig, _impl_.log_collector_config_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LoggingConfig, _impl_.sampling_config_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::serving::SamplingConfig)},
        {10, 20, -1, sizeof(::tensorflow::serving::LoggingConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::serving::_SamplingConfig_default_instance_._instance,
    &::tensorflow::serving::_LoggingConfig_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.tensorflow_serving/config/logging_conf"
    "ig.proto\022\022tensorflow.serving\0324tensorflow"
    "_serving/config/log_collector_config.pro"
    "to\"\222\001\n\016SamplingConfig\022\025\n\rsampling_rate\030\001"
    " \001(\001\022\022\n\nattributes\030\002 \001(\005\"U\n\nAttributes\022\020"
    "\n\014ATTR_DEFAULT\020\000\022\027\n\023ATTR_REQUEST_ORIGIN\020"
    "\001\022\034\n\030ATTR_REQUEST_CRITICALITY\020\002\"\222\001\n\rLogg"
    "ingConfig\022D\n\024log_collector_config\030\001 \001(\0132"
    "&.tensorflow.serving.LogCollectorConfig\022"
    ";\n\017sampling_config\030\002 \001(\0132\".tensorflow.se"
    "rving.SamplingConfigB\003\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto_deps[1] =
    {
        &::descriptor_table_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto,
};
static ::absl::once_flag descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto = {
    false,
    false,
    433,
    descriptor_table_protodef_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto,
    "tensorflow_serving/config/logging_config.proto",
    &descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto_once,
    descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto,
};
namespace tensorflow {
namespace serving {
const ::google::protobuf::EnumDescriptor* SamplingConfig_Attributes_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto);
  return file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SamplingConfig_Attributes_internal_data_[] = {
    196608u, 0u, };
bool SamplingConfig_Attributes_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SamplingConfig_Attributes SamplingConfig::ATTR_DEFAULT;
constexpr SamplingConfig_Attributes SamplingConfig::ATTR_REQUEST_ORIGIN;
constexpr SamplingConfig_Attributes SamplingConfig::ATTR_REQUEST_CRITICALITY;
constexpr SamplingConfig_Attributes SamplingConfig::Attributes_MIN;
constexpr SamplingConfig_Attributes SamplingConfig::Attributes_MAX;
constexpr int SamplingConfig::Attributes_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class SamplingConfig::_Internal {
 public:
};

SamplingConfig::SamplingConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.SamplingConfig)
}
SamplingConfig::SamplingConfig(
    ::google::protobuf::Arena* arena, const SamplingConfig& from)
    : SamplingConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SamplingConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SamplingConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sampling_rate_),
           0,
           offsetof(Impl_, attributes_) -
               offsetof(Impl_, sampling_rate_) +
               sizeof(Impl_::attributes_));
}
SamplingConfig::~SamplingConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.SamplingConfig)
  SharedDtor(*this);
}
inline void SamplingConfig::SharedDtor(MessageLite& self) {
  SamplingConfig& this_ = static_cast<SamplingConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SamplingConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SamplingConfig(arena);
}
constexpr auto SamplingConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SamplingConfig),
                                            alignof(SamplingConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SamplingConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SamplingConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SamplingConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SamplingConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SamplingConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SamplingConfig>(), &SamplingConfig::ByteSizeLong,
            &SamplingConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_._cached_size_),
        false,
    },
    &SamplingConfig::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SamplingConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SamplingConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::SamplingConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 attributes = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SamplingConfig, _impl_.attributes_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_.attributes_)}},
    // double sampling_rate = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_.sampling_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double sampling_rate = 1;
    {PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_.sampling_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 attributes = 2;
    {PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_.attributes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SamplingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.SamplingConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sampling_rate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.attributes_) -
      reinterpret_cast<char*>(&_impl_.sampling_rate_)) + sizeof(_impl_.attributes_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SamplingConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SamplingConfig& this_ = static_cast<const SamplingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SamplingConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SamplingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.SamplingConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double sampling_rate = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_sampling_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_sampling_rate(), target);
          }

          // int32 attributes = 2;
          if (this_._internal_attributes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_attributes(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.SamplingConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SamplingConfig::ByteSizeLong(const MessageLite& base) {
          const SamplingConfig& this_ = static_cast<const SamplingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SamplingConfig::ByteSizeLong() const {
          const SamplingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.SamplingConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double sampling_rate = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_sampling_rate()) != 0) {
              total_size += 9;
            }
            // int32 attributes = 2;
            if (this_._internal_attributes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_attributes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SamplingConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SamplingConfig*>(&to_msg);
  auto& from = static_cast<const SamplingConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.SamplingConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_sampling_rate()) != 0) {
    _this->_impl_.sampling_rate_ = from._impl_.sampling_rate_;
  }
  if (from._internal_attributes() != 0) {
    _this->_impl_.attributes_ = from._impl_.attributes_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SamplingConfig::CopyFrom(const SamplingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.SamplingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SamplingConfig::InternalSwap(SamplingConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_.attributes_)
      + sizeof(SamplingConfig::_impl_.attributes_)
      - PROTOBUF_FIELD_OFFSET(SamplingConfig, _impl_.sampling_rate_)>(
          reinterpret_cast<char*>(&_impl_.sampling_rate_),
          reinterpret_cast<char*>(&other->_impl_.sampling_rate_));
}

::google::protobuf::Metadata SamplingConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoggingConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LoggingConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_._has_bits_);
};

void LoggingConfig::clear_log_collector_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.log_collector_config_ != nullptr) _impl_.log_collector_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LoggingConfig::LoggingConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.LoggingConfig)
}
inline PROTOBUF_NDEBUG_INLINE LoggingConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::LoggingConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LoggingConfig::LoggingConfig(
    ::google::protobuf::Arena* arena,
    const LoggingConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoggingConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.log_collector_config_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::LogCollectorConfig>(
                              arena, *from._impl_.log_collector_config_)
                        : nullptr;
  _impl_.sampling_config_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SamplingConfig>(
                              arena, *from._impl_.sampling_config_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.LoggingConfig)
}
inline PROTOBUF_NDEBUG_INLINE LoggingConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LoggingConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, log_collector_config_),
           0,
           offsetof(Impl_, sampling_config_) -
               offsetof(Impl_, log_collector_config_) +
               sizeof(Impl_::sampling_config_));
}
LoggingConfig::~LoggingConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.LoggingConfig)
  SharedDtor(*this);
}
inline void LoggingConfig::SharedDtor(MessageLite& self) {
  LoggingConfig& this_ = static_cast<LoggingConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.log_collector_config_;
  delete this_._impl_.sampling_config_;
  this_._impl_.~Impl_();
}

inline void* LoggingConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoggingConfig(arena);
}
constexpr auto LoggingConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LoggingConfig),
                                            alignof(LoggingConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoggingConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoggingConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoggingConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoggingConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoggingConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoggingConfig>(), &LoggingConfig::ByteSizeLong,
            &LoggingConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_._cached_size_),
        false,
    },
    &LoggingConfig::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoggingConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> LoggingConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::LoggingConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.serving.SamplingConfig sampling_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_.sampling_config_)}},
    // .tensorflow.serving.LogCollectorConfig log_collector_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_.log_collector_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tensorflow.serving.LogCollectorConfig log_collector_config = 1;
    {PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_.log_collector_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.serving.SamplingConfig sampling_config = 2;
    {PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_.sampling_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::serving::LogCollectorConfig>()},
    {::_pbi::TcParser::GetTable<::tensorflow::serving::SamplingConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LoggingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.LoggingConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.log_collector_config_ != nullptr);
      _impl_.log_collector_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.sampling_config_ != nullptr);
      _impl_.sampling_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoggingConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoggingConfig& this_ = static_cast<const LoggingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoggingConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoggingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.LoggingConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.serving.LogCollectorConfig log_collector_config = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.log_collector_config_, this_._impl_.log_collector_config_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.serving.SamplingConfig sampling_config = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.sampling_config_, this_._impl_.sampling_config_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.LoggingConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoggingConfig::ByteSizeLong(const MessageLite& base) {
          const LoggingConfig& this_ = static_cast<const LoggingConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoggingConfig::ByteSizeLong() const {
          const LoggingConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.LoggingConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tensorflow.serving.LogCollectorConfig log_collector_config = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.log_collector_config_);
            }
            // .tensorflow.serving.SamplingConfig sampling_config = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sampling_config_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoggingConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoggingConfig*>(&to_msg);
  auto& from = static_cast<const LoggingConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.LoggingConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.log_collector_config_ != nullptr);
      if (_this->_impl_.log_collector_config_ == nullptr) {
        _this->_impl_.log_collector_config_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::LogCollectorConfig>(arena, *from._impl_.log_collector_config_);
      } else {
        _this->_impl_.log_collector_config_->MergeFrom(*from._impl_.log_collector_config_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.sampling_config_ != nullptr);
      if (_this->_impl_.sampling_config_ == nullptr) {
        _this->_impl_.sampling_config_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::serving::SamplingConfig>(arena, *from._impl_.sampling_config_);
      } else {
        _this->_impl_.sampling_config_->MergeFrom(*from._impl_.sampling_config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoggingConfig::CopyFrom(const LoggingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.LoggingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoggingConfig::InternalSwap(LoggingConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_.sampling_config_)
      + sizeof(LoggingConfig::_impl_.sampling_config_)
      - PROTOBUF_FIELD_OFFSET(LoggingConfig, _impl_.log_collector_config_)>(
          reinterpret_cast<char*>(&_impl_.log_collector_config_),
          reinterpret_cast<char*>(&other->_impl_.log_collector_config_));
}

::google::protobuf::Metadata LoggingConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fconfig_2flogging_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
