// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/config/monitoring_config.proto
// Protobuf C++ Version: 5.29.0

#ifndef tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto_2epb_2eh
#define tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto;
namespace tensorflow {
namespace serving {
class MonitoringConfig;
struct MonitoringConfigDefaultTypeInternal;
extern MonitoringConfigDefaultTypeInternal _MonitoringConfig_default_instance_;
class PrometheusConfig;
struct PrometheusConfigDefaultTypeInternal;
extern PrometheusConfigDefaultTypeInternal _PrometheusConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tensorflow {
namespace serving {

// ===================================================================


// -------------------------------------------------------------------

class PrometheusConfig final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.PrometheusConfig) */ {
 public:
  inline PrometheusConfig() : PrometheusConfig(nullptr) {}
  ~PrometheusConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PrometheusConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PrometheusConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrometheusConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrometheusConfig(const PrometheusConfig& from) : PrometheusConfig(nullptr, from) {}
  inline PrometheusConfig(PrometheusConfig&& from) noexcept
      : PrometheusConfig(nullptr, std::move(from)) {}
  inline PrometheusConfig& operator=(const PrometheusConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrometheusConfig& operator=(PrometheusConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrometheusConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrometheusConfig* internal_default_instance() {
    return reinterpret_cast<const PrometheusConfig*>(
        &_PrometheusConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PrometheusConfig& a, PrometheusConfig& b) { a.Swap(&b); }
  inline void Swap(PrometheusConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrometheusConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrometheusConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PrometheusConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrometheusConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrometheusConfig& from) { PrometheusConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PrometheusConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.PrometheusConfig"; }

 protected:
  explicit PrometheusConfig(::google::protobuf::Arena* arena);
  PrometheusConfig(::google::protobuf::Arena* arena, const PrometheusConfig& from);
  PrometheusConfig(::google::protobuf::Arena* arena, PrometheusConfig&& from) noexcept
      : PrometheusConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 2,
    kEnableFieldNumber = 1,
  };
  // string path = 2;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // bool enable = 1;
  void clear_enable() ;
  bool enable() const;
  void set_enable(bool value);

  private:
  bool _internal_enable() const;
  void _internal_set_enable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.serving.PrometheusConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrometheusConfig& from_msg);
    ::google::protobuf::internal::ArenaStringPtr path_;
    bool enable_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class MonitoringConfig final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tensorflow.serving.MonitoringConfig) */ {
 public:
  inline MonitoringConfig() : MonitoringConfig(nullptr) {}
  ~MonitoringConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MonitoringConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MonitoringConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonitoringConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline MonitoringConfig(const MonitoringConfig& from) : MonitoringConfig(nullptr, from) {}
  inline MonitoringConfig(MonitoringConfig&& from) noexcept
      : MonitoringConfig(nullptr, std::move(from)) {}
  inline MonitoringConfig& operator=(const MonitoringConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonitoringConfig& operator=(MonitoringConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonitoringConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonitoringConfig* internal_default_instance() {
    return reinterpret_cast<const MonitoringConfig*>(
        &_MonitoringConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MonitoringConfig& a, MonitoringConfig& b) { a.Swap(&b); }
  inline void Swap(MonitoringConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonitoringConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonitoringConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MonitoringConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonitoringConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MonitoringConfig& from) { MonitoringConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MonitoringConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tensorflow.serving.MonitoringConfig"; }

 protected:
  explicit MonitoringConfig(::google::protobuf::Arena* arena);
  MonitoringConfig(::google::protobuf::Arena* arena, const MonitoringConfig& from);
  MonitoringConfig(::google::protobuf::Arena* arena, MonitoringConfig&& from) noexcept
      : MonitoringConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrometheusConfigFieldNumber = 1,
  };
  // .tensorflow.serving.PrometheusConfig prometheus_config = 1;
  bool has_prometheus_config() const;
  void clear_prometheus_config() ;
  const ::tensorflow::serving::PrometheusConfig& prometheus_config() const;
  PROTOBUF_NODISCARD ::tensorflow::serving::PrometheusConfig* release_prometheus_config();
  ::tensorflow::serving::PrometheusConfig* mutable_prometheus_config();
  void set_allocated_prometheus_config(::tensorflow::serving::PrometheusConfig* value);
  void unsafe_arena_set_allocated_prometheus_config(::tensorflow::serving::PrometheusConfig* value);
  ::tensorflow::serving::PrometheusConfig* unsafe_arena_release_prometheus_config();

  private:
  const ::tensorflow::serving::PrometheusConfig& _internal_prometheus_config() const;
  ::tensorflow::serving::PrometheusConfig* _internal_mutable_prometheus_config();

  public:
  // @@protoc_insertion_point(class_scope:tensorflow.serving.MonitoringConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MonitoringConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tensorflow::serving::PrometheusConfig* prometheus_config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PrometheusConfig

// bool enable = 1;
inline void PrometheusConfig::clear_enable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_ = false;
}
inline bool PrometheusConfig::enable() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.PrometheusConfig.enable)
  return _internal_enable();
}
inline void PrometheusConfig::set_enable(bool value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.PrometheusConfig.enable)
}
inline bool PrometheusConfig::_internal_enable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enable_;
}
inline void PrometheusConfig::_internal_set_enable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enable_ = value;
}

// string path = 2;
inline void PrometheusConfig::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& PrometheusConfig::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.PrometheusConfig.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrometheusConfig::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tensorflow.serving.PrometheusConfig.path)
}
inline std::string* PrometheusConfig::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.PrometheusConfig.path)
  return _s;
}
inline const std::string& PrometheusConfig::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void PrometheusConfig::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* PrometheusConfig::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* PrometheusConfig::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.PrometheusConfig.path)
  return _impl_.path_.Release();
}
inline void PrometheusConfig::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.PrometheusConfig.path)
}

// -------------------------------------------------------------------

// MonitoringConfig

// .tensorflow.serving.PrometheusConfig prometheus_config = 1;
inline bool MonitoringConfig::has_prometheus_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.prometheus_config_ != nullptr);
  return value;
}
inline void MonitoringConfig::clear_prometheus_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.prometheus_config_ != nullptr) _impl_.prometheus_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tensorflow::serving::PrometheusConfig& MonitoringConfig::_internal_prometheus_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tensorflow::serving::PrometheusConfig* p = _impl_.prometheus_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::serving::PrometheusConfig&>(::tensorflow::serving::_PrometheusConfig_default_instance_);
}
inline const ::tensorflow::serving::PrometheusConfig& MonitoringConfig::prometheus_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tensorflow.serving.MonitoringConfig.prometheus_config)
  return _internal_prometheus_config();
}
inline void MonitoringConfig::unsafe_arena_set_allocated_prometheus_config(::tensorflow::serving::PrometheusConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prometheus_config_);
  }
  _impl_.prometheus_config_ = reinterpret_cast<::tensorflow::serving::PrometheusConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.MonitoringConfig.prometheus_config)
}
inline ::tensorflow::serving::PrometheusConfig* MonitoringConfig::release_prometheus_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::PrometheusConfig* released = _impl_.prometheus_config_;
  _impl_.prometheus_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tensorflow::serving::PrometheusConfig* MonitoringConfig::unsafe_arena_release_prometheus_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tensorflow.serving.MonitoringConfig.prometheus_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tensorflow::serving::PrometheusConfig* temp = _impl_.prometheus_config_;
  _impl_.prometheus_config_ = nullptr;
  return temp;
}
inline ::tensorflow::serving::PrometheusConfig* MonitoringConfig::_internal_mutable_prometheus_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.prometheus_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tensorflow::serving::PrometheusConfig>(GetArena());
    _impl_.prometheus_config_ = reinterpret_cast<::tensorflow::serving::PrometheusConfig*>(p);
  }
  return _impl_.prometheus_config_;
}
inline ::tensorflow::serving::PrometheusConfig* MonitoringConfig::mutable_prometheus_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tensorflow::serving::PrometheusConfig* _msg = _internal_mutable_prometheus_config();
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.MonitoringConfig.prometheus_config)
  return _msg;
}
inline void MonitoringConfig::set_allocated_prometheus_config(::tensorflow::serving::PrometheusConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.prometheus_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.prometheus_config_ = reinterpret_cast<::tensorflow::serving::PrometheusConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.MonitoringConfig.prometheus_config)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tensorflow_5fserving_2fconfig_2fmonitoring_5fconfig_2eproto_2epb_2eh
