// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/config/log_collector_config.proto
// Protobuf C++ Version: 5.29.0

#include "tensorflow_serving/config/log_collector_config.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
namespace serving {

inline constexpr LogCollectorConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogCollectorConfig::LogCollectorConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogCollectorConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogCollectorConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogCollectorConfigDefaultTypeInternal() {}
  union {
    LogCollectorConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogCollectorConfigDefaultTypeInternal _LogCollectorConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto = nullptr;
const ::uint32_t
    TableStruct_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LogCollectorConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LogCollectorConfig, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::serving::LogCollectorConfig, _impl_.filename_prefix_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::serving::LogCollectorConfig)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::serving::_LogCollectorConfig_default_instance_._instance,
};
const char descriptor_table_protodef_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n4tensorflow_serving/config/log_collecto"
    "r_config.proto\022\022tensorflow.serving\";\n\022Lo"
    "gCollectorConfig\022\014\n\004type\030\001 \001(\t\022\027\n\017filena"
    "me_prefix\030\002 \001(\tB\003\370\001\001b\006proto3"
};
static ::absl::once_flag descriptor_table_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto = {
    false,
    false,
    148,
    descriptor_table_protodef_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto,
    "tensorflow_serving/config/log_collector_config.proto",
    &descriptor_table_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto::offsets,
    file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto,
};
namespace tensorflow {
namespace serving {
// ===================================================================

class LogCollectorConfig::_Internal {
 public:
};

LogCollectorConfig::LogCollectorConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.LogCollectorConfig)
}
inline PROTOBUF_NDEBUG_INLINE LogCollectorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::serving::LogCollectorConfig& from_msg)
      : type_(arena, from.type_),
        filename_prefix_(arena, from.filename_prefix_),
        _cached_size_{0} {}

LogCollectorConfig::LogCollectorConfig(
    ::google::protobuf::Arena* arena,
    const LogCollectorConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogCollectorConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.LogCollectorConfig)
}
inline PROTOBUF_NDEBUG_INLINE LogCollectorConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        filename_prefix_(arena),
        _cached_size_{0} {}

inline void LogCollectorConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LogCollectorConfig::~LogCollectorConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.LogCollectorConfig)
  SharedDtor(*this);
}
inline void LogCollectorConfig::SharedDtor(MessageLite& self) {
  LogCollectorConfig& this_ = static_cast<LogCollectorConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.filename_prefix_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogCollectorConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogCollectorConfig(arena);
}
constexpr auto LogCollectorConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogCollectorConfig),
                                            alignof(LogCollectorConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogCollectorConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogCollectorConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogCollectorConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogCollectorConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogCollectorConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogCollectorConfig>(), &LogCollectorConfig::ByteSizeLong,
            &LogCollectorConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogCollectorConfig, _impl_._cached_size_),
        false,
    },
    &LogCollectorConfig::kDescriptorMethods,
    &descriptor_table_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogCollectorConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> LogCollectorConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::serving::LogCollectorConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string filename_prefix = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LogCollectorConfig, _impl_.filename_prefix_)}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogCollectorConfig, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(LogCollectorConfig, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string filename_prefix = 2;
    {PROTOBUF_FIELD_OFFSET(LogCollectorConfig, _impl_.filename_prefix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\4\17\0\0\0\0\0"
    "tensorflow.serving.LogCollectorConfig"
    "type"
    "filename_prefix"
  }},
};

PROTOBUF_NOINLINE void LogCollectorConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.LogCollectorConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.filename_prefix_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogCollectorConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogCollectorConfig& this_ = static_cast<const LogCollectorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogCollectorConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogCollectorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.LogCollectorConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.LogCollectorConfig.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string filename_prefix = 2;
          if (!this_._internal_filename_prefix().empty()) {
            const std::string& _s = this_._internal_filename_prefix();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.serving.LogCollectorConfig.filename_prefix");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.LogCollectorConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogCollectorConfig::ByteSizeLong(const MessageLite& base) {
          const LogCollectorConfig& this_ = static_cast<const LogCollectorConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogCollectorConfig::ByteSizeLong() const {
          const LogCollectorConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.LogCollectorConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 1;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string filename_prefix = 2;
            if (!this_._internal_filename_prefix().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filename_prefix());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogCollectorConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogCollectorConfig*>(&to_msg);
  auto& from = static_cast<const LogCollectorConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.LogCollectorConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_filename_prefix().empty()) {
    _this->_internal_set_filename_prefix(from._internal_filename_prefix());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogCollectorConfig::CopyFrom(const LogCollectorConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.LogCollectorConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogCollectorConfig::InternalSwap(LogCollectorConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_prefix_, &other->_impl_.filename_prefix_, arena);
}

::google::protobuf::Metadata LogCollectorConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fconfig_2flog_5fcollector_5fconfig_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
