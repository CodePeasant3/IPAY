// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/service/hlo.proto
// Protobuf C++ Version: 5.29.0

#include "xla/service/hlo.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xla {

inline constexpr StackFrameIndexProto_StackFrame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : file_location_id_{0},
        parent_frame_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StackFrameIndexProto_StackFrame::StackFrameIndexProto_StackFrame(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StackFrameIndexProto_StackFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackFrameIndexProto_StackFrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackFrameIndexProto_StackFrameDefaultTypeInternal() {}
  union {
    StackFrameIndexProto_StackFrame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackFrameIndexProto_StackFrameDefaultTypeInternal _StackFrameIndexProto_StackFrame_default_instance_;

inline constexpr StackFrameIndexProto_FileLocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : file_name_id_{0},
        function_name_id_{0},
        line_{0},
        column_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StackFrameIndexProto_FileLocation::StackFrameIndexProto_FileLocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StackFrameIndexProto_FileLocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackFrameIndexProto_FileLocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackFrameIndexProto_FileLocationDefaultTypeInternal() {}
  union {
    StackFrameIndexProto_FileLocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackFrameIndexProto_FileLocationDefaultTypeInternal _StackFrameIndexProto_FileLocation_default_instance_;

inline constexpr LogicalBufferProto_Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shape_index_{},
        _shape_index_cached_byte_size_{0},
        instruction_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instruction_id_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogicalBufferProto_Location::LogicalBufferProto_Location(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogicalBufferProto_LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogicalBufferProto_LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogicalBufferProto_LocationDefaultTypeInternal() {}
  union {
    LogicalBufferProto_Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogicalBufferProto_LocationDefaultTypeInternal _LogicalBufferProto_Location_default_instance_;

inline constexpr HloScheduleProto_InstructionSequence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instruction_ids_{},
        _instruction_ids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloScheduleProto_InstructionSequence::HloScheduleProto_InstructionSequence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloScheduleProto_InstructionSequenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloScheduleProto_InstructionSequenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloScheduleProto_InstructionSequenceDefaultTypeInternal() {}
  union {
    HloScheduleProto_InstructionSequence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloScheduleProto_InstructionSequenceDefaultTypeInternal _HloScheduleProto_InstructionSequence_default_instance_;

inline constexpr HloModuleProto_ProfileInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fingerprint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        relative_speedup_{0},
        profile_type_{static_cast< ::xla::HloModuleProto_ProfileType >(0)},
        profile_source_{static_cast< ::xla::ProfileSource >(0)},
        compilation_event_{static_cast< ::xla::CompilationEvent >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloModuleProto_ProfileInfo::HloModuleProto_ProfileInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloModuleProto_ProfileInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloModuleProto_ProfileInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloModuleProto_ProfileInfoDefaultTypeInternal() {}
  union {
    HloModuleProto_ProfileInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloModuleProto_ProfileInfoDefaultTypeInternal _HloModuleProto_ProfileInfo_default_instance_;

inline constexpr HloInstructionProto_SliceDimensions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : start_{::int64_t{0}},
        limit_{::int64_t{0}},
        stride_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloInstructionProto_SliceDimensions::HloInstructionProto_SliceDimensions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloInstructionProto_SliceDimensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloInstructionProto_SliceDimensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloInstructionProto_SliceDimensionsDefaultTypeInternal() {}
  union {
    HloInstructionProto_SliceDimensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloInstructionProto_SliceDimensionsDefaultTypeInternal _HloInstructionProto_SliceDimensions_default_instance_;

inline constexpr HloInputOutputAliasProto_AliasEntryProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : output_shape_index_{},
        _output_shape_index_cached_byte_size_{0},
        parameter_shape_index_{},
        _parameter_shape_index_cached_byte_size_{0},
        parameter_number_{::int64_t{0}},
        kind_{static_cast< ::xla::Kind >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloInputOutputAliasProto_AliasEntryProto::HloInputOutputAliasProto_AliasEntryProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloInputOutputAliasProto_AliasEntryProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloInputOutputAliasProto_AliasEntryProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloInputOutputAliasProto_AliasEntryProtoDefaultTypeInternal() {}
  union {
    HloInputOutputAliasProto_AliasEntryProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloInputOutputAliasProto_AliasEntryProtoDefaultTypeInternal _HloInputOutputAliasProto_AliasEntryProto_default_instance_;

inline constexpr HloBufferDonorProto_BufferDonorEntryProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : parameter_shape_index_{},
        _parameter_shape_index_cached_byte_size_{0},
        parameter_number_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloBufferDonorProto_BufferDonorEntryProto::HloBufferDonorProto_BufferDonorEntryProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloBufferDonorProto_BufferDonorEntryProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloBufferDonorProto_BufferDonorEntryProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloBufferDonorProto_BufferDonorEntryProtoDefaultTypeInternal() {}
  union {
    HloBufferDonorProto_BufferDonorEntryProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloBufferDonorProto_BufferDonorEntryProtoDefaultTypeInternal _HloBufferDonorProto_BufferDonorEntryProto_default_instance_;

inline constexpr HeapSimulatorTrace_Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : computation_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instruction_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        buffer_id_{::int64_t{0}},
        share_with_canonical_id_{::int64_t{0}},
        kind_{static_cast< ::xla::HeapSimulatorTrace_Event_Kind >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HeapSimulatorTrace_Event::HeapSimulatorTrace_Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeapSimulatorTrace_EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeapSimulatorTrace_EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeapSimulatorTrace_EventDefaultTypeInternal() {}
  union {
    HeapSimulatorTrace_Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeapSimulatorTrace_EventDefaultTypeInternal _HeapSimulatorTrace_Event_default_instance_;

inline constexpr CrossProgramPrefetch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{},
        _index_cached_byte_size_{0},
        parameter_{::int64_t{0}},
        offset_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CrossProgramPrefetch::CrossProgramPrefetch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CrossProgramPrefetchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CrossProgramPrefetchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CrossProgramPrefetchDefaultTypeInternal() {}
  union {
    CrossProgramPrefetch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CrossProgramPrefetchDefaultTypeInternal _CrossProgramPrefetch_default_instance_;

inline constexpr BufferAllocationProto_Assigned::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logical_buffer_id_{::int64_t{0}},
        offset_{::int64_t{0}},
        size_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BufferAllocationProto_Assigned::BufferAllocationProto_Assigned(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BufferAllocationProto_AssignedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BufferAllocationProto_AssignedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BufferAllocationProto_AssignedDefaultTypeInternal() {}
  union {
    BufferAllocationProto_Assigned _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BufferAllocationProto_AssignedDefaultTypeInternal _BufferAllocationProto_Assigned_default_instance_;

inline constexpr StackFrameIndexProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : file_names_{},
        function_names_{},
        file_locations_{},
        stack_frames_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StackFrameIndexProto::StackFrameIndexProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StackFrameIndexProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackFrameIndexProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackFrameIndexProtoDefaultTypeInternal() {}
  union {
    StackFrameIndexProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackFrameIndexProtoDefaultTypeInternal _StackFrameIndexProto_default_instance_;

inline constexpr LogicalBufferProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        defined_at_{nullptr},
        id_{::int64_t{0}},
        size_{::int64_t{0}},
        color_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LogicalBufferProto::LogicalBufferProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogicalBufferProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogicalBufferProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogicalBufferProtoDefaultTypeInternal() {}
  union {
    LogicalBufferProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogicalBufferProtoDefaultTypeInternal _LogicalBufferProto_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : HloScheduleProto_SequencesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : HloScheduleProto_SequencesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct HloScheduleProto_SequencesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloScheduleProto_SequencesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloScheduleProto_SequencesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    HloScheduleProto_SequencesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloScheduleProto_SequencesEntry_DoNotUseDefaultTypeInternal _HloScheduleProto_SequencesEntry_DoNotUse_default_instance_;

inline constexpr HloPassMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dump_filenames_{},
        module_group_module_ids_{},
        _module_group_module_ids_cached_byte_size_{0},
        pass_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pipeline_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        custom_metadata_{nullptr},
        pass_id_{::int64_t{0}},
        module_id_{::int64_t{0}},
        start_timestamp_usec_{::int64_t{0}},
        end_timestamp_usec_{::int64_t{0}},
        module_changed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HloPassMetadata::HloPassMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloPassMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloPassMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloPassMetadataDefaultTypeInternal() {}
  union {
    HloPassMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloPassMetadataDefaultTypeInternal _HloPassMetadata_default_instance_;

inline constexpr HloInputOutputAliasProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloInputOutputAliasProto::HloInputOutputAliasProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloInputOutputAliasProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloInputOutputAliasProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloInputOutputAliasProtoDefaultTypeInternal() {}
  union {
    HloInputOutputAliasProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloInputOutputAliasProtoDefaultTypeInternal _HloInputOutputAliasProto_default_instance_;

inline constexpr HloBufferDonorProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloBufferDonorProto::HloBufferDonorProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloBufferDonorProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloBufferDonorProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloBufferDonorProtoDefaultTypeInternal() {}
  union {
    HloBufferDonorProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloBufferDonorProtoDefaultTypeInternal _HloBufferDonorProto_default_instance_;

inline constexpr HeapSimulatorTrace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : events_{},
        buffer_allocation_index_{::int64_t{0}},
        whole_module_simulation_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HeapSimulatorTrace::HeapSimulatorTrace(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeapSimulatorTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeapSimulatorTraceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeapSimulatorTraceDefaultTypeInternal() {}
  union {
    HeapSimulatorTrace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeapSimulatorTraceDefaultTypeInternal _HeapSimulatorTrace_default_instance_;

inline constexpr BufferAssignmentProto_BufferAlias::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{nullptr},
        source_buffer_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR BufferAssignmentProto_BufferAlias::BufferAssignmentProto_BufferAlias(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BufferAssignmentProto_BufferAliasDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BufferAssignmentProto_BufferAliasDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BufferAssignmentProto_BufferAliasDefaultTypeInternal() {}
  union {
    BufferAssignmentProto_BufferAlias _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BufferAssignmentProto_BufferAliasDefaultTypeInternal _BufferAssignmentProto_BufferAlias_default_instance_;

inline constexpr BufferAllocationProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : assigned_{},
        parameter_shape_index_{},
        _parameter_shape_index_cached_byte_size_{0},
        index_{::int64_t{0}},
        size_{::int64_t{0}},
        parameter_number_{::int64_t{0}},
        maybe_live_out_{false},
        is_thread_local_{false},
        is_tuple_{false},
        is_entry_computation_parameter_{false},
        is_constant_{false},
        color_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BufferAllocationProto::BufferAllocationProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BufferAllocationProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BufferAllocationProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BufferAllocationProtoDefaultTypeInternal() {}
  union {
    BufferAllocationProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BufferAllocationProtoDefaultTypeInternal _BufferAllocationProto_default_instance_;

inline constexpr HloScheduleProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sequences_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloScheduleProto::HloScheduleProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloScheduleProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloScheduleProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloScheduleProtoDefaultTypeInternal() {}
  union {
    HloScheduleProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloScheduleProtoDefaultTypeInternal _HloScheduleProto_default_instance_;

inline constexpr HloModuleMetadataProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : partitioned_module_ids_{},
        _partitioned_module_ids_cached_byte_size_{0},
        pass_metadata_{},
        module_group_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        canonical_module_id_{::int64_t{0}},
        original_module_id_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloModuleMetadataProto::HloModuleMetadataProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloModuleMetadataProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloModuleMetadataProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloModuleMetadataProtoDefaultTypeInternal() {}
  union {
    HloModuleMetadataProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloModuleMetadataProtoDefaultTypeInternal _HloModuleMetadataProto_default_instance_;

inline constexpr BufferAssignmentProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logical_buffers_{},
        buffer_aliases_{},
        buffer_allocations_{},
        heap_simulator_traces_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BufferAssignmentProto::BufferAssignmentProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BufferAssignmentProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BufferAssignmentProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BufferAssignmentProtoDefaultTypeInternal() {}
  union {
    BufferAssignmentProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BufferAssignmentProtoDefaultTypeInternal _BufferAssignmentProto_default_instance_;

inline constexpr HloInstructionProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dimensions_{},
        _dimensions_cached_byte_size_{0},
        slice_dimensions_{},
        dynamic_slice_sizes_{},
        _dynamic_slice_sizes_cached_byte_size_{0},
        fft_length_{},
        _fft_length_cached_byte_size_{0},
        gather_slice_sizes_{},
        _gather_slice_sizes_cached_byte_size_{0},
        operand_ids_{},
        _operand_ids_cached_byte_size_{0},
        control_predecessor_ids_{},
        _control_predecessor_ids_cached_byte_size_{0},
        called_computation_ids_{},
        _called_computation_ids_cached_byte_size_{0},
        replica_groups_{},
        source_target_pairs_{},
        operand_shapes_with_layout_{},
        output_operand_aliasing_{},
        dot_sparsity_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        opcode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fusion_kind_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        outfeed_config_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        infeed_config_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        custom_call_target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        backend_config_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comparison_direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        comparison_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        async_execution_thread_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shape_{nullptr},
        metadata_{nullptr},
        literal_{nullptr},
        window_{nullptr},
        convolution_dimension_numbers_{nullptr},
        padding_config_{nullptr},
        outfeed_shape_{nullptr},
        dot_dimension_numbers_{nullptr},
        gather_dimension_numbers_{nullptr},
        sharding_{nullptr},
        scatter_dimension_numbers_{nullptr},
        precision_config_{nullptr},
        domain_entry_sharding_{nullptr},
        domain_exit_sharding_{nullptr},
        triangular_solve_options_{nullptr},
        parameter_replication_{nullptr},
        cholesky_options_{nullptr},
        frontend_attributes_{nullptr},
        statistics_viz_{nullptr},
        collective_device_list_{nullptr},
        original_value_{nullptr},
        parameter_number_{::int64_t{0}},
        tuple_index_{::int64_t{0}},
        exponent_bits_{0},
        mantissa_bits_{0},
        distribution_{static_cast< ::xla::RandomDistribution >(0)},
        epsilon_{0},
        feature_index_{::int64_t{0}},
        channel_id_{::int64_t{0}},
        id_{::int64_t{0}},
        all_reduce_id_{::int64_t{0}},
        feature_group_count_{::int64_t{0}},
        fft_type_{static_cast< ::xla::FftType >(0)},
        use_global_device_ids_{false},
        is_host_transfer_{false},
        is_stable_{false},
        constrain_layout_{false},
        batch_group_count_{::int64_t{0}},
        delta_{::int64_t{0}},
        custom_call_has_side_effect_{false},
        indices_are_sorted_{false},
        unique_indices_{false},
        is_cross_program_prefetch_{false},
        rng_algorithm_{static_cast< ::xla::RandomAlgorithm >(0)},
        padding_type_{static_cast< ::xla::PaddingType >(0)},
        custom_call_schedule_{static_cast< ::xla::CustomCallSchedule >(0)},
        k_{::int64_t{0}},
        custom_call_api_version_{static_cast< ::xla::CustomCallApiVersion >(0)},
        largest_{false},
        is_composite_{false},
        optional_cross_program_prefetch_index_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR HloInstructionProto::HloInstructionProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloInstructionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloInstructionProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloInstructionProtoDefaultTypeInternal() {}
  union {
    HloInstructionProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloInstructionProtoDefaultTypeInternal _HloInstructionProto_default_instance_;

inline constexpr HloComputationProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instructions_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        execution_thread_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        program_shape_{nullptr},
        id_{::int64_t{0}},
        root_id_{::int64_t{0}},
        is_fusion_computation_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HloComputationProto::HloComputationProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloComputationProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloComputationProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloComputationProtoDefaultTypeInternal() {}
  union {
    HloComputationProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloComputationProtoDefaultTypeInternal _HloComputationProto_default_instance_;

inline constexpr HloModuleProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        computations_{},
        cross_program_prefetches_{},
        profile_info_{},
        spmd_parameters_shardings_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entry_computation_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_program_shape_{nullptr},
        schedule_{nullptr},
        input_output_alias_{nullptr},
        spmd_output_sharding_{nullptr},
        device_assignment_{nullptr},
        stack_frame_index_{nullptr},
        buffer_donor_{nullptr},
        frontend_attributes_{nullptr},
        id_{::int64_t{0}},
        entry_computation_id_{::int64_t{0}},
        is_dynamic_{false},
        use_auto_spmd_partitioning_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HloModuleProto::HloModuleProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloModuleProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloModuleProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloModuleProtoDefaultTypeInternal() {}
  union {
    HloModuleProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloModuleProtoDefaultTypeInternal _HloModuleProto_default_instance_;

inline constexpr HloProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hlo_module_{nullptr},
        buffer_assignment_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HloProto::HloProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloProtoDefaultTypeInternal() {}
  union {
    HloProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloProtoDefaultTypeInternal _HloProto_default_instance_;

inline constexpr HloModuleGroupProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hlo_modules_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HloModuleGroupProto::HloModuleGroupProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloModuleGroupProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloModuleGroupProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloModuleGroupProtoDefaultTypeInternal() {}
  union {
    HloModuleGroupProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloModuleGroupProtoDefaultTypeInternal _HloModuleGroupProto_default_instance_;

inline constexpr HloSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        arguments_{},
        execution_platform_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hlo_{nullptr},
        result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HloSnapshot::HloSnapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HloSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloSnapshotDefaultTypeInternal() {}
  union {
    HloSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloSnapshotDefaultTypeInternal _HloSnapshot_default_instance_;
}  // namespace xla
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_xla_2fservice_2fhlo_2eproto = nullptr;
const ::uint32_t
    TableStruct_xla_2fservice_2fhlo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto_SliceDimensions, _impl_.stride_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.opcode_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.literal_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.parameter_number_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.fusion_kind_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.tuple_index_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.dimensions_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.window_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.convolution_dimension_numbers_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.feature_group_count_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.batch_group_count_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.slice_dimensions_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.exponent_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.mantissa_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.dynamic_slice_sizes_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.padding_config_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.outfeed_config_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.distribution_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.epsilon_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.feature_index_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.infeed_config_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.custom_call_target_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.outfeed_shape_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.dot_dimension_numbers_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.fft_type_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.fft_length_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.comparison_direction_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.gather_dimension_numbers_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.gather_slice_sizes_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.operand_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.control_predecessor_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.called_computation_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.sharding_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.backend_config_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.replica_groups_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.all_reduce_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.use_global_device_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.is_host_transfer_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.is_stable_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.scatter_dimension_numbers_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.precision_config_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.source_target_pairs_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.domain_entry_sharding_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.domain_exit_sharding_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.constrain_layout_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.operand_shapes_with_layout_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.triangular_solve_options_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.cholesky_options_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.parameter_replication_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.custom_call_has_side_effect_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.output_operand_aliasing_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.custom_call_schedule_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.delta_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.indices_are_sorted_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.frontend_attributes_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.unique_indices_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.rng_algorithm_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.comparison_type_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.is_cross_program_prefetch_),
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.padding_type_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.custom_call_api_version_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.async_execution_thread_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.largest_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.statistics_viz_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.dot_sparsity_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.collective_device_list_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.original_value_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.is_composite_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_.optional_cross_program_prefetch_index_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        5,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        6,
        7,
        ~0u,
        ~0u,
        ~0u,
        8,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        9,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        10,
        11,
        ~0u,
        12,
        13,
        ~0u,
        ~0u,
        14,
        16,
        15,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        17,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        18,
        ~0u,
        19,
        20,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.instructions_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.program_shape_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.root_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.is_fusion_computation_),
        PROTOBUF_FIELD_OFFSET(::xla::HloComputationProto, _impl_.execution_thread_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto_InstructionSequence, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto_InstructionSequence, _impl_.instruction_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto_SequencesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloScheduleProto, _impl_.sequences_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, _impl_.output_shape_index_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_number_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_shape_index_),
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto_AliasEntryProto, _impl_.kind_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloInputOutputAliasProto, _impl_.entries_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloBufferDonorProto_BufferDonorEntryProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_number_),
        PROTOBUF_FIELD_OFFSET(::xla::HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_shape_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloBufferDonorProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloBufferDonorProto, _impl_.entries_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::CrossProgramPrefetch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::CrossProgramPrefetch, _impl_.parameter_),
        PROTOBUF_FIELD_OFFSET(::xla::CrossProgramPrefetch, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::xla::CrossProgramPrefetch, _impl_.offset_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_FileLocation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_FileLocation, _impl_.file_name_id_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_FileLocation, _impl_.function_name_id_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_FileLocation, _impl_.line_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_FileLocation, _impl_.column_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_StackFrame, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_StackFrame, _impl_.file_location_id_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto_StackFrame, _impl_.parent_frame_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto, _impl_.file_names_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto, _impl_.function_names_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto, _impl_.file_locations_),
        PROTOBUF_FIELD_OFFSET(::xla::StackFrameIndexProto, _impl_.stack_frames_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _impl_.profile_type_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _impl_.relative_speedup_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _impl_.profile_source_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _impl_.compilation_event_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto_ProfileInfo, _impl_.fingerprint_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.entry_computation_name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.entry_computation_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.computations_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.host_program_shape_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.schedule_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.input_output_alias_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.buffer_donor_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.cross_program_prefetches_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.is_dynamic_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.spmd_output_sharding_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.spmd_parameters_shardings_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.use_auto_spmd_partitioning_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.profile_info_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.device_assignment_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.stack_frame_index_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleProto, _impl_.frontend_attributes_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        2,
        6,
        ~0u,
        ~0u,
        3,
        ~0u,
        ~0u,
        ~0u,
        4,
        5,
        7,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto_Location, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto_Location, _impl_.instruction_name_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto_Location, _impl_.instruction_id_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto_Location, _impl_.shape_index_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto, _impl_.defined_at_),
        PROTOBUF_FIELD_OFFSET(::xla::LogicalBufferProto, _impl_.color_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, _impl_.logical_buffer_id_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto_Assigned, _impl_.size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.is_thread_local_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.is_tuple_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.is_entry_computation_parameter_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.is_constant_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.parameter_number_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.parameter_shape_index_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.maybe_live_out_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAllocationProto, _impl_.assigned_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _impl_.buffer_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _impl_.computation_name_),
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _impl_.instruction_name_),
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace_Event, _impl_.share_with_canonical_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace, _impl_.events_),
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace, _impl_.whole_module_simulation_),
        PROTOBUF_FIELD_OFFSET(::xla::HeapSimulatorTrace, _impl_.buffer_allocation_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleGroupProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleGroupProto, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleGroupProto, _impl_.hlo_modules_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, _impl_.source_buffer_id_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto_BufferAlias, _impl_.location_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto, _impl_.logical_buffers_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto, _impl_.buffer_aliases_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto, _impl_.buffer_allocations_),
        PROTOBUF_FIELD_OFFSET(::xla::BufferAssignmentProto, _impl_.heap_simulator_traces_),
        PROTOBUF_FIELD_OFFSET(::xla::HloProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloProto, _impl_.hlo_module_),
        PROTOBUF_FIELD_OFFSET(::xla::HloProto, _impl_.buffer_assignment_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::xla::HloSnapshot, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloSnapshot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloSnapshot, _impl_.hlo_),
        PROTOBUF_FIELD_OFFSET(::xla::HloSnapshot, _impl_.arguments_),
        PROTOBUF_FIELD_OFFSET(::xla::HloSnapshot, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::xla::HloSnapshot, _impl_.execution_platform_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleMetadataProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleMetadataProto, _impl_.canonical_module_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleMetadataProto, _impl_.module_group_name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleMetadataProto, _impl_.original_module_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleMetadataProto, _impl_.partitioned_module_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloModuleMetadataProto, _impl_.pass_metadata_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.pass_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.pass_name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.pipeline_name_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.dump_filenames_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.module_changed_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.module_id_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.module_group_module_ids_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.start_timestamp_usec_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.end_timestamp_usec_),
        PROTOBUF_FIELD_OFFSET(::xla::HloPassMetadata, _impl_.custom_metadata_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::xla::HloInstructionProto_SliceDimensions)},
        {11, 94, -1, sizeof(::xla::HloInstructionProto)},
        {168, 183, -1, sizeof(::xla::HloComputationProto)},
        {190, -1, -1, sizeof(::xla::HloScheduleProto_InstructionSequence)},
        {199, 209, -1, sizeof(::xla::HloScheduleProto_SequencesEntry_DoNotUse)},
        {211, -1, -1, sizeof(::xla::HloScheduleProto)},
        {220, -1, -1, sizeof(::xla::HloInputOutputAliasProto_AliasEntryProto)},
        {232, -1, -1, sizeof(::xla::HloInputOutputAliasProto)},
        {241, -1, -1, sizeof(::xla::HloBufferDonorProto_BufferDonorEntryProto)},
        {251, -1, -1, sizeof(::xla::HloBufferDonorProto)},
        {260, -1, -1, sizeof(::xla::CrossProgramPrefetch)},
        {271, -1, -1, sizeof(::xla::StackFrameIndexProto_FileLocation)},
        {283, -1, -1, sizeof(::xla::StackFrameIndexProto_StackFrame)},
        {293, -1, -1, sizeof(::xla::StackFrameIndexProto)},
        {305, -1, -1, sizeof(::xla::HloModuleProto_ProfileInfo)},
        {318, 344, -1, sizeof(::xla::HloModuleProto)},
        {362, -1, -1, sizeof(::xla::LogicalBufferProto_Location)},
        {373, 385, -1, sizeof(::xla::LogicalBufferProto)},
        {389, -1, -1, sizeof(::xla::BufferAllocationProto_Assigned)},
        {400, -1, -1, sizeof(::xla::BufferAllocationProto)},
        {419, -1, -1, sizeof(::xla::HeapSimulatorTrace_Event)},
        {432, -1, -1, sizeof(::xla::HeapSimulatorTrace)},
        {443, -1, -1, sizeof(::xla::HloModuleGroupProto)},
        {453, 463, -1, sizeof(::xla::BufferAssignmentProto_BufferAlias)},
        {465, -1, -1, sizeof(::xla::BufferAssignmentProto)},
        {477, 487, -1, sizeof(::xla::HloProto)},
        {489, 501, -1, sizeof(::xla::HloSnapshot)},
        {505, -1, -1, sizeof(::xla::HloModuleMetadataProto)},
        {518, 536, -1, sizeof(::xla::HloPassMetadata)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::xla::_HloInstructionProto_SliceDimensions_default_instance_._instance,
    &::xla::_HloInstructionProto_default_instance_._instance,
    &::xla::_HloComputationProto_default_instance_._instance,
    &::xla::_HloScheduleProto_InstructionSequence_default_instance_._instance,
    &::xla::_HloScheduleProto_SequencesEntry_DoNotUse_default_instance_._instance,
    &::xla::_HloScheduleProto_default_instance_._instance,
    &::xla::_HloInputOutputAliasProto_AliasEntryProto_default_instance_._instance,
    &::xla::_HloInputOutputAliasProto_default_instance_._instance,
    &::xla::_HloBufferDonorProto_BufferDonorEntryProto_default_instance_._instance,
    &::xla::_HloBufferDonorProto_default_instance_._instance,
    &::xla::_CrossProgramPrefetch_default_instance_._instance,
    &::xla::_StackFrameIndexProto_FileLocation_default_instance_._instance,
    &::xla::_StackFrameIndexProto_StackFrame_default_instance_._instance,
    &::xla::_StackFrameIndexProto_default_instance_._instance,
    &::xla::_HloModuleProto_ProfileInfo_default_instance_._instance,
    &::xla::_HloModuleProto_default_instance_._instance,
    &::xla::_LogicalBufferProto_Location_default_instance_._instance,
    &::xla::_LogicalBufferProto_default_instance_._instance,
    &::xla::_BufferAllocationProto_Assigned_default_instance_._instance,
    &::xla::_BufferAllocationProto_default_instance_._instance,
    &::xla::_HeapSimulatorTrace_Event_default_instance_._instance,
    &::xla::_HeapSimulatorTrace_default_instance_._instance,
    &::xla::_HloModuleGroupProto_default_instance_._instance,
    &::xla::_BufferAssignmentProto_BufferAlias_default_instance_._instance,
    &::xla::_BufferAssignmentProto_default_instance_._instance,
    &::xla::_HloProto_default_instance_._instance,
    &::xla::_HloSnapshot_default_instance_._instance,
    &::xla::_HloModuleMetadataProto_default_instance_._instance,
    &::xla::_HloPassMetadata_default_instance_._instance,
};
const char descriptor_table_protodef_xla_2fservice_2fhlo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025xla/service/hlo.proto\022\003xla\032\031google/pro"
    "tobuf/any.proto\032\022xla/xla_data.proto\"\320\027\n\023"
    "HloInstructionProto\022\014\n\004name\030\001 \001(\t\022\016\n\006opc"
    "ode\030\002 \001(\t\022\036\n\005shape\030\003 \001(\0132\017.xla.ShapeProt"
    "o\022!\n\010metadata\030\007 \001(\0132\017.xla.OpMetadata\022\"\n\007"
    "literal\030\010 \001(\0132\021.xla.LiteralProto\022\030\n\020para"
    "meter_number\030\t \001(\003\022\023\n\013fusion_kind\030\013 \001(\t\022"
    "\023\n\013tuple_index\030\r \001(\003\022\022\n\ndimensions\030\016 \003(\003"
    "\022\033\n\006window\030\017 \001(\0132\013.xla.Window\022G\n\035convolu"
    "tion_dimension_numbers\030\020 \001(\0132 .xla.Convo"
    "lutionDimensionNumbers\022\033\n\023feature_group_"
    "count\0302 \001(\003\022\031\n\021batch_group_count\030: \001(\003\022B"
    "\n\020slice_dimensions\030\021 \003(\0132(.xla.HloInstru"
    "ctionProto.SliceDimensions\022\025\n\rexponent_b"
    "its\030\022 \001(\005\022\025\n\rmantissa_bits\030\023 \001(\005\022\033\n\023dyna"
    "mic_slice_sizes\030\024 \003(\003\022*\n\016padding_config\030"
    "\025 \001(\0132\022.xla.PaddingConfig\022\026\n\016outfeed_con"
    "fig\030\026 \001(\014\022-\n\014distribution\030\027 \001(\0162\027.xla.Ra"
    "ndomDistribution\022\017\n\007epsilon\030\030 \001(\002\022\025\n\rfea"
    "ture_index\030\031 \001(\003\022\022\n\nchannel_id\030\032 \001(\003\022\025\n\r"
    "infeed_config\030\033 \001(\014\022\032\n\022custom_call_targe"
    "t\030\034 \001(\t\022&\n\routfeed_shape\030\035 \001(\0132\017.xla.Sha"
    "peProto\0227\n\025dot_dimension_numbers\030\036 \001(\0132\030"
    ".xla.DotDimensionNumbers\022\036\n\010fft_type\030\037 \001"
    "(\0162\014.xla.FftType\022\022\n\nfft_length\030  \003(\003\022\034\n\024"
    "comparison_direction\030\? \001(\t\022=\n\030gather_dim"
    "ension_numbers\030! \001(\0132\033.xla.GatherDimensi"
    "onNumbers\022\032\n\022gather_slice_sizes\030\" \003(\003\022\n\n"
    "\002id\030# \001(\003\022\023\n\013operand_ids\030$ \003(\003\022\037\n\027contro"
    "l_predecessor_ids\030% \003(\003\022\036\n\026called_comput"
    "ation_ids\030& \003(\003\022!\n\010sharding\030( \001(\0132\017.xla."
    "OpSharding\022\026\n\016backend_config\030+ \001(\014\022-\n\016re"
    "plica_groups\0301 \003(\0132\021.xla.ReplicaGroupB\002\030"
    "\001\022\031\n\rall_reduce_id\030- \001(\003B\002\030\001\022\035\n\025use_glob"
    "al_device_ids\030G \001(\010\022\030\n\020is_host_transfer\030"
    "/ \001(\010\022\021\n\tis_stable\030< \001(\010\022\?\n\031scatter_dime"
    "nsion_numbers\0300 \001(\0132\034.xla.ScatterDimensi"
    "onNumbers\022.\n\020precision_config\0303 \001(\0132\024.xl"
    "a.PrecisionConfig\022.\n\023source_target_pairs"
    "\0304 \003(\0132\021.xla.SourceTarget\022.\n\025domain_entr"
    "y_sharding\0306 \001(\0132\017.xla.OpSharding\022-\n\024dom"
    "ain_exit_sharding\0307 \001(\0132\017.xla.OpSharding"
    "\022\030\n\020constrain_layout\0308 \001(\010\0223\n\032operand_sh"
    "apes_with_layout\0309 \003(\0132\017.xla.ShapeProto\022"
    "=\n\030triangular_solve_options\030; \001(\0132\033.xla."
    "TriangularSolveOptions\022.\n\020cholesky_optio"
    "ns\030> \001(\0132\024.xla.CholeskyOptions\0228\n\025parame"
    "ter_replication\030= \001(\0132\031.xla.ParameterRep"
    "lication\022#\n\033custom_call_has_side_effect\030"
    "A \001(\010\022;\n\027output_operand_aliasing\030J \003(\0132\032"
    ".xla.OutputOperandAliasing\0225\n\024custom_cal"
    "l_schedule\030L \001(\0162\027.xla.CustomCallSchedul"
    "e\022\r\n\005delta\030B \001(\003\022\032\n\022indices_are_sorted\030C"
    " \001(\010\0224\n\023frontend_attributes\030D \001(\0132\027.xla."
    "FrontendAttributes\022\026\n\016unique_indices\030E \001"
    "(\010\022+\n\rrng_algorithm\030F \001(\0162\024.xla.RandomAl"
    "gorithm\022\027\n\017comparison_type\030H \001(\t\022%\n\031is_c"
    "ross_program_prefetch\030I \001(\010B\002\030\001\022&\n\034cross"
    "_program_prefetch_index\030P \001(\005H\000\022&\n\014paddi"
    "ng_type\030K \001(\0162\020.xla.PaddingType\022:\n\027custo"
    "m_call_api_version\030M \001(\0162\031.xla.CustomCal"
    "lApiVersion\022\036\n\026async_execution_thread\030O "
    "\001(\t\022\t\n\001k\030Q \001(\003\022\017\n\007largest\030U \001(\010\022*\n\016stati"
    "stics_viz\030R \001(\0132\022.xla.StatisticsViz\022-\n\014d"
    "ot_sparsity\030V \003(\0132\027.xla.SparsityDescript"
    "or\022>\n\026collective_device_list\030W \001(\0132\036.xla"
    ".CollectiveDeviceListProto\022/\n\016original_v"
    "alue\030X \001(\0132\027.xla.OriginalValueProto\022\024\n\014i"
    "s_composite\030Y \001(\010\032\?\n\017SliceDimensions\022\r\n\005"
    "start\030\001 \001(\003\022\r\n\005limit\030\002 \001(\003\022\016\n\006stride\030\003 \001"
    "(\003B\'\n%optional_cross_program_prefetch_in"
    "dexJ\004\010\n\020\013J\004\010\014\020\rJ\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007J\004\010,\020-J"
    "\004\0105\0206J\004\010.\020/J\004\010)\020*J\004\010*\020+J\004\010@\020AJ\004\010N\020OJ\004\010S\020"
    "TJ\004\010T\020UR\016parameter_nameR\036fused_instructi"
    "ons_computationR\roperand_namesR\031control_"
    "predecessor_namesR\030called_computation_na"
    "mesR\021replica_group_idsR\022custom_call_opaq"
    "ueR\022all_reduce_barrier\"\351\001\n\023HloComputatio"
    "nProto\022\014\n\004name\030\001 \001(\t\022.\n\014instructions\030\002 \003"
    "(\0132\030.xla.HloInstructionProto\022-\n\rprogram_"
    "shape\030\004 \001(\0132\026.xla.ProgramShapeProto\022\n\n\002i"
    "d\030\005 \001(\003\022\017\n\007root_id\030\006 \001(\003\022\035\n\025is_fusion_co"
    "mputation\030\007 \001(\010\022\030\n\020execution_thread\030\010 \001("
    "\tJ\004\010\003\020\004R\troot_name\"\330\001\n\020HloScheduleProto\022"
    "7\n\tsequences\030\001 \003(\0132$.xla.HloScheduleProt"
    "o.SequencesEntry\032.\n\023InstructionSequence\022"
    "\027\n\017instruction_ids\030\001 \003(\003\032[\n\016SequencesEnt"
    "ry\022\013\n\003key\030\001 \001(\003\0228\n\005value\030\002 \001(\0132).xla.Hlo"
    "ScheduleProto.InstructionSequence:\0028\001\"\333\001"
    "\n\030HloInputOutputAliasProto\022>\n\007entries\030\001 "
    "\003(\0132-.xla.HloInputOutputAliasProto.Alias"
    "EntryProto\032\177\n\017AliasEntryProto\022\032\n\022output_"
    "shape_index\030\001 \003(\003\022\030\n\020parameter_number\030\002 "
    "\001(\003\022\035\n\025parameter_shape_index\030\003 \003(\003\022\027\n\004ki"
    "nd\030\004 \001(\0162\t.xla.Kind\"\250\001\n\023HloBufferDonorPr"
    "oto\022\?\n\007entries\030\001 \003(\0132..xla.HloBufferDono"
    "rProto.BufferDonorEntryProto\032P\n\025BufferDo"
    "norEntryProto\022\030\n\020parameter_number\030\001 \001(\003\022"
    "\035\n\025parameter_shape_index\030\002 \003(\003\"H\n\024CrossP"
    "rogramPrefetch\022\021\n\tparameter\030\001 \001(\003\022\r\n\005ind"
    "ex\030\002 \003(\003\022\016\n\006offset\030\003 \001(\003\"\335\002\n\024StackFrameI"
    "ndexProto\022\022\n\nfile_names\030\001 \003(\t\022\026\n\016functio"
    "n_names\030\002 \003(\t\022>\n\016file_locations\030\003 \003(\0132&."
    "xla.StackFrameIndexProto.FileLocation\022:\n"
    "\014stack_frames\030\004 \003(\0132$.xla.StackFrameInde"
    "xProto.StackFrame\032\\\n\014FileLocation\022\024\n\014fil"
    "e_name_id\030\001 \001(\005\022\030\n\020function_name_id\030\002 \001("
    "\005\022\014\n\004line\030\003 \001(\005\022\016\n\006column\030\004 \001(\005\032\?\n\nStack"
    "Frame\022\030\n\020file_location_id\030\001 \001(\005\022\027\n\017paren"
    "t_frame_id\030\002 \001(\005\"\333\010\n\016HloModuleProto\022\014\n\004n"
    "ame\030\001 \001(\t\022\036\n\026entry_computation_name\030\002 \001("
    "\t\022\034\n\024entry_computation_id\030\006 \001(\003\022.\n\014compu"
    "tations\030\003 \003(\0132\030.xla.HloComputationProto\022"
    "2\n\022host_program_shape\030\004 \001(\0132\026.xla.Progra"
    "mShapeProto\022\n\n\002id\030\005 \001(\003\022\'\n\010schedule\030\007 \001("
    "\0132\025.xla.HloScheduleProto\0229\n\022input_output"
    "_alias\030\010 \001(\0132\035.xla.HloInputOutputAliasPr"
    "oto\022.\n\014buffer_donor\030\022 \001(\0132\030.xla.HloBuffe"
    "rDonorProto\022;\n\030cross_program_prefetches\030"
    "\n \003(\0132\031.xla.CrossProgramPrefetch\022\022\n\nis_d"
    "ynamic\030\013 \001(\010\022-\n\024spmd_output_sharding\030\014 \001"
    "(\0132\017.xla.OpSharding\0222\n\031spmd_parameters_s"
    "hardings\030\016 \003(\0132\017.xla.OpSharding\022\"\n\032use_a"
    "uto_spmd_partitioning\030\020 \001(\010\0225\n\014profile_i"
    "nfo\030\r \003(\0132\037.xla.HloModuleProto.ProfileIn"
    "fo\0225\n\021device_assignment\030\017 \001(\0132\032.xla.Devi"
    "ceAssignmentProto\0224\n\021stack_frame_index\030\021"
    " \001(\0132\031.xla.StackFrameIndexProto\0224\n\023front"
    "end_attributes\030\023 \001(\0132\027.xla.FrontendAttri"
    "butes\032\321\001\n\013ProfileInfo\0225\n\014profile_type\030\001 "
    "\001(\0162\037.xla.HloModuleProto.ProfileType\022\030\n\020"
    "relative_speedup\030\002 \001(\001\022*\n\016profile_source"
    "\030\003 \001(\0162\022.xla.ProfileSource\0220\n\021compilatio"
    "n_event\030\004 \001(\0162\025.xla.CompilationEvent\022\023\n\013"
    "fingerprint\030\005 \001(\t\"R\n\013ProfileType\022\013\n\007INVA"
    "LID\020\000\022\010\n\004FLAG\020\001\022\n\n\006FUSION\020\002\022\n\n\006LAYOUT\020\003\022"
    "\007\n\003DOT\020\004\022\013\n\007FLAGNET\020\005J\004\010\t\020\nR\031dynamic_par"
    "ameter_binding\"\320\001\n\022LogicalBufferProto\022\n\n"
    "\002id\030\001 \001(\003\022\014\n\004size\030\002 \001(\003\0224\n\ndefined_at\030\003 "
    "\001(\0132 .xla.LogicalBufferProto.Location\022\r\n"
    "\005color\030\004 \001(\003\032[\n\010Location\022\034\n\020instruction_"
    "name\030\002 \001(\tB\002\030\001\022\026\n\016instruction_id\030\004 \001(\003\022\023"
    "\n\013shape_index\030\003 \003(\003J\004\010\001\020\002\"\370\002\n\025BufferAllo"
    "cationProto\022\r\n\005index\030\001 \001(\003\022\014\n\004size\030\002 \001(\003"
    "\022\027\n\017is_thread_local\030\003 \001(\010\022\020\n\010is_tuple\030\013 "
    "\001(\010\022&\n\036is_entry_computation_parameter\030\005 "
    "\001(\010\022\023\n\013is_constant\030\014 \001(\010\022\030\n\020parameter_nu"
    "mber\030\006 \001(\003\022\035\n\025parameter_shape_index\030\n \003("
    "\003\022\026\n\016maybe_live_out\030\007 \001(\010\022\r\n\005color\030\010 \001(\003"
    "\0225\n\010assigned\030\t \003(\0132#.xla.BufferAllocatio"
    "nProto.Assigned\032C\n\010Assigned\022\031\n\021logical_b"
    "uffer_id\030\001 \001(\003\022\016\n\006offset\030\002 \001(\003\022\014\n\004size\030\003"
    " \001(\003\"\326\002\n\022HeapSimulatorTrace\022-\n\006events\030\001 "
    "\003(\0132\035.xla.HeapSimulatorTrace.Event\022\037\n\027wh"
    "ole_module_simulation\030\002 \001(\010\022\037\n\027buffer_al"
    "location_index\030\003 \001(\003\032\316\001\n\005Event\0220\n\004kind\030\001"
    " \001(\0162\".xla.HeapSimulatorTrace.Event.Kind"
    "\022\021\n\tbuffer_id\030\002 \001(\003\022\030\n\020computation_name\030"
    "\003 \001(\t\022\030\n\020instruction_name\030\004 \001(\t\022\037\n\027share"
    "_with_canonical_id\030\005 \001(\003\"+\n\004Kind\022\t\n\005ALLO"
    "C\020\000\022\010\n\004FREE\020\001\022\016\n\nSHARE_WITH\020\002\"M\n\023HloModu"
    "leGroupProto\022\014\n\004name\030\001 \001(\t\022(\n\013hlo_module"
    "s\030\002 \003(\0132\023.xla.HloModuleProto\"\326\002\n\025BufferA"
    "ssignmentProto\0220\n\017logical_buffers\030\001 \003(\0132"
    "\027.xla.LogicalBufferProto\022>\n\016buffer_alias"
    "es\030\002 \003(\0132&.xla.BufferAssignmentProto.Buf"
    "ferAlias\0226\n\022buffer_allocations\030\003 \003(\0132\032.x"
    "la.BufferAllocationProto\0226\n\025heap_simulat"
    "or_traces\030\004 \003(\0132\027.xla.HeapSimulatorTrace"
    "\032[\n\013BufferAlias\022\030\n\020source_buffer_id\030\001 \001("
    "\003\0222\n\010location\030\002 \001(\0132 .xla.LogicalBufferP"
    "roto.Location\"~\n\010HloProto\022\'\n\nhlo_module\030"
    "\001 \001(\0132\023.xla.HloModuleProto\0225\n\021buffer_ass"
    "ignment\030\003 \001(\0132\032.xla.BufferAssignmentProt"
    "oJ\004\010\002\020\003R\014hlo_ordering\"\216\001\n\013HloSnapshot\022\032\n"
    "\003hlo\030\001 \001(\0132\r.xla.HloProto\022$\n\targuments\030\002"
    " \003(\0132\021.xla.LiteralProto\022!\n\006result\030\003 \001(\0132"
    "\021.xla.LiteralProto\022\032\n\022execution_platform"
    "\030\004 \001(\t\"\271\001\n\026HloModuleMetadataProto\022\033\n\023can"
    "onical_module_id\030\001 \001(\003\022\031\n\021module_group_n"
    "ame\030\002 \001(\t\022\032\n\022original_module_id\030\003 \001(\003\022\036\n"
    "\026partitioned_module_ids\030\004 \003(\003\022+\n\rpass_me"
    "tadata\030\005 \003(\0132\024.xla.HloPassMetadata\"\231\002\n\017H"
    "loPassMetadata\022\017\n\007pass_id\030\001 \001(\003\022\021\n\tpass_"
    "name\030\002 \001(\t\022\025\n\rpipeline_name\030\003 \001(\t\022\026\n\016dum"
    "p_filenames\030\004 \003(\t\022\026\n\016module_changed\030\005 \001("
    "\010\022\021\n\tmodule_id\030\006 \001(\003\022\037\n\027module_group_mod"
    "ule_ids\030\007 \003(\003\022\034\n\024start_timestamp_usec\030\010 "
    "\001(\003\022\032\n\022end_timestamp_usec\030\t \001(\003\022-\n\017custo"
    "m_metadata\030\n \001(\0132\024.google.protobuf.Any*S"
    "\n\022CustomCallSchedule\022\021\n\rSCHEDULE_NONE\020\000\022"
    "\023\n\017SCHEDULE_LATEST\020\001\022\025\n\021SCHEDULE_EARLIES"
    "T\020\002*\264\001\n\024CustomCallApiVersion\022\033\n\027API_VERS"
    "ION_UNSPECIFIED\020\000\022\030\n\024API_VERSION_ORIGINA"
    "L\020\001\022 \n\034API_VERSION_STATUS_RETURNING\020\002\022(\n"
    "$API_VERSION_STATUS_RETURNING_UNIFIED\020\003\022"
    "\031\n\025API_VERSION_TYPED_FFI\020\004*:\n\004Kind\022\023\n\017UN"
    "DEFINED_ALIAS\020\000\022\r\n\tMAY_ALIAS\020\001\022\016\n\nMUST_A"
    "LIAS\020\002B\003\370\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_xla_2fservice_2fhlo_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_xla_2fxla_5fdata_2eproto,
};
static ::absl::once_flag descriptor_table_xla_2fservice_2fhlo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_xla_2fservice_2fhlo_2eproto = {
    false,
    false,
    7939,
    descriptor_table_protodef_xla_2fservice_2fhlo_2eproto,
    "xla/service/hlo.proto",
    &descriptor_table_xla_2fservice_2fhlo_2eproto_once,
    descriptor_table_xla_2fservice_2fhlo_2eproto_deps,
    2,
    29,
    schemas,
    file_default_instances,
    TableStruct_xla_2fservice_2fhlo_2eproto::offsets,
    file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto,
    file_level_service_descriptors_xla_2fservice_2fhlo_2eproto,
};
namespace xla {
const ::google::protobuf::EnumDescriptor* HloModuleProto_ProfileType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_xla_2fservice_2fhlo_2eproto);
  return file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t HloModuleProto_ProfileType_internal_data_[] = {
    393216u, 0u, };
bool HloModuleProto_ProfileType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr HloModuleProto_ProfileType HloModuleProto::INVALID;
constexpr HloModuleProto_ProfileType HloModuleProto::FLAG;
constexpr HloModuleProto_ProfileType HloModuleProto::FUSION;
constexpr HloModuleProto_ProfileType HloModuleProto::LAYOUT;
constexpr HloModuleProto_ProfileType HloModuleProto::DOT;
constexpr HloModuleProto_ProfileType HloModuleProto::FLAGNET;
constexpr HloModuleProto_ProfileType HloModuleProto::ProfileType_MIN;
constexpr HloModuleProto_ProfileType HloModuleProto::ProfileType_MAX;
constexpr int HloModuleProto::ProfileType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* HeapSimulatorTrace_Event_Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_xla_2fservice_2fhlo_2eproto);
  return file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t HeapSimulatorTrace_Event_Kind_internal_data_[] = {
    196608u, 0u, };
bool HeapSimulatorTrace_Event_Kind_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::ALLOC;
constexpr HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::FREE;
constexpr HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::SHARE_WITH;
constexpr HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::Kind_MIN;
constexpr HeapSimulatorTrace_Event_Kind HeapSimulatorTrace_Event::Kind_MAX;
constexpr int HeapSimulatorTrace_Event::Kind_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CustomCallSchedule_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_xla_2fservice_2fhlo_2eproto);
  return file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t CustomCallSchedule_internal_data_[] = {
    196608u, 0u, };
bool CustomCallSchedule_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* CustomCallApiVersion_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_xla_2fservice_2fhlo_2eproto);
  return file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t CustomCallApiVersion_internal_data_[] = {
    327680u, 0u, };
bool CustomCallApiVersion_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_xla_2fservice_2fhlo_2eproto);
  return file_level_enum_descriptors_xla_2fservice_2fhlo_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t Kind_internal_data_[] = {
    196608u, 0u, };
bool Kind_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class HloInstructionProto_SliceDimensions::_Internal {
 public:
};

HloInstructionProto_SliceDimensions::HloInstructionProto_SliceDimensions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInstructionProto.SliceDimensions)
}
HloInstructionProto_SliceDimensions::HloInstructionProto_SliceDimensions(
    ::google::protobuf::Arena* arena, const HloInstructionProto_SliceDimensions& from)
    : HloInstructionProto_SliceDimensions(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HloInstructionProto_SliceDimensions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HloInstructionProto_SliceDimensions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_),
           0,
           offsetof(Impl_, stride_) -
               offsetof(Impl_, start_) +
               sizeof(Impl_::stride_));
}
HloInstructionProto_SliceDimensions::~HloInstructionProto_SliceDimensions() {
  // @@protoc_insertion_point(destructor:xla.HloInstructionProto.SliceDimensions)
  SharedDtor(*this);
}
inline void HloInstructionProto_SliceDimensions::SharedDtor(MessageLite& self) {
  HloInstructionProto_SliceDimensions& this_ = static_cast<HloInstructionProto_SliceDimensions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloInstructionProto_SliceDimensions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloInstructionProto_SliceDimensions(arena);
}
constexpr auto HloInstructionProto_SliceDimensions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HloInstructionProto_SliceDimensions),
                                            alignof(HloInstructionProto_SliceDimensions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloInstructionProto_SliceDimensions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloInstructionProto_SliceDimensions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloInstructionProto_SliceDimensions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloInstructionProto_SliceDimensions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloInstructionProto_SliceDimensions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloInstructionProto_SliceDimensions>(), &HloInstructionProto_SliceDimensions::ByteSizeLong,
            &HloInstructionProto_SliceDimensions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_._cached_size_),
        false,
    },
    &HloInstructionProto_SliceDimensions::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloInstructionProto_SliceDimensions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> HloInstructionProto_SliceDimensions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloInstructionProto_SliceDimensions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 start = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloInstructionProto_SliceDimensions, _impl_.start_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.start_)}},
    // int64 limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloInstructionProto_SliceDimensions, _impl_.limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.limit_)}},
    // int64 stride = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloInstructionProto_SliceDimensions, _impl_.stride_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.stride_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start = 1;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 limit = 2;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 stride = 3;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.stride_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HloInstructionProto_SliceDimensions::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInstructionProto.SliceDimensions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.start_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stride_) -
      reinterpret_cast<char*>(&_impl_.start_)) + sizeof(_impl_.stride_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloInstructionProto_SliceDimensions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloInstructionProto_SliceDimensions& this_ = static_cast<const HloInstructionProto_SliceDimensions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloInstructionProto_SliceDimensions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloInstructionProto_SliceDimensions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloInstructionProto.SliceDimensions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 start = 1;
          if (this_._internal_start() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_start(), target);
          }

          // int64 limit = 2;
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_limit(), target);
          }

          // int64 stride = 3;
          if (this_._internal_stride() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_stride(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloInstructionProto.SliceDimensions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloInstructionProto_SliceDimensions::ByteSizeLong(const MessageLite& base) {
          const HloInstructionProto_SliceDimensions& this_ = static_cast<const HloInstructionProto_SliceDimensions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloInstructionProto_SliceDimensions::ByteSizeLong() const {
          const HloInstructionProto_SliceDimensions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloInstructionProto.SliceDimensions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 start = 1;
            if (this_._internal_start() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start());
            }
            // int64 limit = 2;
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_limit());
            }
            // int64 stride = 3;
            if (this_._internal_stride() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_stride());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloInstructionProto_SliceDimensions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloInstructionProto_SliceDimensions*>(&to_msg);
  auto& from = static_cast<const HloInstructionProto_SliceDimensions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInstructionProto.SliceDimensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start() != 0) {
    _this->_impl_.start_ = from._impl_.start_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_stride() != 0) {
    _this->_impl_.stride_ = from._impl_.stride_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloInstructionProto_SliceDimensions::CopyFrom(const HloInstructionProto_SliceDimensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInstructionProto.SliceDimensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloInstructionProto_SliceDimensions::InternalSwap(HloInstructionProto_SliceDimensions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.stride_)
      + sizeof(HloInstructionProto_SliceDimensions::_impl_.stride_)
      - PROTOBUF_FIELD_OFFSET(HloInstructionProto_SliceDimensions, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata HloInstructionProto_SliceDimensions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloInstructionProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HloInstructionProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::xla::HloInstructionProto, _impl_._oneof_case_);
};

void HloInstructionProto::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_ != nullptr) _impl_.shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void HloInstructionProto::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void HloInstructionProto::clear_literal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.literal_ != nullptr) _impl_.literal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void HloInstructionProto::clear_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.window_ != nullptr) _impl_.window_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void HloInstructionProto::clear_convolution_dimension_numbers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.convolution_dimension_numbers_ != nullptr) _impl_.convolution_dimension_numbers_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void HloInstructionProto::clear_padding_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.padding_config_ != nullptr) _impl_.padding_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void HloInstructionProto::clear_outfeed_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outfeed_shape_ != nullptr) _impl_.outfeed_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void HloInstructionProto::clear_dot_dimension_numbers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dot_dimension_numbers_ != nullptr) _impl_.dot_dimension_numbers_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void HloInstructionProto::clear_gather_dimension_numbers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gather_dimension_numbers_ != nullptr) _impl_.gather_dimension_numbers_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void HloInstructionProto::clear_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sharding_ != nullptr) _impl_.sharding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void HloInstructionProto::clear_replica_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replica_groups_.Clear();
}
void HloInstructionProto::clear_scatter_dimension_numbers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.scatter_dimension_numbers_ != nullptr) _impl_.scatter_dimension_numbers_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void HloInstructionProto::clear_precision_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.precision_config_ != nullptr) _impl_.precision_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
void HloInstructionProto::clear_source_target_pairs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_target_pairs_.Clear();
}
void HloInstructionProto::clear_domain_entry_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.domain_entry_sharding_ != nullptr) _impl_.domain_entry_sharding_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
void HloInstructionProto::clear_domain_exit_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.domain_exit_sharding_ != nullptr) _impl_.domain_exit_sharding_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
void HloInstructionProto::clear_operand_shapes_with_layout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operand_shapes_with_layout_.Clear();
}
void HloInstructionProto::clear_triangular_solve_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.triangular_solve_options_ != nullptr) _impl_.triangular_solve_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
void HloInstructionProto::clear_cholesky_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cholesky_options_ != nullptr) _impl_.cholesky_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
void HloInstructionProto::clear_parameter_replication() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameter_replication_ != nullptr) _impl_.parameter_replication_->Clear();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
void HloInstructionProto::clear_output_operand_aliasing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_operand_aliasing_.Clear();
}
void HloInstructionProto::clear_frontend_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.frontend_attributes_ != nullptr) _impl_.frontend_attributes_->Clear();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
void HloInstructionProto::clear_statistics_viz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.statistics_viz_ != nullptr) _impl_.statistics_viz_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void HloInstructionProto::clear_dot_sparsity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dot_sparsity_.Clear();
}
void HloInstructionProto::clear_collective_device_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.collective_device_list_ != nullptr) _impl_.collective_device_list_->Clear();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
void HloInstructionProto::clear_original_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.original_value_ != nullptr) _impl_.original_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
HloInstructionProto::HloInstructionProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInstructionProto)
}
inline PROTOBUF_NDEBUG_INLINE HloInstructionProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloInstructionProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dimensions_{visibility, arena, from.dimensions_},
        _dimensions_cached_byte_size_{0},
        slice_dimensions_{visibility, arena, from.slice_dimensions_},
        dynamic_slice_sizes_{visibility, arena, from.dynamic_slice_sizes_},
        _dynamic_slice_sizes_cached_byte_size_{0},
        fft_length_{visibility, arena, from.fft_length_},
        _fft_length_cached_byte_size_{0},
        gather_slice_sizes_{visibility, arena, from.gather_slice_sizes_},
        _gather_slice_sizes_cached_byte_size_{0},
        operand_ids_{visibility, arena, from.operand_ids_},
        _operand_ids_cached_byte_size_{0},
        control_predecessor_ids_{visibility, arena, from.control_predecessor_ids_},
        _control_predecessor_ids_cached_byte_size_{0},
        called_computation_ids_{visibility, arena, from.called_computation_ids_},
        _called_computation_ids_cached_byte_size_{0},
        replica_groups_{visibility, arena, from.replica_groups_},
        source_target_pairs_{visibility, arena, from.source_target_pairs_},
        operand_shapes_with_layout_{visibility, arena, from.operand_shapes_with_layout_},
        output_operand_aliasing_{visibility, arena, from.output_operand_aliasing_},
        dot_sparsity_{visibility, arena, from.dot_sparsity_},
        name_(arena, from.name_),
        opcode_(arena, from.opcode_),
        fusion_kind_(arena, from.fusion_kind_),
        outfeed_config_(arena, from.outfeed_config_),
        infeed_config_(arena, from.infeed_config_),
        custom_call_target_(arena, from.custom_call_target_),
        backend_config_(arena, from.backend_config_),
        comparison_direction_(arena, from.comparison_direction_),
        comparison_type_(arena, from.comparison_type_),
        async_execution_thread_(arena, from.async_execution_thread_),
        optional_cross_program_prefetch_index_{},
        _oneof_case_{from._oneof_case_[0]} {}

HloInstructionProto::HloInstructionProto(
    ::google::protobuf::Arena* arena,
    const HloInstructionProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloInstructionProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::ShapeProto>(
                              arena, *from._impl_.shape_)
                        : nullptr;
  _impl_.metadata_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::xla::OpMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;
  _impl_.literal_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::xla::LiteralProto>(
                              arena, *from._impl_.literal_)
                        : nullptr;
  _impl_.window_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::xla::Window>(
                              arena, *from._impl_.window_)
                        : nullptr;
  _impl_.convolution_dimension_numbers_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::xla::ConvolutionDimensionNumbers>(
                              arena, *from._impl_.convolution_dimension_numbers_)
                        : nullptr;
  _impl_.padding_config_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::xla::PaddingConfig>(
                              arena, *from._impl_.padding_config_)
                        : nullptr;
  _impl_.outfeed_shape_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::xla::ShapeProto>(
                              arena, *from._impl_.outfeed_shape_)
                        : nullptr;
  _impl_.dot_dimension_numbers_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::xla::DotDimensionNumbers>(
                              arena, *from._impl_.dot_dimension_numbers_)
                        : nullptr;
  _impl_.gather_dimension_numbers_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::xla::GatherDimensionNumbers>(
                              arena, *from._impl_.gather_dimension_numbers_)
                        : nullptr;
  _impl_.sharding_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(
                              arena, *from._impl_.sharding_)
                        : nullptr;
  _impl_.scatter_dimension_numbers_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::xla::ScatterDimensionNumbers>(
                              arena, *from._impl_.scatter_dimension_numbers_)
                        : nullptr;
  _impl_.precision_config_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::xla::PrecisionConfig>(
                              arena, *from._impl_.precision_config_)
                        : nullptr;
  _impl_.domain_entry_sharding_ = (cached_has_bits & 0x00001000u) ? ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(
                              arena, *from._impl_.domain_entry_sharding_)
                        : nullptr;
  _impl_.domain_exit_sharding_ = (cached_has_bits & 0x00002000u) ? ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(
                              arena, *from._impl_.domain_exit_sharding_)
                        : nullptr;
  _impl_.triangular_solve_options_ = (cached_has_bits & 0x00004000u) ? ::google::protobuf::Message::CopyConstruct<::xla::TriangularSolveOptions>(
                              arena, *from._impl_.triangular_solve_options_)
                        : nullptr;
  _impl_.parameter_replication_ = (cached_has_bits & 0x00008000u) ? ::google::protobuf::Message::CopyConstruct<::xla::ParameterReplication>(
                              arena, *from._impl_.parameter_replication_)
                        : nullptr;
  _impl_.cholesky_options_ = (cached_has_bits & 0x00010000u) ? ::google::protobuf::Message::CopyConstruct<::xla::CholeskyOptions>(
                              arena, *from._impl_.cholesky_options_)
                        : nullptr;
  _impl_.frontend_attributes_ = (cached_has_bits & 0x00020000u) ? ::google::protobuf::Message::CopyConstruct<::xla::FrontendAttributes>(
                              arena, *from._impl_.frontend_attributes_)
                        : nullptr;
  _impl_.statistics_viz_ = (cached_has_bits & 0x00040000u) ? ::google::protobuf::Message::CopyConstruct<::xla::StatisticsViz>(
                              arena, *from._impl_.statistics_viz_)
                        : nullptr;
  _impl_.collective_device_list_ = (cached_has_bits & 0x00080000u) ? ::google::protobuf::Message::CopyConstruct<::xla::CollectiveDeviceListProto>(
                              arena, *from._impl_.collective_device_list_)
                        : nullptr;
  _impl_.original_value_ = (cached_has_bits & 0x00100000u) ? ::google::protobuf::Message::CopyConstruct<::xla::OriginalValueProto>(
                              arena, *from._impl_.original_value_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parameter_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, parameter_number_),
           offsetof(Impl_, is_composite_) -
               offsetof(Impl_, parameter_number_) +
               sizeof(Impl_::is_composite_));
  switch (optional_cross_program_prefetch_index_case()) {
    case OPTIONAL_CROSS_PROGRAM_PREFETCH_INDEX_NOT_SET:
      break;
      case kCrossProgramPrefetchIndex:
        _impl_.optional_cross_program_prefetch_index_.cross_program_prefetch_index_ = from._impl_.optional_cross_program_prefetch_index_.cross_program_prefetch_index_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:xla.HloInstructionProto)
}
inline PROTOBUF_NDEBUG_INLINE HloInstructionProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        dimensions_{visibility, arena},
        _dimensions_cached_byte_size_{0},
        slice_dimensions_{visibility, arena},
        dynamic_slice_sizes_{visibility, arena},
        _dynamic_slice_sizes_cached_byte_size_{0},
        fft_length_{visibility, arena},
        _fft_length_cached_byte_size_{0},
        gather_slice_sizes_{visibility, arena},
        _gather_slice_sizes_cached_byte_size_{0},
        operand_ids_{visibility, arena},
        _operand_ids_cached_byte_size_{0},
        control_predecessor_ids_{visibility, arena},
        _control_predecessor_ids_cached_byte_size_{0},
        called_computation_ids_{visibility, arena},
        _called_computation_ids_cached_byte_size_{0},
        replica_groups_{visibility, arena},
        source_target_pairs_{visibility, arena},
        operand_shapes_with_layout_{visibility, arena},
        output_operand_aliasing_{visibility, arena},
        dot_sparsity_{visibility, arena},
        name_(arena),
        opcode_(arena),
        fusion_kind_(arena),
        outfeed_config_(arena),
        infeed_config_(arena),
        custom_call_target_(arena),
        backend_config_(arena),
        comparison_direction_(arena),
        comparison_type_(arena),
        async_execution_thread_(arena),
        optional_cross_program_prefetch_index_{},
        _oneof_case_{} {}

inline void HloInstructionProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_),
           0,
           offsetof(Impl_, is_composite_) -
               offsetof(Impl_, shape_) +
               sizeof(Impl_::is_composite_));
}
HloInstructionProto::~HloInstructionProto() {
  // @@protoc_insertion_point(destructor:xla.HloInstructionProto)
  SharedDtor(*this);
}
inline void HloInstructionProto::SharedDtor(MessageLite& self) {
  HloInstructionProto& this_ = static_cast<HloInstructionProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.opcode_.Destroy();
  this_._impl_.fusion_kind_.Destroy();
  this_._impl_.outfeed_config_.Destroy();
  this_._impl_.infeed_config_.Destroy();
  this_._impl_.custom_call_target_.Destroy();
  this_._impl_.backend_config_.Destroy();
  this_._impl_.comparison_direction_.Destroy();
  this_._impl_.comparison_type_.Destroy();
  this_._impl_.async_execution_thread_.Destroy();
  delete this_._impl_.shape_;
  delete this_._impl_.metadata_;
  delete this_._impl_.literal_;
  delete this_._impl_.window_;
  delete this_._impl_.convolution_dimension_numbers_;
  delete this_._impl_.padding_config_;
  delete this_._impl_.outfeed_shape_;
  delete this_._impl_.dot_dimension_numbers_;
  delete this_._impl_.gather_dimension_numbers_;
  delete this_._impl_.sharding_;
  delete this_._impl_.scatter_dimension_numbers_;
  delete this_._impl_.precision_config_;
  delete this_._impl_.domain_entry_sharding_;
  delete this_._impl_.domain_exit_sharding_;
  delete this_._impl_.triangular_solve_options_;
  delete this_._impl_.parameter_replication_;
  delete this_._impl_.cholesky_options_;
  delete this_._impl_.frontend_attributes_;
  delete this_._impl_.statistics_viz_;
  delete this_._impl_.collective_device_list_;
  delete this_._impl_.original_value_;
  if (this_.has_optional_cross_program_prefetch_index()) {
    this_.clear_optional_cross_program_prefetch_index();
  }
  this_._impl_.~Impl_();
}

void HloInstructionProto::clear_optional_cross_program_prefetch_index() {
// @@protoc_insertion_point(one_of_clear_start:xla.HloInstructionProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (optional_cross_program_prefetch_index_case()) {
    case kCrossProgramPrefetchIndex: {
      // No need to clear
      break;
    }
    case OPTIONAL_CROSS_PROGRAM_PREFETCH_INDEX_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTIONAL_CROSS_PROGRAM_PREFETCH_INDEX_NOT_SET;
}


inline void* HloInstructionProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloInstructionProto(arena);
}
constexpr auto HloInstructionProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dimensions_) +
          decltype(HloInstructionProto::_impl_.dimensions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.slice_dimensions_) +
          decltype(HloInstructionProto::_impl_.slice_dimensions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dynamic_slice_sizes_) +
          decltype(HloInstructionProto::_impl_.dynamic_slice_sizes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.fft_length_) +
          decltype(HloInstructionProto::_impl_.fft_length_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.gather_slice_sizes_) +
          decltype(HloInstructionProto::_impl_.gather_slice_sizes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.operand_ids_) +
          decltype(HloInstructionProto::_impl_.operand_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.control_predecessor_ids_) +
          decltype(HloInstructionProto::_impl_.control_predecessor_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.called_computation_ids_) +
          decltype(HloInstructionProto::_impl_.called_computation_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.replica_groups_) +
          decltype(HloInstructionProto::_impl_.replica_groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.source_target_pairs_) +
          decltype(HloInstructionProto::_impl_.source_target_pairs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.operand_shapes_with_layout_) +
          decltype(HloInstructionProto::_impl_.operand_shapes_with_layout_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.output_operand_aliasing_) +
          decltype(HloInstructionProto::_impl_.output_operand_aliasing_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dot_sparsity_) +
          decltype(HloInstructionProto::_impl_.dot_sparsity_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloInstructionProto), alignof(HloInstructionProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloInstructionProto::PlacementNew_,
                                 sizeof(HloInstructionProto),
                                 alignof(HloInstructionProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloInstructionProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloInstructionProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloInstructionProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloInstructionProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloInstructionProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloInstructionProto>(), &HloInstructionProto::ByteSizeLong,
            &HloInstructionProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_._cached_size_),
        false,
    },
    &HloInstructionProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloInstructionProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 74, 27, 200, 13> HloInstructionProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_._has_bits_),
    0, // no _extensions_
    89, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2616,  // skipmap
    offsetof(decltype(_table_), field_entries),
    74,  // num_field_entries
    27,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloInstructionProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.name_)}},
    // string opcode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.opcode_)}},
    // .xla.ShapeProto shape = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.shape_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .xla.OpMetadata metadata = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.metadata_)}},
    // .xla.LiteralProto literal = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.literal_)}},
    // int64 parameter_number = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloInstructionProto, _impl_.parameter_number_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.parameter_number_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string fusion_kind = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.fusion_kind_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 tuple_index = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloInstructionProto, _impl_.tuple_index_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.tuple_index_)}},
    // repeated int64 dimensions = 14;
    {::_pbi::TcParser::FastV64P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dimensions_)}},
    // .xla.Window window = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 3, 3, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.window_)}},
    // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 4, 4, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.convolution_dimension_numbers_)}},
    // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 5, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.slice_dimensions_)}},
    // int32 exponent_bits = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.exponent_bits_)}},
    // int32 mantissa_bits = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.mantissa_bits_)}},
    // repeated int64 dynamic_slice_sizes = 20;
    {::_pbi::TcParser::FastV64P2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dynamic_slice_sizes_)}},
    // .xla.PaddingConfig padding_config = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 5, 6, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.padding_config_)}},
    // bytes outfeed_config = 22;
    {::_pbi::TcParser::FastBS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.outfeed_config_)}},
    // .xla.RandomDistribution distribution = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.distribution_)}},
    // float epsilon = 24;
    {::_pbi::TcParser::FastF32S2,
     {453, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.epsilon_)}},
    // int64 feature_index = 25;
    {::_pbi::TcParser::FastV64S2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.feature_index_)}},
    // int64 channel_id = 26;
    {::_pbi::TcParser::FastV64S2,
     {464, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.channel_id_)}},
    // bytes infeed_config = 27;
    {::_pbi::TcParser::FastBS2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.infeed_config_)}},
    // string custom_call_target = 28;
    {::_pbi::TcParser::FastUS2,
     {482, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.custom_call_target_)}},
    // .xla.ShapeProto outfeed_shape = 29;
    {::_pbi::TcParser::FastMtS2,
     {490, 6, 7, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.outfeed_shape_)}},
    // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
    {::_pbi::TcParser::FastMtS2,
     {498, 7, 8, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dot_dimension_numbers_)}},
    // .xla.FftType fft_type = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 63, 0, PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.fft_type_)}},
  }}, {{
    33, 0, 4,
    11072, 27, 32784, 38, 8192, 52, 65036, 67,
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string opcode = 2;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.opcode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .xla.ShapeProto shape = 3;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.shape_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.OpMetadata metadata = 7;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.metadata_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.LiteralProto literal = 8;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.literal_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 parameter_number = 9;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.parameter_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string fusion_kind = 11;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.fusion_kind_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 tuple_index = 13;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.tuple_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 dimensions = 14;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dimensions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .xla.Window window = 15;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.window_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.convolution_dimension_numbers_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.slice_dimensions_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 exponent_bits = 18;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.exponent_bits_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 mantissa_bits = 19;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.mantissa_bits_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int64 dynamic_slice_sizes = 20;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dynamic_slice_sizes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .xla.PaddingConfig padding_config = 21;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.padding_config_), _Internal::kHasBitsOffset + 5, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes outfeed_config = 22;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.outfeed_config_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .xla.RandomDistribution distribution = 23;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.distribution_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // float epsilon = 24;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.epsilon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int64 feature_index = 25;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.feature_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 channel_id = 26;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.channel_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes infeed_config = 27;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.infeed_config_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string custom_call_target = 28;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.custom_call_target_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .xla.ShapeProto outfeed_shape = 29;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.outfeed_shape_), _Internal::kHasBitsOffset + 6, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dot_dimension_numbers_), _Internal::kHasBitsOffset + 7, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.FftType fft_type = 31;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.fft_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated int64 fft_length = 32;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.fft_length_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.gather_dimension_numbers_), _Internal::kHasBitsOffset + 8, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int64 gather_slice_sizes = 34;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.gather_slice_sizes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // int64 id = 35;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 operand_ids = 36;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.operand_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated int64 control_predecessor_ids = 37;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.control_predecessor_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated int64 called_computation_ids = 38;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.called_computation_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .xla.OpSharding sharding = 40;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.sharding_), _Internal::kHasBitsOffset + 9, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes backend_config = 43;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.backend_config_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 all_reduce_id = 45 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.all_reduce_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_host_transfer = 47;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.is_host_transfer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.scatter_dimension_numbers_), _Internal::kHasBitsOffset + 10, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.ReplicaGroup replica_groups = 49 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.replica_groups_), -1, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 feature_group_count = 50;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.feature_group_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.PrecisionConfig precision_config = 51;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.precision_config_), _Internal::kHasBitsOffset + 11, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.SourceTarget source_target_pairs = 52;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.source_target_pairs_), -1, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.OpSharding domain_entry_sharding = 54;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.domain_entry_sharding_), _Internal::kHasBitsOffset + 12, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.OpSharding domain_exit_sharding = 55;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.domain_exit_sharding_), _Internal::kHasBitsOffset + 13, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool constrain_layout = 56;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.constrain_layout_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.operand_shapes_with_layout_), -1, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 batch_group_count = 58;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.batch_group_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.TriangularSolveOptions triangular_solve_options = 59;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.triangular_solve_options_), _Internal::kHasBitsOffset + 14, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_stable = 60;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.is_stable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .xla.ParameterReplication parameter_replication = 61;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.parameter_replication_), _Internal::kHasBitsOffset + 15, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.CholeskyOptions cholesky_options = 62;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.cholesky_options_), _Internal::kHasBitsOffset + 16, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string comparison_direction = 63;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.comparison_direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool custom_call_has_side_effect = 65;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.custom_call_has_side_effect_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 delta = 66;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.delta_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool indices_are_sorted = 67;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.indices_are_sorted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .xla.FrontendAttributes frontend_attributes = 68;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.frontend_attributes_), _Internal::kHasBitsOffset + 17, 21,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool unique_indices = 69;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.unique_indices_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .xla.RandomAlgorithm rng_algorithm = 70;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.rng_algorithm_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool use_global_device_ids = 71;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.use_global_device_ids_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string comparison_type = 72;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.comparison_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_cross_program_prefetch = 73 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.is_cross_program_prefetch_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .xla.OutputOperandAliasing output_operand_aliasing = 74;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.output_operand_aliasing_), -1, 22,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.PaddingType padding_type = 75;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.padding_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .xla.CustomCallSchedule custom_call_schedule = 76;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.custom_call_schedule_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .xla.CustomCallApiVersion custom_call_api_version = 77;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.custom_call_api_version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string async_execution_thread = 79;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.async_execution_thread_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 cross_program_prefetch_index = 80;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.optional_cross_program_prefetch_index_.cross_program_prefetch_index_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // int64 k = 81;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.k_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.StatisticsViz statistics_viz = 82;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.statistics_viz_), _Internal::kHasBitsOffset + 18, 23,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool largest = 85;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.largest_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .xla.SparsityDescriptor dot_sparsity = 86;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.dot_sparsity_), -1, 24,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.CollectiveDeviceListProto collective_device_list = 87;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.collective_device_list_), _Internal::kHasBitsOffset + 19, 25,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.OriginalValueProto original_value = 88;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.original_value_), _Internal::kHasBitsOffset + 20, 26,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_composite = 89;
    {PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.is_composite_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::ShapeProto>()},
    {::_pbi::TcParser::GetTable<::xla::OpMetadata>()},
    {::_pbi::TcParser::GetTable<::xla::LiteralProto>()},
    {::_pbi::TcParser::GetTable<::xla::Window>()},
    {::_pbi::TcParser::GetTable<::xla::ConvolutionDimensionNumbers>()},
    {::_pbi::TcParser::GetTable<::xla::HloInstructionProto_SliceDimensions>()},
    {::_pbi::TcParser::GetTable<::xla::PaddingConfig>()},
    {::_pbi::TcParser::GetTable<::xla::ShapeProto>()},
    {::_pbi::TcParser::GetTable<::xla::DotDimensionNumbers>()},
    {::_pbi::TcParser::GetTable<::xla::GatherDimensionNumbers>()},
    {::_pbi::TcParser::GetTable<::xla::OpSharding>()},
    {::_pbi::TcParser::GetTable<::xla::ScatterDimensionNumbers>()},
    {::_pbi::TcParser::GetTable<::xla::ReplicaGroup>()},
    {::_pbi::TcParser::GetTable<::xla::PrecisionConfig>()},
    {::_pbi::TcParser::GetTable<::xla::SourceTarget>()},
    {::_pbi::TcParser::GetTable<::xla::OpSharding>()},
    {::_pbi::TcParser::GetTable<::xla::OpSharding>()},
    {::_pbi::TcParser::GetTable<::xla::ShapeProto>()},
    {::_pbi::TcParser::GetTable<::xla::TriangularSolveOptions>()},
    {::_pbi::TcParser::GetTable<::xla::ParameterReplication>()},
    {::_pbi::TcParser::GetTable<::xla::CholeskyOptions>()},
    {::_pbi::TcParser::GetTable<::xla::FrontendAttributes>()},
    {::_pbi::TcParser::GetTable<::xla::OutputOperandAliasing>()},
    {::_pbi::TcParser::GetTable<::xla::StatisticsViz>()},
    {::_pbi::TcParser::GetTable<::xla::SparsityDescriptor>()},
    {::_pbi::TcParser::GetTable<::xla::CollectiveDeviceListProto>()},
    {::_pbi::TcParser::GetTable<::xla::OriginalValueProto>()},
  }}, {{
    "\27\4\6\0\0\0\0\13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0\0\0\0\0\0\17\0\0\0\0\0\26\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "xla.HloInstructionProto"
    "name"
    "opcode"
    "fusion_kind"
    "custom_call_target"
    "comparison_direction"
    "comparison_type"
    "async_execution_thread"
  }},
};

PROTOBUF_NOINLINE void HloInstructionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInstructionProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimensions_.Clear();
  _impl_.slice_dimensions_.Clear();
  _impl_.dynamic_slice_sizes_.Clear();
  _impl_.fft_length_.Clear();
  _impl_.gather_slice_sizes_.Clear();
  _impl_.operand_ids_.Clear();
  _impl_.control_predecessor_ids_.Clear();
  _impl_.called_computation_ids_.Clear();
  _impl_.replica_groups_.Clear();
  _impl_.source_target_pairs_.Clear();
  _impl_.operand_shapes_with_layout_.Clear();
  _impl_.output_operand_aliasing_.Clear();
  _impl_.dot_sparsity_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.opcode_.ClearToEmpty();
  _impl_.fusion_kind_.ClearToEmpty();
  _impl_.outfeed_config_.ClearToEmpty();
  _impl_.infeed_config_.ClearToEmpty();
  _impl_.custom_call_target_.ClearToEmpty();
  _impl_.backend_config_.ClearToEmpty();
  _impl_.comparison_direction_.ClearToEmpty();
  _impl_.comparison_type_.ClearToEmpty();
  _impl_.async_execution_thread_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.shape_ != nullptr);
      _impl_.shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.literal_ != nullptr);
      _impl_.literal_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.window_ != nullptr);
      _impl_.window_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.convolution_dimension_numbers_ != nullptr);
      _impl_.convolution_dimension_numbers_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.padding_config_ != nullptr);
      _impl_.padding_config_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.outfeed_shape_ != nullptr);
      _impl_.outfeed_shape_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.dot_dimension_numbers_ != nullptr);
      _impl_.dot_dimension_numbers_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.gather_dimension_numbers_ != nullptr);
      _impl_.gather_dimension_numbers_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.sharding_ != nullptr);
      _impl_.sharding_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.scatter_dimension_numbers_ != nullptr);
      _impl_.scatter_dimension_numbers_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.precision_config_ != nullptr);
      _impl_.precision_config_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.domain_entry_sharding_ != nullptr);
      _impl_.domain_entry_sharding_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.domain_exit_sharding_ != nullptr);
      _impl_.domain_exit_sharding_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.triangular_solve_options_ != nullptr);
      _impl_.triangular_solve_options_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.parameter_replication_ != nullptr);
      _impl_.parameter_replication_->Clear();
    }
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(_impl_.cholesky_options_ != nullptr);
      _impl_.cholesky_options_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(_impl_.frontend_attributes_ != nullptr);
      _impl_.frontend_attributes_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(_impl_.statistics_viz_ != nullptr);
      _impl_.statistics_viz_->Clear();
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(_impl_.collective_device_list_ != nullptr);
      _impl_.collective_device_list_->Clear();
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(_impl_.original_value_ != nullptr);
      _impl_.original_value_->Clear();
    }
  }
  ::memset(&_impl_.parameter_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_composite_) -
      reinterpret_cast<char*>(&_impl_.parameter_number_)) + sizeof(_impl_.is_composite_));
  clear_optional_cross_program_prefetch_index();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloInstructionProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloInstructionProto& this_ = static_cast<const HloInstructionProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloInstructionProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloInstructionProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloInstructionProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string opcode = 2;
          if (!this_._internal_opcode().empty()) {
            const std::string& _s = this_._internal_opcode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.opcode");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.ShapeProto shape = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
                stream);
          }

          // .xla.OpMetadata metadata = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          // .xla.LiteralProto literal = 8;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.literal_, this_._impl_.literal_->GetCachedSize(), target,
                stream);
          }

          // int64 parameter_number = 9;
          if (this_._internal_parameter_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_parameter_number(), target);
          }

          // string fusion_kind = 11;
          if (!this_._internal_fusion_kind().empty()) {
            const std::string& _s = this_._internal_fusion_kind();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.fusion_kind");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // int64 tuple_index = 13;
          if (this_._internal_tuple_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<13>(
                    stream, this_._internal_tuple_index(), target);
          }

          // repeated int64 dimensions = 14;
          {
            int byte_size = this_._impl_._dimensions_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  14, this_._internal_dimensions(), byte_size, target);
            }
          }

          // .xla.Window window = 15;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.window_, this_._impl_.window_->GetCachedSize(), target,
                stream);
          }

          // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.convolution_dimension_numbers_, this_._impl_.convolution_dimension_numbers_->GetCachedSize(), target,
                stream);
          }

          // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_slice_dimensions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_slice_dimensions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    17, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 exponent_bits = 18;
          if (this_._internal_exponent_bits() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                18, this_._internal_exponent_bits(), target);
          }

          // int32 mantissa_bits = 19;
          if (this_._internal_mantissa_bits() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                19, this_._internal_mantissa_bits(), target);
          }

          // repeated int64 dynamic_slice_sizes = 20;
          {
            int byte_size = this_._impl_._dynamic_slice_sizes_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  20, this_._internal_dynamic_slice_sizes(), byte_size, target);
            }
          }

          // .xla.PaddingConfig padding_config = 21;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.padding_config_, this_._impl_.padding_config_->GetCachedSize(), target,
                stream);
          }

          // bytes outfeed_config = 22;
          if (!this_._internal_outfeed_config().empty()) {
            const std::string& _s = this_._internal_outfeed_config();
            target = stream->WriteBytesMaybeAliased(22, _s, target);
          }

          // .xla.RandomDistribution distribution = 23;
          if (this_._internal_distribution() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                23, this_._internal_distribution(), target);
          }

          // float epsilon = 24;
          if (::absl::bit_cast<::uint32_t>(this_._internal_epsilon()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                24, this_._internal_epsilon(), target);
          }

          // int64 feature_index = 25;
          if (this_._internal_feature_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                25, this_._internal_feature_index(), target);
          }

          // int64 channel_id = 26;
          if (this_._internal_channel_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                26, this_._internal_channel_id(), target);
          }

          // bytes infeed_config = 27;
          if (!this_._internal_infeed_config().empty()) {
            const std::string& _s = this_._internal_infeed_config();
            target = stream->WriteBytesMaybeAliased(27, _s, target);
          }

          // string custom_call_target = 28;
          if (!this_._internal_custom_call_target().empty()) {
            const std::string& _s = this_._internal_custom_call_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.custom_call_target");
            target = stream->WriteStringMaybeAliased(28, _s, target);
          }

          // .xla.ShapeProto outfeed_shape = 29;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                29, *this_._impl_.outfeed_shape_, this_._impl_.outfeed_shape_->GetCachedSize(), target,
                stream);
          }

          // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                30, *this_._impl_.dot_dimension_numbers_, this_._impl_.dot_dimension_numbers_->GetCachedSize(), target,
                stream);
          }

          // .xla.FftType fft_type = 31;
          if (this_._internal_fft_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                31, this_._internal_fft_type(), target);
          }

          // repeated int64 fft_length = 32;
          {
            int byte_size = this_._impl_._fft_length_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  32, this_._internal_fft_length(), byte_size, target);
            }
          }

          // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                33, *this_._impl_.gather_dimension_numbers_, this_._impl_.gather_dimension_numbers_->GetCachedSize(), target,
                stream);
          }

          // repeated int64 gather_slice_sizes = 34;
          {
            int byte_size = this_._impl_._gather_slice_sizes_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  34, this_._internal_gather_slice_sizes(), byte_size, target);
            }
          }

          // int64 id = 35;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                35, this_._internal_id(), target);
          }

          // repeated int64 operand_ids = 36;
          {
            int byte_size = this_._impl_._operand_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  36, this_._internal_operand_ids(), byte_size, target);
            }
          }

          // repeated int64 control_predecessor_ids = 37;
          {
            int byte_size = this_._impl_._control_predecessor_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  37, this_._internal_control_predecessor_ids(), byte_size, target);
            }
          }

          // repeated int64 called_computation_ids = 38;
          {
            int byte_size = this_._impl_._called_computation_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  38, this_._internal_called_computation_ids(), byte_size, target);
            }
          }

          // .xla.OpSharding sharding = 40;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                40, *this_._impl_.sharding_, this_._impl_.sharding_->GetCachedSize(), target,
                stream);
          }

          // bytes backend_config = 43;
          if (!this_._internal_backend_config().empty()) {
            const std::string& _s = this_._internal_backend_config();
            target = stream->WriteBytesMaybeAliased(43, _s, target);
          }

          // int64 all_reduce_id = 45 [deprecated = true];
          if (this_._internal_all_reduce_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                45, this_._internal_all_reduce_id(), target);
          }

          // bool is_host_transfer = 47;
          if (this_._internal_is_host_transfer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                47, this_._internal_is_host_transfer(), target);
          }

          // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                48, *this_._impl_.scatter_dimension_numbers_, this_._impl_.scatter_dimension_numbers_->GetCachedSize(), target,
                stream);
          }

          // repeated .xla.ReplicaGroup replica_groups = 49 [deprecated = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_replica_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_replica_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    49, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int64 feature_group_count = 50;
          if (this_._internal_feature_group_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                50, this_._internal_feature_group_count(), target);
          }

          // .xla.PrecisionConfig precision_config = 51;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                51, *this_._impl_.precision_config_, this_._impl_.precision_config_->GetCachedSize(), target,
                stream);
          }

          // repeated .xla.SourceTarget source_target_pairs = 52;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_source_target_pairs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_source_target_pairs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    52, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .xla.OpSharding domain_entry_sharding = 54;
          if (cached_has_bits & 0x00001000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                54, *this_._impl_.domain_entry_sharding_, this_._impl_.domain_entry_sharding_->GetCachedSize(), target,
                stream);
          }

          // .xla.OpSharding domain_exit_sharding = 55;
          if (cached_has_bits & 0x00002000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                55, *this_._impl_.domain_exit_sharding_, this_._impl_.domain_exit_sharding_->GetCachedSize(), target,
                stream);
          }

          // bool constrain_layout = 56;
          if (this_._internal_constrain_layout() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                56, this_._internal_constrain_layout(), target);
          }

          // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_operand_shapes_with_layout_size());
               i < n; i++) {
            const auto& repfield = this_._internal_operand_shapes_with_layout().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    57, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int64 batch_group_count = 58;
          if (this_._internal_batch_group_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                58, this_._internal_batch_group_count(), target);
          }

          // .xla.TriangularSolveOptions triangular_solve_options = 59;
          if (cached_has_bits & 0x00004000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                59, *this_._impl_.triangular_solve_options_, this_._impl_.triangular_solve_options_->GetCachedSize(), target,
                stream);
          }

          // bool is_stable = 60;
          if (this_._internal_is_stable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                60, this_._internal_is_stable(), target);
          }

          // .xla.ParameterReplication parameter_replication = 61;
          if (cached_has_bits & 0x00008000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                61, *this_._impl_.parameter_replication_, this_._impl_.parameter_replication_->GetCachedSize(), target,
                stream);
          }

          // .xla.CholeskyOptions cholesky_options = 62;
          if (cached_has_bits & 0x00010000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                62, *this_._impl_.cholesky_options_, this_._impl_.cholesky_options_->GetCachedSize(), target,
                stream);
          }

          // string comparison_direction = 63;
          if (!this_._internal_comparison_direction().empty()) {
            const std::string& _s = this_._internal_comparison_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.comparison_direction");
            target = stream->WriteStringMaybeAliased(63, _s, target);
          }

          // bool custom_call_has_side_effect = 65;
          if (this_._internal_custom_call_has_side_effect() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                65, this_._internal_custom_call_has_side_effect(), target);
          }

          // int64 delta = 66;
          if (this_._internal_delta() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                66, this_._internal_delta(), target);
          }

          // bool indices_are_sorted = 67;
          if (this_._internal_indices_are_sorted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                67, this_._internal_indices_are_sorted(), target);
          }

          // .xla.FrontendAttributes frontend_attributes = 68;
          if (cached_has_bits & 0x00020000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                68, *this_._impl_.frontend_attributes_, this_._impl_.frontend_attributes_->GetCachedSize(), target,
                stream);
          }

          // bool unique_indices = 69;
          if (this_._internal_unique_indices() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                69, this_._internal_unique_indices(), target);
          }

          // .xla.RandomAlgorithm rng_algorithm = 70;
          if (this_._internal_rng_algorithm() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                70, this_._internal_rng_algorithm(), target);
          }

          // bool use_global_device_ids = 71;
          if (this_._internal_use_global_device_ids() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                71, this_._internal_use_global_device_ids(), target);
          }

          // string comparison_type = 72;
          if (!this_._internal_comparison_type().empty()) {
            const std::string& _s = this_._internal_comparison_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.comparison_type");
            target = stream->WriteStringMaybeAliased(72, _s, target);
          }

          // bool is_cross_program_prefetch = 73 [deprecated = true];
          if (this_._internal_is_cross_program_prefetch() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                73, this_._internal_is_cross_program_prefetch(), target);
          }

          // repeated .xla.OutputOperandAliasing output_operand_aliasing = 74;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_output_operand_aliasing_size());
               i < n; i++) {
            const auto& repfield = this_._internal_output_operand_aliasing().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    74, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .xla.PaddingType padding_type = 75;
          if (this_._internal_padding_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                75, this_._internal_padding_type(), target);
          }

          // .xla.CustomCallSchedule custom_call_schedule = 76;
          if (this_._internal_custom_call_schedule() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                76, this_._internal_custom_call_schedule(), target);
          }

          // .xla.CustomCallApiVersion custom_call_api_version = 77;
          if (this_._internal_custom_call_api_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                77, this_._internal_custom_call_api_version(), target);
          }

          // string async_execution_thread = 79;
          if (!this_._internal_async_execution_thread().empty()) {
            const std::string& _s = this_._internal_async_execution_thread();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloInstructionProto.async_execution_thread");
            target = stream->WriteStringMaybeAliased(79, _s, target);
          }

          // int32 cross_program_prefetch_index = 80;
          if (this_.optional_cross_program_prefetch_index_case() == kCrossProgramPrefetchIndex) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                80, this_._internal_cross_program_prefetch_index(), target);
          }

          // int64 k = 81;
          if (this_._internal_k() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                81, this_._internal_k(), target);
          }

          // .xla.StatisticsViz statistics_viz = 82;
          if (cached_has_bits & 0x00040000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                82, *this_._impl_.statistics_viz_, this_._impl_.statistics_viz_->GetCachedSize(), target,
                stream);
          }

          // bool largest = 85;
          if (this_._internal_largest() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                85, this_._internal_largest(), target);
          }

          // repeated .xla.SparsityDescriptor dot_sparsity = 86;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_dot_sparsity_size());
               i < n; i++) {
            const auto& repfield = this_._internal_dot_sparsity().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    86, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .xla.CollectiveDeviceListProto collective_device_list = 87;
          if (cached_has_bits & 0x00080000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                87, *this_._impl_.collective_device_list_, this_._impl_.collective_device_list_->GetCachedSize(), target,
                stream);
          }

          // .xla.OriginalValueProto original_value = 88;
          if (cached_has_bits & 0x00100000u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                88, *this_._impl_.original_value_, this_._impl_.original_value_->GetCachedSize(), target,
                stream);
          }

          // bool is_composite = 89;
          if (this_._internal_is_composite() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                89, this_._internal_is_composite(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloInstructionProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloInstructionProto::ByteSizeLong(const MessageLite& base) {
          const HloInstructionProto& this_ = static_cast<const HloInstructionProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloInstructionProto::ByteSizeLong() const {
          const HloInstructionProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloInstructionProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 dimensions = 14;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_dimensions(), 1,
                      this_._impl_._dimensions_cached_byte_size_);
            }
            // repeated .xla.HloInstructionProto.SliceDimensions slice_dimensions = 17;
            {
              total_size += 2UL * this_._internal_slice_dimensions_size();
              for (const auto& msg : this_._internal_slice_dimensions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated int64 dynamic_slice_sizes = 20;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_dynamic_slice_sizes(), 2,
                      this_._impl_._dynamic_slice_sizes_cached_byte_size_);
            }
            // repeated int64 fft_length = 32;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_fft_length(), 2,
                      this_._impl_._fft_length_cached_byte_size_);
            }
            // repeated int64 gather_slice_sizes = 34;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_gather_slice_sizes(), 2,
                      this_._impl_._gather_slice_sizes_cached_byte_size_);
            }
            // repeated int64 operand_ids = 36;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_operand_ids(), 2,
                      this_._impl_._operand_ids_cached_byte_size_);
            }
            // repeated int64 control_predecessor_ids = 37;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_control_predecessor_ids(), 2,
                      this_._impl_._control_predecessor_ids_cached_byte_size_);
            }
            // repeated int64 called_computation_ids = 38;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_called_computation_ids(), 2,
                      this_._impl_._called_computation_ids_cached_byte_size_);
            }
            // repeated .xla.ReplicaGroup replica_groups = 49 [deprecated = true];
            {
              total_size += 2UL * this_._internal_replica_groups_size();
              for (const auto& msg : this_._internal_replica_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.SourceTarget source_target_pairs = 52;
            {
              total_size += 2UL * this_._internal_source_target_pairs_size();
              for (const auto& msg : this_._internal_source_target_pairs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.ShapeProto operand_shapes_with_layout = 57;
            {
              total_size += 2UL * this_._internal_operand_shapes_with_layout_size();
              for (const auto& msg : this_._internal_operand_shapes_with_layout()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.OutputOperandAliasing output_operand_aliasing = 74;
            {
              total_size += 2UL * this_._internal_output_operand_aliasing_size();
              for (const auto& msg : this_._internal_output_operand_aliasing()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.SparsityDescriptor dot_sparsity = 86;
            {
              total_size += 2UL * this_._internal_dot_sparsity_size();
              for (const auto& msg : this_._internal_dot_sparsity()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string opcode = 2;
            if (!this_._internal_opcode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_opcode());
            }
            // string fusion_kind = 11;
            if (!this_._internal_fusion_kind().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fusion_kind());
            }
            // bytes outfeed_config = 22;
            if (!this_._internal_outfeed_config().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_outfeed_config());
            }
            // bytes infeed_config = 27;
            if (!this_._internal_infeed_config().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_infeed_config());
            }
            // string custom_call_target = 28;
            if (!this_._internal_custom_call_target().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_custom_call_target());
            }
            // bytes backend_config = 43;
            if (!this_._internal_backend_config().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_backend_config());
            }
            // string comparison_direction = 63;
            if (!this_._internal_comparison_direction().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comparison_direction());
            }
            // string comparison_type = 72;
            if (!this_._internal_comparison_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_comparison_type());
            }
            // string async_execution_thread = 79;
            if (!this_._internal_async_execution_thread().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_async_execution_thread());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .xla.ShapeProto shape = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
            }
            // .xla.OpMetadata metadata = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
            // .xla.LiteralProto literal = 8;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.literal_);
            }
            // .xla.Window window = 15;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.window_);
            }
            // .xla.ConvolutionDimensionNumbers convolution_dimension_numbers = 16;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.convolution_dimension_numbers_);
            }
            // .xla.PaddingConfig padding_config = 21;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.padding_config_);
            }
            // .xla.ShapeProto outfeed_shape = 29;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.outfeed_shape_);
            }
            // .xla.DotDimensionNumbers dot_dimension_numbers = 30;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dot_dimension_numbers_);
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // .xla.GatherDimensionNumbers gather_dimension_numbers = 33;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gather_dimension_numbers_);
            }
            // .xla.OpSharding sharding = 40;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sharding_);
            }
            // .xla.ScatterDimensionNumbers scatter_dimension_numbers = 48;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scatter_dimension_numbers_);
            }
            // .xla.PrecisionConfig precision_config = 51;
            if (cached_has_bits & 0x00000800u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.precision_config_);
            }
            // .xla.OpSharding domain_entry_sharding = 54;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.domain_entry_sharding_);
            }
            // .xla.OpSharding domain_exit_sharding = 55;
            if (cached_has_bits & 0x00002000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.domain_exit_sharding_);
            }
            // .xla.TriangularSolveOptions triangular_solve_options = 59;
            if (cached_has_bits & 0x00004000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.triangular_solve_options_);
            }
            // .xla.ParameterReplication parameter_replication = 61;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameter_replication_);
            }
          }
          if (cached_has_bits & 0x001f0000u) {
            // .xla.CholeskyOptions cholesky_options = 62;
            if (cached_has_bits & 0x00010000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cholesky_options_);
            }
            // .xla.FrontendAttributes frontend_attributes = 68;
            if (cached_has_bits & 0x00020000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.frontend_attributes_);
            }
            // .xla.StatisticsViz statistics_viz = 82;
            if (cached_has_bits & 0x00040000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statistics_viz_);
            }
            // .xla.CollectiveDeviceListProto collective_device_list = 87;
            if (cached_has_bits & 0x00080000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.collective_device_list_);
            }
            // .xla.OriginalValueProto original_value = 88;
            if (cached_has_bits & 0x00100000u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.original_value_);
            }
          }
           {
            // int64 parameter_number = 9;
            if (this_._internal_parameter_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_parameter_number());
            }
            // int64 tuple_index = 13;
            if (this_._internal_tuple_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_tuple_index());
            }
            // int32 exponent_bits = 18;
            if (this_._internal_exponent_bits() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_exponent_bits());
            }
            // int32 mantissa_bits = 19;
            if (this_._internal_mantissa_bits() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_mantissa_bits());
            }
            // .xla.RandomDistribution distribution = 23;
            if (this_._internal_distribution() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_distribution());
            }
            // float epsilon = 24;
            if (::absl::bit_cast<::uint32_t>(this_._internal_epsilon()) != 0) {
              total_size += 6;
            }
            // int64 feature_index = 25;
            if (this_._internal_feature_index() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_feature_index());
            }
            // int64 channel_id = 26;
            if (this_._internal_channel_id() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_channel_id());
            }
            // int64 id = 35;
            if (this_._internal_id() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_id());
            }
            // int64 all_reduce_id = 45 [deprecated = true];
            if (this_._internal_all_reduce_id() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_all_reduce_id());
            }
            // int64 feature_group_count = 50;
            if (this_._internal_feature_group_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_feature_group_count());
            }
            // .xla.FftType fft_type = 31;
            if (this_._internal_fft_type() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_fft_type());
            }
            // bool use_global_device_ids = 71;
            if (this_._internal_use_global_device_ids() != 0) {
              total_size += 3;
            }
            // bool is_host_transfer = 47;
            if (this_._internal_is_host_transfer() != 0) {
              total_size += 3;
            }
            // bool is_stable = 60;
            if (this_._internal_is_stable() != 0) {
              total_size += 3;
            }
            // bool constrain_layout = 56;
            if (this_._internal_constrain_layout() != 0) {
              total_size += 3;
            }
            // int64 batch_group_count = 58;
            if (this_._internal_batch_group_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_batch_group_count());
            }
            // int64 delta = 66;
            if (this_._internal_delta() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_delta());
            }
            // bool custom_call_has_side_effect = 65;
            if (this_._internal_custom_call_has_side_effect() != 0) {
              total_size += 3;
            }
            // bool indices_are_sorted = 67;
            if (this_._internal_indices_are_sorted() != 0) {
              total_size += 3;
            }
            // bool unique_indices = 69;
            if (this_._internal_unique_indices() != 0) {
              total_size += 3;
            }
            // bool is_cross_program_prefetch = 73 [deprecated = true];
            if (this_._internal_is_cross_program_prefetch() != 0) {
              total_size += 3;
            }
            // .xla.RandomAlgorithm rng_algorithm = 70;
            if (this_._internal_rng_algorithm() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_rng_algorithm());
            }
            // .xla.PaddingType padding_type = 75;
            if (this_._internal_padding_type() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_padding_type());
            }
            // .xla.CustomCallSchedule custom_call_schedule = 76;
            if (this_._internal_custom_call_schedule() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_custom_call_schedule());
            }
            // int64 k = 81;
            if (this_._internal_k() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_k());
            }
            // .xla.CustomCallApiVersion custom_call_api_version = 77;
            if (this_._internal_custom_call_api_version() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_custom_call_api_version());
            }
            // bool largest = 85;
            if (this_._internal_largest() != 0) {
              total_size += 3;
            }
            // bool is_composite = 89;
            if (this_._internal_is_composite() != 0) {
              total_size += 3;
            }
          }
          switch (this_.optional_cross_program_prefetch_index_case()) {
            // int32 cross_program_prefetch_index = 80;
            case kCrossProgramPrefetchIndex: {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_cross_program_prefetch_index());
              break;
            }
            case OPTIONAL_CROSS_PROGRAM_PREFETCH_INDEX_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloInstructionProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloInstructionProto*>(&to_msg);
  auto& from = static_cast<const HloInstructionProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInstructionProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dimensions()->MergeFrom(from._internal_dimensions());
  _this->_internal_mutable_slice_dimensions()->MergeFrom(
      from._internal_slice_dimensions());
  _this->_internal_mutable_dynamic_slice_sizes()->MergeFrom(from._internal_dynamic_slice_sizes());
  _this->_internal_mutable_fft_length()->MergeFrom(from._internal_fft_length());
  _this->_internal_mutable_gather_slice_sizes()->MergeFrom(from._internal_gather_slice_sizes());
  _this->_internal_mutable_operand_ids()->MergeFrom(from._internal_operand_ids());
  _this->_internal_mutable_control_predecessor_ids()->MergeFrom(from._internal_control_predecessor_ids());
  _this->_internal_mutable_called_computation_ids()->MergeFrom(from._internal_called_computation_ids());
  _this->_internal_mutable_replica_groups()->MergeFrom(
      from._internal_replica_groups());
  _this->_internal_mutable_source_target_pairs()->MergeFrom(
      from._internal_source_target_pairs());
  _this->_internal_mutable_operand_shapes_with_layout()->MergeFrom(
      from._internal_operand_shapes_with_layout());
  _this->_internal_mutable_output_operand_aliasing()->MergeFrom(
      from._internal_output_operand_aliasing());
  _this->_internal_mutable_dot_sparsity()->MergeFrom(
      from._internal_dot_sparsity());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_opcode().empty()) {
    _this->_internal_set_opcode(from._internal_opcode());
  }
  if (!from._internal_fusion_kind().empty()) {
    _this->_internal_set_fusion_kind(from._internal_fusion_kind());
  }
  if (!from._internal_outfeed_config().empty()) {
    _this->_internal_set_outfeed_config(from._internal_outfeed_config());
  }
  if (!from._internal_infeed_config().empty()) {
    _this->_internal_set_infeed_config(from._internal_infeed_config());
  }
  if (!from._internal_custom_call_target().empty()) {
    _this->_internal_set_custom_call_target(from._internal_custom_call_target());
  }
  if (!from._internal_backend_config().empty()) {
    _this->_internal_set_backend_config(from._internal_backend_config());
  }
  if (!from._internal_comparison_direction().empty()) {
    _this->_internal_set_comparison_direction(from._internal_comparison_direction());
  }
  if (!from._internal_comparison_type().empty()) {
    _this->_internal_set_comparison_type(from._internal_comparison_type());
  }
  if (!from._internal_async_execution_thread().empty()) {
    _this->_internal_set_async_execution_thread(from._internal_async_execution_thread());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ =
            ::google::protobuf::Message::CopyConstruct<::xla::ShapeProto>(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ =
            ::google::protobuf::Message::CopyConstruct<::xla::OpMetadata>(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.literal_ != nullptr);
      if (_this->_impl_.literal_ == nullptr) {
        _this->_impl_.literal_ =
            ::google::protobuf::Message::CopyConstruct<::xla::LiteralProto>(arena, *from._impl_.literal_);
      } else {
        _this->_impl_.literal_->MergeFrom(*from._impl_.literal_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.window_ != nullptr);
      if (_this->_impl_.window_ == nullptr) {
        _this->_impl_.window_ =
            ::google::protobuf::Message::CopyConstruct<::xla::Window>(arena, *from._impl_.window_);
      } else {
        _this->_impl_.window_->MergeFrom(*from._impl_.window_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.convolution_dimension_numbers_ != nullptr);
      if (_this->_impl_.convolution_dimension_numbers_ == nullptr) {
        _this->_impl_.convolution_dimension_numbers_ =
            ::google::protobuf::Message::CopyConstruct<::xla::ConvolutionDimensionNumbers>(arena, *from._impl_.convolution_dimension_numbers_);
      } else {
        _this->_impl_.convolution_dimension_numbers_->MergeFrom(*from._impl_.convolution_dimension_numbers_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.padding_config_ != nullptr);
      if (_this->_impl_.padding_config_ == nullptr) {
        _this->_impl_.padding_config_ =
            ::google::protobuf::Message::CopyConstruct<::xla::PaddingConfig>(arena, *from._impl_.padding_config_);
      } else {
        _this->_impl_.padding_config_->MergeFrom(*from._impl_.padding_config_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.outfeed_shape_ != nullptr);
      if (_this->_impl_.outfeed_shape_ == nullptr) {
        _this->_impl_.outfeed_shape_ =
            ::google::protobuf::Message::CopyConstruct<::xla::ShapeProto>(arena, *from._impl_.outfeed_shape_);
      } else {
        _this->_impl_.outfeed_shape_->MergeFrom(*from._impl_.outfeed_shape_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.dot_dimension_numbers_ != nullptr);
      if (_this->_impl_.dot_dimension_numbers_ == nullptr) {
        _this->_impl_.dot_dimension_numbers_ =
            ::google::protobuf::Message::CopyConstruct<::xla::DotDimensionNumbers>(arena, *from._impl_.dot_dimension_numbers_);
      } else {
        _this->_impl_.dot_dimension_numbers_->MergeFrom(*from._impl_.dot_dimension_numbers_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.gather_dimension_numbers_ != nullptr);
      if (_this->_impl_.gather_dimension_numbers_ == nullptr) {
        _this->_impl_.gather_dimension_numbers_ =
            ::google::protobuf::Message::CopyConstruct<::xla::GatherDimensionNumbers>(arena, *from._impl_.gather_dimension_numbers_);
      } else {
        _this->_impl_.gather_dimension_numbers_->MergeFrom(*from._impl_.gather_dimension_numbers_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.sharding_ != nullptr);
      if (_this->_impl_.sharding_ == nullptr) {
        _this->_impl_.sharding_ =
            ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(arena, *from._impl_.sharding_);
      } else {
        _this->_impl_.sharding_->MergeFrom(*from._impl_.sharding_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.scatter_dimension_numbers_ != nullptr);
      if (_this->_impl_.scatter_dimension_numbers_ == nullptr) {
        _this->_impl_.scatter_dimension_numbers_ =
            ::google::protobuf::Message::CopyConstruct<::xla::ScatterDimensionNumbers>(arena, *from._impl_.scatter_dimension_numbers_);
      } else {
        _this->_impl_.scatter_dimension_numbers_->MergeFrom(*from._impl_.scatter_dimension_numbers_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.precision_config_ != nullptr);
      if (_this->_impl_.precision_config_ == nullptr) {
        _this->_impl_.precision_config_ =
            ::google::protobuf::Message::CopyConstruct<::xla::PrecisionConfig>(arena, *from._impl_.precision_config_);
      } else {
        _this->_impl_.precision_config_->MergeFrom(*from._impl_.precision_config_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(from._impl_.domain_entry_sharding_ != nullptr);
      if (_this->_impl_.domain_entry_sharding_ == nullptr) {
        _this->_impl_.domain_entry_sharding_ =
            ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(arena, *from._impl_.domain_entry_sharding_);
      } else {
        _this->_impl_.domain_entry_sharding_->MergeFrom(*from._impl_.domain_entry_sharding_);
      }
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(from._impl_.domain_exit_sharding_ != nullptr);
      if (_this->_impl_.domain_exit_sharding_ == nullptr) {
        _this->_impl_.domain_exit_sharding_ =
            ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(arena, *from._impl_.domain_exit_sharding_);
      } else {
        _this->_impl_.domain_exit_sharding_->MergeFrom(*from._impl_.domain_exit_sharding_);
      }
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(from._impl_.triangular_solve_options_ != nullptr);
      if (_this->_impl_.triangular_solve_options_ == nullptr) {
        _this->_impl_.triangular_solve_options_ =
            ::google::protobuf::Message::CopyConstruct<::xla::TriangularSolveOptions>(arena, *from._impl_.triangular_solve_options_);
      } else {
        _this->_impl_.triangular_solve_options_->MergeFrom(*from._impl_.triangular_solve_options_);
      }
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(from._impl_.parameter_replication_ != nullptr);
      if (_this->_impl_.parameter_replication_ == nullptr) {
        _this->_impl_.parameter_replication_ =
            ::google::protobuf::Message::CopyConstruct<::xla::ParameterReplication>(arena, *from._impl_.parameter_replication_);
      } else {
        _this->_impl_.parameter_replication_->MergeFrom(*from._impl_.parameter_replication_);
      }
    }
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      ABSL_DCHECK(from._impl_.cholesky_options_ != nullptr);
      if (_this->_impl_.cholesky_options_ == nullptr) {
        _this->_impl_.cholesky_options_ =
            ::google::protobuf::Message::CopyConstruct<::xla::CholeskyOptions>(arena, *from._impl_.cholesky_options_);
      } else {
        _this->_impl_.cholesky_options_->MergeFrom(*from._impl_.cholesky_options_);
      }
    }
    if (cached_has_bits & 0x00020000u) {
      ABSL_DCHECK(from._impl_.frontend_attributes_ != nullptr);
      if (_this->_impl_.frontend_attributes_ == nullptr) {
        _this->_impl_.frontend_attributes_ =
            ::google::protobuf::Message::CopyConstruct<::xla::FrontendAttributes>(arena, *from._impl_.frontend_attributes_);
      } else {
        _this->_impl_.frontend_attributes_->MergeFrom(*from._impl_.frontend_attributes_);
      }
    }
    if (cached_has_bits & 0x00040000u) {
      ABSL_DCHECK(from._impl_.statistics_viz_ != nullptr);
      if (_this->_impl_.statistics_viz_ == nullptr) {
        _this->_impl_.statistics_viz_ =
            ::google::protobuf::Message::CopyConstruct<::xla::StatisticsViz>(arena, *from._impl_.statistics_viz_);
      } else {
        _this->_impl_.statistics_viz_->MergeFrom(*from._impl_.statistics_viz_);
      }
    }
    if (cached_has_bits & 0x00080000u) {
      ABSL_DCHECK(from._impl_.collective_device_list_ != nullptr);
      if (_this->_impl_.collective_device_list_ == nullptr) {
        _this->_impl_.collective_device_list_ =
            ::google::protobuf::Message::CopyConstruct<::xla::CollectiveDeviceListProto>(arena, *from._impl_.collective_device_list_);
      } else {
        _this->_impl_.collective_device_list_->MergeFrom(*from._impl_.collective_device_list_);
      }
    }
    if (cached_has_bits & 0x00100000u) {
      ABSL_DCHECK(from._impl_.original_value_ != nullptr);
      if (_this->_impl_.original_value_ == nullptr) {
        _this->_impl_.original_value_ =
            ::google::protobuf::Message::CopyConstruct<::xla::OriginalValueProto>(arena, *from._impl_.original_value_);
      } else {
        _this->_impl_.original_value_->MergeFrom(*from._impl_.original_value_);
      }
    }
  }
  if (from._internal_parameter_number() != 0) {
    _this->_impl_.parameter_number_ = from._impl_.parameter_number_;
  }
  if (from._internal_tuple_index() != 0) {
    _this->_impl_.tuple_index_ = from._impl_.tuple_index_;
  }
  if (from._internal_exponent_bits() != 0) {
    _this->_impl_.exponent_bits_ = from._impl_.exponent_bits_;
  }
  if (from._internal_mantissa_bits() != 0) {
    _this->_impl_.mantissa_bits_ = from._impl_.mantissa_bits_;
  }
  if (from._internal_distribution() != 0) {
    _this->_impl_.distribution_ = from._impl_.distribution_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_epsilon()) != 0) {
    _this->_impl_.epsilon_ = from._impl_.epsilon_;
  }
  if (from._internal_feature_index() != 0) {
    _this->_impl_.feature_index_ = from._impl_.feature_index_;
  }
  if (from._internal_channel_id() != 0) {
    _this->_impl_.channel_id_ = from._impl_.channel_id_;
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_all_reduce_id() != 0) {
    _this->_impl_.all_reduce_id_ = from._impl_.all_reduce_id_;
  }
  if (from._internal_feature_group_count() != 0) {
    _this->_impl_.feature_group_count_ = from._impl_.feature_group_count_;
  }
  if (from._internal_fft_type() != 0) {
    _this->_impl_.fft_type_ = from._impl_.fft_type_;
  }
  if (from._internal_use_global_device_ids() != 0) {
    _this->_impl_.use_global_device_ids_ = from._impl_.use_global_device_ids_;
  }
  if (from._internal_is_host_transfer() != 0) {
    _this->_impl_.is_host_transfer_ = from._impl_.is_host_transfer_;
  }
  if (from._internal_is_stable() != 0) {
    _this->_impl_.is_stable_ = from._impl_.is_stable_;
  }
  if (from._internal_constrain_layout() != 0) {
    _this->_impl_.constrain_layout_ = from._impl_.constrain_layout_;
  }
  if (from._internal_batch_group_count() != 0) {
    _this->_impl_.batch_group_count_ = from._impl_.batch_group_count_;
  }
  if (from._internal_delta() != 0) {
    _this->_impl_.delta_ = from._impl_.delta_;
  }
  if (from._internal_custom_call_has_side_effect() != 0) {
    _this->_impl_.custom_call_has_side_effect_ = from._impl_.custom_call_has_side_effect_;
  }
  if (from._internal_indices_are_sorted() != 0) {
    _this->_impl_.indices_are_sorted_ = from._impl_.indices_are_sorted_;
  }
  if (from._internal_unique_indices() != 0) {
    _this->_impl_.unique_indices_ = from._impl_.unique_indices_;
  }
  if (from._internal_is_cross_program_prefetch() != 0) {
    _this->_impl_.is_cross_program_prefetch_ = from._impl_.is_cross_program_prefetch_;
  }
  if (from._internal_rng_algorithm() != 0) {
    _this->_impl_.rng_algorithm_ = from._impl_.rng_algorithm_;
  }
  if (from._internal_padding_type() != 0) {
    _this->_impl_.padding_type_ = from._impl_.padding_type_;
  }
  if (from._internal_custom_call_schedule() != 0) {
    _this->_impl_.custom_call_schedule_ = from._impl_.custom_call_schedule_;
  }
  if (from._internal_k() != 0) {
    _this->_impl_.k_ = from._impl_.k_;
  }
  if (from._internal_custom_call_api_version() != 0) {
    _this->_impl_.custom_call_api_version_ = from._impl_.custom_call_api_version_;
  }
  if (from._internal_largest() != 0) {
    _this->_impl_.largest_ = from._impl_.largest_;
  }
  if (from._internal_is_composite() != 0) {
    _this->_impl_.is_composite_ = from._impl_.is_composite_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_optional_cross_program_prefetch_index();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kCrossProgramPrefetchIndex: {
        _this->_impl_.optional_cross_program_prefetch_index_.cross_program_prefetch_index_ = from._impl_.optional_cross_program_prefetch_index_.cross_program_prefetch_index_;
        break;
      }
      case OPTIONAL_CROSS_PROGRAM_PREFETCH_INDEX_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloInstructionProto::CopyFrom(const HloInstructionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInstructionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloInstructionProto::InternalSwap(HloInstructionProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  _impl_.slice_dimensions_.InternalSwap(&other->_impl_.slice_dimensions_);
  _impl_.dynamic_slice_sizes_.InternalSwap(&other->_impl_.dynamic_slice_sizes_);
  _impl_.fft_length_.InternalSwap(&other->_impl_.fft_length_);
  _impl_.gather_slice_sizes_.InternalSwap(&other->_impl_.gather_slice_sizes_);
  _impl_.operand_ids_.InternalSwap(&other->_impl_.operand_ids_);
  _impl_.control_predecessor_ids_.InternalSwap(&other->_impl_.control_predecessor_ids_);
  _impl_.called_computation_ids_.InternalSwap(&other->_impl_.called_computation_ids_);
  _impl_.replica_groups_.InternalSwap(&other->_impl_.replica_groups_);
  _impl_.source_target_pairs_.InternalSwap(&other->_impl_.source_target_pairs_);
  _impl_.operand_shapes_with_layout_.InternalSwap(&other->_impl_.operand_shapes_with_layout_);
  _impl_.output_operand_aliasing_.InternalSwap(&other->_impl_.output_operand_aliasing_);
  _impl_.dot_sparsity_.InternalSwap(&other->_impl_.dot_sparsity_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.opcode_, &other->_impl_.opcode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fusion_kind_, &other->_impl_.fusion_kind_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outfeed_config_, &other->_impl_.outfeed_config_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.infeed_config_, &other->_impl_.infeed_config_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.custom_call_target_, &other->_impl_.custom_call_target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.backend_config_, &other->_impl_.backend_config_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comparison_direction_, &other->_impl_.comparison_direction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.comparison_type_, &other->_impl_.comparison_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.async_execution_thread_, &other->_impl_.async_execution_thread_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.is_composite_)
      + sizeof(HloInstructionProto::_impl_.is_composite_)
      - PROTOBUF_FIELD_OFFSET(HloInstructionProto, _impl_.shape_)>(
          reinterpret_cast<char*>(&_impl_.shape_),
          reinterpret_cast<char*>(&other->_impl_.shape_));
  swap(_impl_.optional_cross_program_prefetch_index_, other->_impl_.optional_cross_program_prefetch_index_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata HloInstructionProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloComputationProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HloComputationProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_._has_bits_);
};

void HloComputationProto::clear_program_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.program_shape_ != nullptr) _impl_.program_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HloComputationProto::HloComputationProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloComputationProto)
}
inline PROTOBUF_NDEBUG_INLINE HloComputationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloComputationProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instructions_{visibility, arena, from.instructions_},
        name_(arena, from.name_),
        execution_thread_(arena, from.execution_thread_) {}

HloComputationProto::HloComputationProto(
    ::google::protobuf::Arena* arena,
    const HloComputationProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloComputationProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.program_shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::ProgramShapeProto>(
                              arena, *from._impl_.program_shape_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, is_fusion_computation_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::is_fusion_computation_));

  // @@protoc_insertion_point(copy_constructor:xla.HloComputationProto)
}
inline PROTOBUF_NDEBUG_INLINE HloComputationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instructions_{visibility, arena},
        name_(arena),
        execution_thread_(arena) {}

inline void HloComputationProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, program_shape_),
           0,
           offsetof(Impl_, is_fusion_computation_) -
               offsetof(Impl_, program_shape_) +
               sizeof(Impl_::is_fusion_computation_));
}
HloComputationProto::~HloComputationProto() {
  // @@protoc_insertion_point(destructor:xla.HloComputationProto)
  SharedDtor(*this);
}
inline void HloComputationProto::SharedDtor(MessageLite& self) {
  HloComputationProto& this_ = static_cast<HloComputationProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.execution_thread_.Destroy();
  delete this_._impl_.program_shape_;
  this_._impl_.~Impl_();
}

inline void* HloComputationProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloComputationProto(arena);
}
constexpr auto HloComputationProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.instructions_) +
          decltype(HloComputationProto::_impl_.instructions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloComputationProto), alignof(HloComputationProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloComputationProto::PlacementNew_,
                                 sizeof(HloComputationProto),
                                 alignof(HloComputationProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloComputationProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloComputationProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloComputationProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloComputationProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloComputationProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloComputationProto>(), &HloComputationProto::ByteSizeLong,
            &HloComputationProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_._cached_size_),
        false,
    },
    &HloComputationProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloComputationProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 52, 2> HloComputationProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967044,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloComputationProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string execution_thread = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.execution_thread_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.name_)}},
    // repeated .xla.HloInstructionProto instructions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.instructions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .xla.ProgramShapeProto program_shape = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.program_shape_)}},
    // int64 id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloComputationProto, _impl_.id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.id_)}},
    // int64 root_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloComputationProto, _impl_.root_id_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.root_id_)}},
    // bool is_fusion_computation = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HloComputationProto, _impl_.is_fusion_computation_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.is_fusion_computation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .xla.HloInstructionProto instructions = 2;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.instructions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.ProgramShapeProto program_shape = 4;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.program_shape_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 id = 5;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 root_id = 6;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.root_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_fusion_computation = 7;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.is_fusion_computation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string execution_thread = 8;
    {PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.execution_thread_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloInstructionProto>()},
    {::_pbi::TcParser::GetTable<::xla::ProgramShapeProto>()},
  }}, {{
    "\27\4\0\0\0\0\0\20"
    "xla.HloComputationProto"
    "name"
    "execution_thread"
  }},
};

PROTOBUF_NOINLINE void HloComputationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloComputationProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instructions_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.execution_thread_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.program_shape_ != nullptr);
    _impl_.program_shape_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_fusion_computation_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.is_fusion_computation_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloComputationProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloComputationProto& this_ = static_cast<const HloComputationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloComputationProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloComputationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloComputationProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloComputationProto.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .xla.HloInstructionProto instructions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instructions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instructions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.ProgramShapeProto program_shape = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.program_shape_, this_._impl_.program_shape_->GetCachedSize(), target,
                stream);
          }

          // int64 id = 5;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_id(), target);
          }

          // int64 root_id = 6;
          if (this_._internal_root_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_root_id(), target);
          }

          // bool is_fusion_computation = 7;
          if (this_._internal_is_fusion_computation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_is_fusion_computation(), target);
          }

          // string execution_thread = 8;
          if (!this_._internal_execution_thread().empty()) {
            const std::string& _s = this_._internal_execution_thread();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloComputationProto.execution_thread");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloComputationProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloComputationProto::ByteSizeLong(const MessageLite& base) {
          const HloComputationProto& this_ = static_cast<const HloComputationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloComputationProto::ByteSizeLong() const {
          const HloComputationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloComputationProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.HloInstructionProto instructions = 2;
            {
              total_size += 1UL * this_._internal_instructions_size();
              for (const auto& msg : this_._internal_instructions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string execution_thread = 8;
            if (!this_._internal_execution_thread().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_execution_thread());
            }
          }
           {
            // .xla.ProgramShapeProto program_shape = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.program_shape_);
            }
          }
           {
            // int64 id = 5;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_id());
            }
            // int64 root_id = 6;
            if (this_._internal_root_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_root_id());
            }
            // bool is_fusion_computation = 7;
            if (this_._internal_is_fusion_computation() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloComputationProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloComputationProto*>(&to_msg);
  auto& from = static_cast<const HloComputationProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloComputationProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instructions()->MergeFrom(
      from._internal_instructions());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_execution_thread().empty()) {
    _this->_internal_set_execution_thread(from._internal_execution_thread());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.program_shape_ != nullptr);
    if (_this->_impl_.program_shape_ == nullptr) {
      _this->_impl_.program_shape_ =
          ::google::protobuf::Message::CopyConstruct<::xla::ProgramShapeProto>(arena, *from._impl_.program_shape_);
    } else {
      _this->_impl_.program_shape_->MergeFrom(*from._impl_.program_shape_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_root_id() != 0) {
    _this->_impl_.root_id_ = from._impl_.root_id_;
  }
  if (from._internal_is_fusion_computation() != 0) {
    _this->_impl_.is_fusion_computation_ = from._impl_.is_fusion_computation_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloComputationProto::CopyFrom(const HloComputationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloComputationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloComputationProto::InternalSwap(HloComputationProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.instructions_.InternalSwap(&other->_impl_.instructions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.execution_thread_, &other->_impl_.execution_thread_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.is_fusion_computation_)
      + sizeof(HloComputationProto::_impl_.is_fusion_computation_)
      - PROTOBUF_FIELD_OFFSET(HloComputationProto, _impl_.program_shape_)>(
          reinterpret_cast<char*>(&_impl_.program_shape_),
          reinterpret_cast<char*>(&other->_impl_.program_shape_));
}

::google::protobuf::Metadata HloComputationProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloScheduleProto_InstructionSequence::_Internal {
 public:
};

HloScheduleProto_InstructionSequence::HloScheduleProto_InstructionSequence(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloScheduleProto.InstructionSequence)
}
inline PROTOBUF_NDEBUG_INLINE HloScheduleProto_InstructionSequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloScheduleProto_InstructionSequence& from_msg)
      : instruction_ids_{visibility, arena, from.instruction_ids_},
        _instruction_ids_cached_byte_size_{0},
        _cached_size_{0} {}

HloScheduleProto_InstructionSequence::HloScheduleProto_InstructionSequence(
    ::google::protobuf::Arena* arena,
    const HloScheduleProto_InstructionSequence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloScheduleProto_InstructionSequence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.HloScheduleProto.InstructionSequence)
}
inline PROTOBUF_NDEBUG_INLINE HloScheduleProto_InstructionSequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instruction_ids_{visibility, arena},
        _instruction_ids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void HloScheduleProto_InstructionSequence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HloScheduleProto_InstructionSequence::~HloScheduleProto_InstructionSequence() {
  // @@protoc_insertion_point(destructor:xla.HloScheduleProto.InstructionSequence)
  SharedDtor(*this);
}
inline void HloScheduleProto_InstructionSequence::SharedDtor(MessageLite& self) {
  HloScheduleProto_InstructionSequence& this_ = static_cast<HloScheduleProto_InstructionSequence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloScheduleProto_InstructionSequence::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloScheduleProto_InstructionSequence(arena);
}
constexpr auto HloScheduleProto_InstructionSequence::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloScheduleProto_InstructionSequence, _impl_.instruction_ids_) +
          decltype(HloScheduleProto_InstructionSequence::_impl_.instruction_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HloScheduleProto_InstructionSequence), alignof(HloScheduleProto_InstructionSequence), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloScheduleProto_InstructionSequence::PlacementNew_,
                                 sizeof(HloScheduleProto_InstructionSequence),
                                 alignof(HloScheduleProto_InstructionSequence));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloScheduleProto_InstructionSequence::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloScheduleProto_InstructionSequence_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloScheduleProto_InstructionSequence::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloScheduleProto_InstructionSequence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloScheduleProto_InstructionSequence::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloScheduleProto_InstructionSequence>(), &HloScheduleProto_InstructionSequence::ByteSizeLong,
            &HloScheduleProto_InstructionSequence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloScheduleProto_InstructionSequence, _impl_._cached_size_),
        false,
    },
    &HloScheduleProto_InstructionSequence::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloScheduleProto_InstructionSequence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HloScheduleProto_InstructionSequence::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloScheduleProto_InstructionSequence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 instruction_ids = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloScheduleProto_InstructionSequence, _impl_.instruction_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 instruction_ids = 1;
    {PROTOBUF_FIELD_OFFSET(HloScheduleProto_InstructionSequence, _impl_.instruction_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HloScheduleProto_InstructionSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloScheduleProto.InstructionSequence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruction_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloScheduleProto_InstructionSequence::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloScheduleProto_InstructionSequence& this_ = static_cast<const HloScheduleProto_InstructionSequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloScheduleProto_InstructionSequence::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloScheduleProto_InstructionSequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloScheduleProto.InstructionSequence)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int64 instruction_ids = 1;
          {
            int byte_size = this_._impl_._instruction_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  1, this_._internal_instruction_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloScheduleProto.InstructionSequence)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloScheduleProto_InstructionSequence::ByteSizeLong(const MessageLite& base) {
          const HloScheduleProto_InstructionSequence& this_ = static_cast<const HloScheduleProto_InstructionSequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloScheduleProto_InstructionSequence::ByteSizeLong() const {
          const HloScheduleProto_InstructionSequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloScheduleProto.InstructionSequence)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 instruction_ids = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_instruction_ids(), 1,
                      this_._impl_._instruction_ids_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloScheduleProto_InstructionSequence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloScheduleProto_InstructionSequence*>(&to_msg);
  auto& from = static_cast<const HloScheduleProto_InstructionSequence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloScheduleProto.InstructionSequence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruction_ids()->MergeFrom(from._internal_instruction_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloScheduleProto_InstructionSequence::CopyFrom(const HloScheduleProto_InstructionSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloScheduleProto.InstructionSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloScheduleProto_InstructionSequence::InternalSwap(HloScheduleProto_InstructionSequence* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instruction_ids_.InternalSwap(&other->_impl_.instruction_ids_);
}

::google::protobuf::Metadata HloScheduleProto_InstructionSequence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse() : SuperType() {}
              HloScheduleProto_SequencesEntry_DoNotUse::HloScheduleProto_SequencesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* HloScheduleProto_SequencesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) HloScheduleProto_SequencesEntry_DoNotUse(arena);
              }
              constexpr auto HloScheduleProto_SequencesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HloScheduleProto_SequencesEntry_DoNotUse),
                                                          alignof(HloScheduleProto_SequencesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull HloScheduleProto_SequencesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_HloScheduleProto_SequencesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &HloScheduleProto_SequencesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<HloScheduleProto_SequencesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &HloScheduleProto_SequencesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &HloScheduleProto_SequencesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(HloScheduleProto_SequencesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &HloScheduleProto_SequencesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_xla_2fservice_2fhlo_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* HloScheduleProto_SequencesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> HloScheduleProto_SequencesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloScheduleProto_SequencesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloScheduleProto_SequencesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .xla.HloScheduleProto.InstructionSequence value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(HloScheduleProto_SequencesEntry_DoNotUse, _impl_.value_)}},
    // int64 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloScheduleProto_SequencesEntry_DoNotUse, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HloScheduleProto_SequencesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 key = 1;
    {PROTOBUF_FIELD_OFFSET(HloScheduleProto_SequencesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.HloScheduleProto.InstructionSequence value = 2;
    {PROTOBUF_FIELD_OFFSET(HloScheduleProto_SequencesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloScheduleProto_InstructionSequence>()},
  }}, {{
  }},
};

// ===================================================================

class HloScheduleProto::_Internal {
 public:
};

HloScheduleProto::HloScheduleProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloScheduleProto)
}
inline PROTOBUF_NDEBUG_INLINE HloScheduleProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloScheduleProto& from_msg)
      : sequences_{visibility, arena, from.sequences_},
        _cached_size_{0} {}

HloScheduleProto::HloScheduleProto(
    ::google::protobuf::Arena* arena,
    const HloScheduleProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloScheduleProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.HloScheduleProto)
}
inline PROTOBUF_NDEBUG_INLINE HloScheduleProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sequences_{visibility, arena},
        _cached_size_{0} {}

inline void HloScheduleProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HloScheduleProto::~HloScheduleProto() {
  // @@protoc_insertion_point(destructor:xla.HloScheduleProto)
  SharedDtor(*this);
}
inline void HloScheduleProto::SharedDtor(MessageLite& self) {
  HloScheduleProto& this_ = static_cast<HloScheduleProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloScheduleProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloScheduleProto(arena);
}
constexpr auto HloScheduleProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloScheduleProto, _impl_.sequences_) +
          decltype(HloScheduleProto::_impl_.sequences_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloScheduleProto, _impl_.sequences_) +
          decltype(HloScheduleProto::_impl_.sequences_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloScheduleProto), alignof(HloScheduleProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloScheduleProto::PlacementNew_,
                                 sizeof(HloScheduleProto),
                                 alignof(HloScheduleProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloScheduleProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloScheduleProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloScheduleProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloScheduleProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloScheduleProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloScheduleProto>(), &HloScheduleProto::ByteSizeLong,
            &HloScheduleProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloScheduleProto, _impl_._cached_size_),
        false,
    },
    &HloScheduleProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloScheduleProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 2, 0, 2> HloScheduleProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloScheduleProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
    {PROTOBUF_FIELD_OFFSET(HloScheduleProto, _impl_.sequences_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(HloScheduleProto()._impl_.sequences_)>(
        0, 0, 0, 3,
        11)},
    {::_pbi::TcParser::GetTable<::xla::HloScheduleProto_InstructionSequence>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HloScheduleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloScheduleProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sequences_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloScheduleProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloScheduleProto& this_ = static_cast<const HloScheduleProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloScheduleProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloScheduleProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloScheduleProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
          if (!this_._internal_sequences().empty()) {
            using MapType = ::google::protobuf::Map<::int64_t, ::xla::HloScheduleProto_InstructionSequence>;
            using WireHelper = _pbi::MapEntryFuncs<::int64_t, ::xla::HloScheduleProto_InstructionSequence,
                                           _pbi::WireFormatLite::TYPE_INT64,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_sequences();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloScheduleProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloScheduleProto::ByteSizeLong(const MessageLite& base) {
          const HloScheduleProto& this_ = static_cast<const HloScheduleProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloScheduleProto::ByteSizeLong() const {
          const HloScheduleProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloScheduleProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<int64, .xla.HloScheduleProto.InstructionSequence> sequences = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_sequences_size());
              for (const auto& entry : this_._internal_sequences()) {
                total_size += _pbi::MapEntryFuncs<::int64_t, ::xla::HloScheduleProto_InstructionSequence,
                                               _pbi::WireFormatLite::TYPE_INT64,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloScheduleProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloScheduleProto*>(&to_msg);
  auto& from = static_cast<const HloScheduleProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloScheduleProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sequences_.MergeFrom(from._impl_.sequences_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloScheduleProto::CopyFrom(const HloScheduleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloScheduleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloScheduleProto::InternalSwap(HloScheduleProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sequences_.InternalSwap(&other->_impl_.sequences_);
}

::google::protobuf::Metadata HloScheduleProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloInputOutputAliasProto_AliasEntryProto::_Internal {
 public:
};

HloInputOutputAliasProto_AliasEntryProto::HloInputOutputAliasProto_AliasEntryProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInputOutputAliasProto.AliasEntryProto)
}
inline PROTOBUF_NDEBUG_INLINE HloInputOutputAliasProto_AliasEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloInputOutputAliasProto_AliasEntryProto& from_msg)
      : output_shape_index_{visibility, arena, from.output_shape_index_},
        _output_shape_index_cached_byte_size_{0},
        parameter_shape_index_{visibility, arena, from.parameter_shape_index_},
        _parameter_shape_index_cached_byte_size_{0},
        _cached_size_{0} {}

HloInputOutputAliasProto_AliasEntryProto::HloInputOutputAliasProto_AliasEntryProto(
    ::google::protobuf::Arena* arena,
    const HloInputOutputAliasProto_AliasEntryProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloInputOutputAliasProto_AliasEntryProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parameter_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, parameter_number_),
           offsetof(Impl_, kind_) -
               offsetof(Impl_, parameter_number_) +
               sizeof(Impl_::kind_));

  // @@protoc_insertion_point(copy_constructor:xla.HloInputOutputAliasProto.AliasEntryProto)
}
inline PROTOBUF_NDEBUG_INLINE HloInputOutputAliasProto_AliasEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : output_shape_index_{visibility, arena},
        _output_shape_index_cached_byte_size_{0},
        parameter_shape_index_{visibility, arena},
        _parameter_shape_index_cached_byte_size_{0},
        _cached_size_{0} {}

inline void HloInputOutputAliasProto_AliasEntryProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parameter_number_),
           0,
           offsetof(Impl_, kind_) -
               offsetof(Impl_, parameter_number_) +
               sizeof(Impl_::kind_));
}
HloInputOutputAliasProto_AliasEntryProto::~HloInputOutputAliasProto_AliasEntryProto() {
  // @@protoc_insertion_point(destructor:xla.HloInputOutputAliasProto.AliasEntryProto)
  SharedDtor(*this);
}
inline void HloInputOutputAliasProto_AliasEntryProto::SharedDtor(MessageLite& self) {
  HloInputOutputAliasProto_AliasEntryProto& this_ = static_cast<HloInputOutputAliasProto_AliasEntryProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloInputOutputAliasProto_AliasEntryProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloInputOutputAliasProto_AliasEntryProto(arena);
}
constexpr auto HloInputOutputAliasProto_AliasEntryProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.output_shape_index_) +
          decltype(HloInputOutputAliasProto_AliasEntryProto::_impl_.output_shape_index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_shape_index_) +
          decltype(HloInputOutputAliasProto_AliasEntryProto::_impl_.parameter_shape_index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HloInputOutputAliasProto_AliasEntryProto), alignof(HloInputOutputAliasProto_AliasEntryProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloInputOutputAliasProto_AliasEntryProto::PlacementNew_,
                                 sizeof(HloInputOutputAliasProto_AliasEntryProto),
                                 alignof(HloInputOutputAliasProto_AliasEntryProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloInputOutputAliasProto_AliasEntryProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloInputOutputAliasProto_AliasEntryProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloInputOutputAliasProto_AliasEntryProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloInputOutputAliasProto_AliasEntryProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloInputOutputAliasProto_AliasEntryProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloInputOutputAliasProto_AliasEntryProto>(), &HloInputOutputAliasProto_AliasEntryProto::ByteSizeLong,
            &HloInputOutputAliasProto_AliasEntryProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_._cached_size_),
        false,
    },
    &HloInputOutputAliasProto_AliasEntryProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloInputOutputAliasProto_AliasEntryProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> HloInputOutputAliasProto_AliasEntryProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloInputOutputAliasProto_AliasEntryProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .xla.Kind kind = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HloInputOutputAliasProto_AliasEntryProto, _impl_.kind_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.kind_)}},
    // repeated int64 output_shape_index = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.output_shape_index_)}},
    // int64 parameter_number = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_number_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_number_)}},
    // repeated int64 parameter_shape_index = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_shape_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 output_shape_index = 1;
    {PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.output_shape_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // int64 parameter_number = 2;
    {PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 parameter_shape_index = 3;
    {PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_shape_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .xla.Kind kind = 4;
    {PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HloInputOutputAliasProto_AliasEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.output_shape_index_.Clear();
  _impl_.parameter_shape_index_.Clear();
  ::memset(&_impl_.parameter_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.kind_) -
      reinterpret_cast<char*>(&_impl_.parameter_number_)) + sizeof(_impl_.kind_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloInputOutputAliasProto_AliasEntryProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloInputOutputAliasProto_AliasEntryProto& this_ = static_cast<const HloInputOutputAliasProto_AliasEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloInputOutputAliasProto_AliasEntryProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloInputOutputAliasProto_AliasEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloInputOutputAliasProto.AliasEntryProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int64 output_shape_index = 1;
          {
            int byte_size = this_._impl_._output_shape_index_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  1, this_._internal_output_shape_index(), byte_size, target);
            }
          }

          // int64 parameter_number = 2;
          if (this_._internal_parameter_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_parameter_number(), target);
          }

          // repeated int64 parameter_shape_index = 3;
          {
            int byte_size = this_._impl_._parameter_shape_index_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  3, this_._internal_parameter_shape_index(), byte_size, target);
            }
          }

          // .xla.Kind kind = 4;
          if (this_._internal_kind() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_kind(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloInputOutputAliasProto.AliasEntryProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloInputOutputAliasProto_AliasEntryProto::ByteSizeLong(const MessageLite& base) {
          const HloInputOutputAliasProto_AliasEntryProto& this_ = static_cast<const HloInputOutputAliasProto_AliasEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloInputOutputAliasProto_AliasEntryProto::ByteSizeLong() const {
          const HloInputOutputAliasProto_AliasEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloInputOutputAliasProto.AliasEntryProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 output_shape_index = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_output_shape_index(), 1,
                      this_._impl_._output_shape_index_cached_byte_size_);
            }
            // repeated int64 parameter_shape_index = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_parameter_shape_index(), 1,
                      this_._impl_._parameter_shape_index_cached_byte_size_);
            }
          }
           {
            // int64 parameter_number = 2;
            if (this_._internal_parameter_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_parameter_number());
            }
            // .xla.Kind kind = 4;
            if (this_._internal_kind() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloInputOutputAliasProto_AliasEntryProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloInputOutputAliasProto_AliasEntryProto*>(&to_msg);
  auto& from = static_cast<const HloInputOutputAliasProto_AliasEntryProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_output_shape_index()->MergeFrom(from._internal_output_shape_index());
  _this->_internal_mutable_parameter_shape_index()->MergeFrom(from._internal_parameter_shape_index());
  if (from._internal_parameter_number() != 0) {
    _this->_impl_.parameter_number_ = from._impl_.parameter_number_;
  }
  if (from._internal_kind() != 0) {
    _this->_impl_.kind_ = from._impl_.kind_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloInputOutputAliasProto_AliasEntryProto::CopyFrom(const HloInputOutputAliasProto_AliasEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInputOutputAliasProto.AliasEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloInputOutputAliasProto_AliasEntryProto::InternalSwap(HloInputOutputAliasProto_AliasEntryProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.output_shape_index_.InternalSwap(&other->_impl_.output_shape_index_);
  _impl_.parameter_shape_index_.InternalSwap(&other->_impl_.parameter_shape_index_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.kind_)
      + sizeof(HloInputOutputAliasProto_AliasEntryProto::_impl_.kind_)
      - PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto_AliasEntryProto, _impl_.parameter_number_)>(
          reinterpret_cast<char*>(&_impl_.parameter_number_),
          reinterpret_cast<char*>(&other->_impl_.parameter_number_));
}

::google::protobuf::Metadata HloInputOutputAliasProto_AliasEntryProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloInputOutputAliasProto::_Internal {
 public:
};

HloInputOutputAliasProto::HloInputOutputAliasProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloInputOutputAliasProto)
}
inline PROTOBUF_NDEBUG_INLINE HloInputOutputAliasProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloInputOutputAliasProto& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

HloInputOutputAliasProto::HloInputOutputAliasProto(
    ::google::protobuf::Arena* arena,
    const HloInputOutputAliasProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloInputOutputAliasProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.HloInputOutputAliasProto)
}
inline PROTOBUF_NDEBUG_INLINE HloInputOutputAliasProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void HloInputOutputAliasProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HloInputOutputAliasProto::~HloInputOutputAliasProto() {
  // @@protoc_insertion_point(destructor:xla.HloInputOutputAliasProto)
  SharedDtor(*this);
}
inline void HloInputOutputAliasProto::SharedDtor(MessageLite& self) {
  HloInputOutputAliasProto& this_ = static_cast<HloInputOutputAliasProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloInputOutputAliasProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloInputOutputAliasProto(arena);
}
constexpr auto HloInputOutputAliasProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto, _impl_.entries_) +
          decltype(HloInputOutputAliasProto::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HloInputOutputAliasProto), alignof(HloInputOutputAliasProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloInputOutputAliasProto::PlacementNew_,
                                 sizeof(HloInputOutputAliasProto),
                                 alignof(HloInputOutputAliasProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloInputOutputAliasProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloInputOutputAliasProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloInputOutputAliasProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloInputOutputAliasProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloInputOutputAliasProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloInputOutputAliasProto>(), &HloInputOutputAliasProto::ByteSizeLong,
            &HloInputOutputAliasProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto, _impl_._cached_size_),
        false,
    },
    &HloInputOutputAliasProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloInputOutputAliasProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HloInputOutputAliasProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloInputOutputAliasProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
    {PROTOBUF_FIELD_OFFSET(HloInputOutputAliasProto, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloInputOutputAliasProto_AliasEntryProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HloInputOutputAliasProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloInputOutputAliasProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloInputOutputAliasProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloInputOutputAliasProto& this_ = static_cast<const HloInputOutputAliasProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloInputOutputAliasProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloInputOutputAliasProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloInputOutputAliasProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloInputOutputAliasProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloInputOutputAliasProto::ByteSizeLong(const MessageLite& base) {
          const HloInputOutputAliasProto& this_ = static_cast<const HloInputOutputAliasProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloInputOutputAliasProto::ByteSizeLong() const {
          const HloInputOutputAliasProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloInputOutputAliasProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.HloInputOutputAliasProto.AliasEntryProto entries = 1;
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloInputOutputAliasProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloInputOutputAliasProto*>(&to_msg);
  auto& from = static_cast<const HloInputOutputAliasProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloInputOutputAliasProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloInputOutputAliasProto::CopyFrom(const HloInputOutputAliasProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloInputOutputAliasProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloInputOutputAliasProto::InternalSwap(HloInputOutputAliasProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata HloInputOutputAliasProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloBufferDonorProto_BufferDonorEntryProto::_Internal {
 public:
};

HloBufferDonorProto_BufferDonorEntryProto::HloBufferDonorProto_BufferDonorEntryProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloBufferDonorProto.BufferDonorEntryProto)
}
inline PROTOBUF_NDEBUG_INLINE HloBufferDonorProto_BufferDonorEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloBufferDonorProto_BufferDonorEntryProto& from_msg)
      : parameter_shape_index_{visibility, arena, from.parameter_shape_index_},
        _parameter_shape_index_cached_byte_size_{0},
        _cached_size_{0} {}

HloBufferDonorProto_BufferDonorEntryProto::HloBufferDonorProto_BufferDonorEntryProto(
    ::google::protobuf::Arena* arena,
    const HloBufferDonorProto_BufferDonorEntryProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloBufferDonorProto_BufferDonorEntryProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.parameter_number_ = from._impl_.parameter_number_;

  // @@protoc_insertion_point(copy_constructor:xla.HloBufferDonorProto.BufferDonorEntryProto)
}
inline PROTOBUF_NDEBUG_INLINE HloBufferDonorProto_BufferDonorEntryProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : parameter_shape_index_{visibility, arena},
        _parameter_shape_index_cached_byte_size_{0},
        _cached_size_{0} {}

inline void HloBufferDonorProto_BufferDonorEntryProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.parameter_number_ = {};
}
HloBufferDonorProto_BufferDonorEntryProto::~HloBufferDonorProto_BufferDonorEntryProto() {
  // @@protoc_insertion_point(destructor:xla.HloBufferDonorProto.BufferDonorEntryProto)
  SharedDtor(*this);
}
inline void HloBufferDonorProto_BufferDonorEntryProto::SharedDtor(MessageLite& self) {
  HloBufferDonorProto_BufferDonorEntryProto& this_ = static_cast<HloBufferDonorProto_BufferDonorEntryProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloBufferDonorProto_BufferDonorEntryProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloBufferDonorProto_BufferDonorEntryProto(arena);
}
constexpr auto HloBufferDonorProto_BufferDonorEntryProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_shape_index_) +
          decltype(HloBufferDonorProto_BufferDonorEntryProto::_impl_.parameter_shape_index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HloBufferDonorProto_BufferDonorEntryProto), alignof(HloBufferDonorProto_BufferDonorEntryProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloBufferDonorProto_BufferDonorEntryProto::PlacementNew_,
                                 sizeof(HloBufferDonorProto_BufferDonorEntryProto),
                                 alignof(HloBufferDonorProto_BufferDonorEntryProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloBufferDonorProto_BufferDonorEntryProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloBufferDonorProto_BufferDonorEntryProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloBufferDonorProto_BufferDonorEntryProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloBufferDonorProto_BufferDonorEntryProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloBufferDonorProto_BufferDonorEntryProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloBufferDonorProto_BufferDonorEntryProto>(), &HloBufferDonorProto_BufferDonorEntryProto::ByteSizeLong,
            &HloBufferDonorProto_BufferDonorEntryProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloBufferDonorProto_BufferDonorEntryProto, _impl_._cached_size_),
        false,
    },
    &HloBufferDonorProto_BufferDonorEntryProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloBufferDonorProto_BufferDonorEntryProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> HloBufferDonorProto_BufferDonorEntryProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloBufferDonorProto_BufferDonorEntryProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 parameter_shape_index = 2;
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_shape_index_)}},
    // int64 parameter_number = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_number_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 parameter_number = 1;
    {PROTOBUF_FIELD_OFFSET(HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 parameter_shape_index = 2;
    {PROTOBUF_FIELD_OFFSET(HloBufferDonorProto_BufferDonorEntryProto, _impl_.parameter_shape_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HloBufferDonorProto_BufferDonorEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloBufferDonorProto.BufferDonorEntryProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameter_shape_index_.Clear();
  _impl_.parameter_number_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloBufferDonorProto_BufferDonorEntryProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloBufferDonorProto_BufferDonorEntryProto& this_ = static_cast<const HloBufferDonorProto_BufferDonorEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloBufferDonorProto_BufferDonorEntryProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloBufferDonorProto_BufferDonorEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloBufferDonorProto.BufferDonorEntryProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 parameter_number = 1;
          if (this_._internal_parameter_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_parameter_number(), target);
          }

          // repeated int64 parameter_shape_index = 2;
          {
            int byte_size = this_._impl_._parameter_shape_index_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  2, this_._internal_parameter_shape_index(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloBufferDonorProto.BufferDonorEntryProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloBufferDonorProto_BufferDonorEntryProto::ByteSizeLong(const MessageLite& base) {
          const HloBufferDonorProto_BufferDonorEntryProto& this_ = static_cast<const HloBufferDonorProto_BufferDonorEntryProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloBufferDonorProto_BufferDonorEntryProto::ByteSizeLong() const {
          const HloBufferDonorProto_BufferDonorEntryProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloBufferDonorProto.BufferDonorEntryProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 parameter_shape_index = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_parameter_shape_index(), 1,
                      this_._impl_._parameter_shape_index_cached_byte_size_);
            }
          }
           {
            // int64 parameter_number = 1;
            if (this_._internal_parameter_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_parameter_number());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloBufferDonorProto_BufferDonorEntryProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloBufferDonorProto_BufferDonorEntryProto*>(&to_msg);
  auto& from = static_cast<const HloBufferDonorProto_BufferDonorEntryProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloBufferDonorProto.BufferDonorEntryProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_parameter_shape_index()->MergeFrom(from._internal_parameter_shape_index());
  if (from._internal_parameter_number() != 0) {
    _this->_impl_.parameter_number_ = from._impl_.parameter_number_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloBufferDonorProto_BufferDonorEntryProto::CopyFrom(const HloBufferDonorProto_BufferDonorEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloBufferDonorProto.BufferDonorEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloBufferDonorProto_BufferDonorEntryProto::InternalSwap(HloBufferDonorProto_BufferDonorEntryProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameter_shape_index_.InternalSwap(&other->_impl_.parameter_shape_index_);
        swap(_impl_.parameter_number_, other->_impl_.parameter_number_);
}

::google::protobuf::Metadata HloBufferDonorProto_BufferDonorEntryProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloBufferDonorProto::_Internal {
 public:
};

HloBufferDonorProto::HloBufferDonorProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloBufferDonorProto)
}
inline PROTOBUF_NDEBUG_INLINE HloBufferDonorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloBufferDonorProto& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

HloBufferDonorProto::HloBufferDonorProto(
    ::google::protobuf::Arena* arena,
    const HloBufferDonorProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloBufferDonorProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.HloBufferDonorProto)
}
inline PROTOBUF_NDEBUG_INLINE HloBufferDonorProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void HloBufferDonorProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HloBufferDonorProto::~HloBufferDonorProto() {
  // @@protoc_insertion_point(destructor:xla.HloBufferDonorProto)
  SharedDtor(*this);
}
inline void HloBufferDonorProto::SharedDtor(MessageLite& self) {
  HloBufferDonorProto& this_ = static_cast<HloBufferDonorProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HloBufferDonorProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloBufferDonorProto(arena);
}
constexpr auto HloBufferDonorProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloBufferDonorProto, _impl_.entries_) +
          decltype(HloBufferDonorProto::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HloBufferDonorProto), alignof(HloBufferDonorProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloBufferDonorProto::PlacementNew_,
                                 sizeof(HloBufferDonorProto),
                                 alignof(HloBufferDonorProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloBufferDonorProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloBufferDonorProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloBufferDonorProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloBufferDonorProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloBufferDonorProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloBufferDonorProto>(), &HloBufferDonorProto::ByteSizeLong,
            &HloBufferDonorProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloBufferDonorProto, _impl_._cached_size_),
        false,
    },
    &HloBufferDonorProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloBufferDonorProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> HloBufferDonorProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloBufferDonorProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xla.HloBufferDonorProto.BufferDonorEntryProto entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloBufferDonorProto, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xla.HloBufferDonorProto.BufferDonorEntryProto entries = 1;
    {PROTOBUF_FIELD_OFFSET(HloBufferDonorProto, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloBufferDonorProto_BufferDonorEntryProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HloBufferDonorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloBufferDonorProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloBufferDonorProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloBufferDonorProto& this_ = static_cast<const HloBufferDonorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloBufferDonorProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloBufferDonorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloBufferDonorProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .xla.HloBufferDonorProto.BufferDonorEntryProto entries = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloBufferDonorProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloBufferDonorProto::ByteSizeLong(const MessageLite& base) {
          const HloBufferDonorProto& this_ = static_cast<const HloBufferDonorProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloBufferDonorProto::ByteSizeLong() const {
          const HloBufferDonorProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloBufferDonorProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.HloBufferDonorProto.BufferDonorEntryProto entries = 1;
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloBufferDonorProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloBufferDonorProto*>(&to_msg);
  auto& from = static_cast<const HloBufferDonorProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloBufferDonorProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloBufferDonorProto::CopyFrom(const HloBufferDonorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloBufferDonorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloBufferDonorProto::InternalSwap(HloBufferDonorProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata HloBufferDonorProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CrossProgramPrefetch::_Internal {
 public:
};

CrossProgramPrefetch::CrossProgramPrefetch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.CrossProgramPrefetch)
}
inline PROTOBUF_NDEBUG_INLINE CrossProgramPrefetch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::CrossProgramPrefetch& from_msg)
      : index_{visibility, arena, from.index_},
        _index_cached_byte_size_{0},
        _cached_size_{0} {}

CrossProgramPrefetch::CrossProgramPrefetch(
    ::google::protobuf::Arena* arena,
    const CrossProgramPrefetch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CrossProgramPrefetch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parameter_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, parameter_),
           offsetof(Impl_, offset_) -
               offsetof(Impl_, parameter_) +
               sizeof(Impl_::offset_));

  // @@protoc_insertion_point(copy_constructor:xla.CrossProgramPrefetch)
}
inline PROTOBUF_NDEBUG_INLINE CrossProgramPrefetch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : index_{visibility, arena},
        _index_cached_byte_size_{0},
        _cached_size_{0} {}

inline void CrossProgramPrefetch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parameter_),
           0,
           offsetof(Impl_, offset_) -
               offsetof(Impl_, parameter_) +
               sizeof(Impl_::offset_));
}
CrossProgramPrefetch::~CrossProgramPrefetch() {
  // @@protoc_insertion_point(destructor:xla.CrossProgramPrefetch)
  SharedDtor(*this);
}
inline void CrossProgramPrefetch::SharedDtor(MessageLite& self) {
  CrossProgramPrefetch& this_ = static_cast<CrossProgramPrefetch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CrossProgramPrefetch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CrossProgramPrefetch(arena);
}
constexpr auto CrossProgramPrefetch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.index_) +
          decltype(CrossProgramPrefetch::_impl_.index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CrossProgramPrefetch), alignof(CrossProgramPrefetch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CrossProgramPrefetch::PlacementNew_,
                                 sizeof(CrossProgramPrefetch),
                                 alignof(CrossProgramPrefetch));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CrossProgramPrefetch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CrossProgramPrefetch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CrossProgramPrefetch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CrossProgramPrefetch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CrossProgramPrefetch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CrossProgramPrefetch>(), &CrossProgramPrefetch::ByteSizeLong,
            &CrossProgramPrefetch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_._cached_size_),
        false,
    },
    &CrossProgramPrefetch::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CrossProgramPrefetch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CrossProgramPrefetch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::CrossProgramPrefetch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 parameter = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CrossProgramPrefetch, _impl_.parameter_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.parameter_)}},
    // repeated int64 index = 2;
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.index_)}},
    // int64 offset = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CrossProgramPrefetch, _impl_.offset_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 parameter = 1;
    {PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.parameter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 index = 2;
    {PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // int64 offset = 3;
    {PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CrossProgramPrefetch::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CrossProgramPrefetch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_.Clear();
  ::memset(&_impl_.parameter_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.offset_) -
      reinterpret_cast<char*>(&_impl_.parameter_)) + sizeof(_impl_.offset_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CrossProgramPrefetch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CrossProgramPrefetch& this_ = static_cast<const CrossProgramPrefetch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CrossProgramPrefetch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CrossProgramPrefetch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.CrossProgramPrefetch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 parameter = 1;
          if (this_._internal_parameter() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_parameter(), target);
          }

          // repeated int64 index = 2;
          {
            int byte_size = this_._impl_._index_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  2, this_._internal_index(), byte_size, target);
            }
          }

          // int64 offset = 3;
          if (this_._internal_offset() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_offset(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.CrossProgramPrefetch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CrossProgramPrefetch::ByteSizeLong(const MessageLite& base) {
          const CrossProgramPrefetch& this_ = static_cast<const CrossProgramPrefetch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CrossProgramPrefetch::ByteSizeLong() const {
          const CrossProgramPrefetch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.CrossProgramPrefetch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 index = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_index(), 1,
                      this_._impl_._index_cached_byte_size_);
            }
          }
           {
            // int64 parameter = 1;
            if (this_._internal_parameter() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_parameter());
            }
            // int64 offset = 3;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CrossProgramPrefetch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CrossProgramPrefetch*>(&to_msg);
  auto& from = static_cast<const CrossProgramPrefetch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.CrossProgramPrefetch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_index()->MergeFrom(from._internal_index());
  if (from._internal_parameter() != 0) {
    _this->_impl_.parameter_ = from._impl_.parameter_;
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CrossProgramPrefetch::CopyFrom(const CrossProgramPrefetch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CrossProgramPrefetch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CrossProgramPrefetch::InternalSwap(CrossProgramPrefetch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.index_.InternalSwap(&other->_impl_.index_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.offset_)
      + sizeof(CrossProgramPrefetch::_impl_.offset_)
      - PROTOBUF_FIELD_OFFSET(CrossProgramPrefetch, _impl_.parameter_)>(
          reinterpret_cast<char*>(&_impl_.parameter_),
          reinterpret_cast<char*>(&other->_impl_.parameter_));
}

::google::protobuf::Metadata CrossProgramPrefetch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StackFrameIndexProto_FileLocation::_Internal {
 public:
};

StackFrameIndexProto_FileLocation::StackFrameIndexProto_FileLocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.StackFrameIndexProto.FileLocation)
}
StackFrameIndexProto_FileLocation::StackFrameIndexProto_FileLocation(
    ::google::protobuf::Arena* arena, const StackFrameIndexProto_FileLocation& from)
    : StackFrameIndexProto_FileLocation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StackFrameIndexProto_FileLocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StackFrameIndexProto_FileLocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_name_id_),
           0,
           offsetof(Impl_, column_) -
               offsetof(Impl_, file_name_id_) +
               sizeof(Impl_::column_));
}
StackFrameIndexProto_FileLocation::~StackFrameIndexProto_FileLocation() {
  // @@protoc_insertion_point(destructor:xla.StackFrameIndexProto.FileLocation)
  SharedDtor(*this);
}
inline void StackFrameIndexProto_FileLocation::SharedDtor(MessageLite& self) {
  StackFrameIndexProto_FileLocation& this_ = static_cast<StackFrameIndexProto_FileLocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StackFrameIndexProto_FileLocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StackFrameIndexProto_FileLocation(arena);
}
constexpr auto StackFrameIndexProto_FileLocation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StackFrameIndexProto_FileLocation),
                                            alignof(StackFrameIndexProto_FileLocation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StackFrameIndexProto_FileLocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StackFrameIndexProto_FileLocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StackFrameIndexProto_FileLocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StackFrameIndexProto_FileLocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StackFrameIndexProto_FileLocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StackFrameIndexProto_FileLocation>(), &StackFrameIndexProto_FileLocation::ByteSizeLong,
            &StackFrameIndexProto_FileLocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_._cached_size_),
        false,
    },
    &StackFrameIndexProto_FileLocation::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StackFrameIndexProto_FileLocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> StackFrameIndexProto_FileLocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::StackFrameIndexProto_FileLocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 column = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StackFrameIndexProto_FileLocation, _impl_.column_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.column_)}},
    // int32 file_name_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StackFrameIndexProto_FileLocation, _impl_.file_name_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.file_name_id_)}},
    // int32 function_name_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StackFrameIndexProto_FileLocation, _impl_.function_name_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.function_name_id_)}},
    // int32 line = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StackFrameIndexProto_FileLocation, _impl_.line_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.line_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 file_name_id = 1;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.file_name_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 function_name_id = 2;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.function_name_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 line = 3;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 column = 4;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.column_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StackFrameIndexProto_FileLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.StackFrameIndexProto.FileLocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.file_name_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.column_) -
      reinterpret_cast<char*>(&_impl_.file_name_id_)) + sizeof(_impl_.column_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StackFrameIndexProto_FileLocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StackFrameIndexProto_FileLocation& this_ = static_cast<const StackFrameIndexProto_FileLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StackFrameIndexProto_FileLocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StackFrameIndexProto_FileLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.StackFrameIndexProto.FileLocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 file_name_id = 1;
          if (this_._internal_file_name_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_file_name_id(), target);
          }

          // int32 function_name_id = 2;
          if (this_._internal_function_name_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_function_name_id(), target);
          }

          // int32 line = 3;
          if (this_._internal_line() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_line(), target);
          }

          // int32 column = 4;
          if (this_._internal_column() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_column(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.StackFrameIndexProto.FileLocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StackFrameIndexProto_FileLocation::ByteSizeLong(const MessageLite& base) {
          const StackFrameIndexProto_FileLocation& this_ = static_cast<const StackFrameIndexProto_FileLocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StackFrameIndexProto_FileLocation::ByteSizeLong() const {
          const StackFrameIndexProto_FileLocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.StackFrameIndexProto.FileLocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 file_name_id = 1;
            if (this_._internal_file_name_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_file_name_id());
            }
            // int32 function_name_id = 2;
            if (this_._internal_function_name_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_function_name_id());
            }
            // int32 line = 3;
            if (this_._internal_line() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_line());
            }
            // int32 column = 4;
            if (this_._internal_column() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_column());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StackFrameIndexProto_FileLocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StackFrameIndexProto_FileLocation*>(&to_msg);
  auto& from = static_cast<const StackFrameIndexProto_FileLocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.StackFrameIndexProto.FileLocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_file_name_id() != 0) {
    _this->_impl_.file_name_id_ = from._impl_.file_name_id_;
  }
  if (from._internal_function_name_id() != 0) {
    _this->_impl_.function_name_id_ = from._impl_.function_name_id_;
  }
  if (from._internal_line() != 0) {
    _this->_impl_.line_ = from._impl_.line_;
  }
  if (from._internal_column() != 0) {
    _this->_impl_.column_ = from._impl_.column_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StackFrameIndexProto_FileLocation::CopyFrom(const StackFrameIndexProto_FileLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.StackFrameIndexProto.FileLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StackFrameIndexProto_FileLocation::InternalSwap(StackFrameIndexProto_FileLocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.column_)
      + sizeof(StackFrameIndexProto_FileLocation::_impl_.column_)
      - PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_FileLocation, _impl_.file_name_id_)>(
          reinterpret_cast<char*>(&_impl_.file_name_id_),
          reinterpret_cast<char*>(&other->_impl_.file_name_id_));
}

::google::protobuf::Metadata StackFrameIndexProto_FileLocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StackFrameIndexProto_StackFrame::_Internal {
 public:
};

StackFrameIndexProto_StackFrame::StackFrameIndexProto_StackFrame(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.StackFrameIndexProto.StackFrame)
}
StackFrameIndexProto_StackFrame::StackFrameIndexProto_StackFrame(
    ::google::protobuf::Arena* arena, const StackFrameIndexProto_StackFrame& from)
    : StackFrameIndexProto_StackFrame(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StackFrameIndexProto_StackFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StackFrameIndexProto_StackFrame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_location_id_),
           0,
           offsetof(Impl_, parent_frame_id_) -
               offsetof(Impl_, file_location_id_) +
               sizeof(Impl_::parent_frame_id_));
}
StackFrameIndexProto_StackFrame::~StackFrameIndexProto_StackFrame() {
  // @@protoc_insertion_point(destructor:xla.StackFrameIndexProto.StackFrame)
  SharedDtor(*this);
}
inline void StackFrameIndexProto_StackFrame::SharedDtor(MessageLite& self) {
  StackFrameIndexProto_StackFrame& this_ = static_cast<StackFrameIndexProto_StackFrame&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StackFrameIndexProto_StackFrame::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StackFrameIndexProto_StackFrame(arena);
}
constexpr auto StackFrameIndexProto_StackFrame::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StackFrameIndexProto_StackFrame),
                                            alignof(StackFrameIndexProto_StackFrame));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StackFrameIndexProto_StackFrame::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StackFrameIndexProto_StackFrame_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StackFrameIndexProto_StackFrame::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StackFrameIndexProto_StackFrame>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StackFrameIndexProto_StackFrame::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StackFrameIndexProto_StackFrame>(), &StackFrameIndexProto_StackFrame::ByteSizeLong,
            &StackFrameIndexProto_StackFrame::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_._cached_size_),
        false,
    },
    &StackFrameIndexProto_StackFrame::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StackFrameIndexProto_StackFrame::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StackFrameIndexProto_StackFrame::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::StackFrameIndexProto_StackFrame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 parent_frame_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StackFrameIndexProto_StackFrame, _impl_.parent_frame_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_.parent_frame_id_)}},
    // int32 file_location_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StackFrameIndexProto_StackFrame, _impl_.file_location_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_.file_location_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 file_location_id = 1;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_.file_location_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 parent_frame_id = 2;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_.parent_frame_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StackFrameIndexProto_StackFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.StackFrameIndexProto.StackFrame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.file_location_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.parent_frame_id_) -
      reinterpret_cast<char*>(&_impl_.file_location_id_)) + sizeof(_impl_.parent_frame_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StackFrameIndexProto_StackFrame::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StackFrameIndexProto_StackFrame& this_ = static_cast<const StackFrameIndexProto_StackFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StackFrameIndexProto_StackFrame::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StackFrameIndexProto_StackFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.StackFrameIndexProto.StackFrame)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 file_location_id = 1;
          if (this_._internal_file_location_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_file_location_id(), target);
          }

          // int32 parent_frame_id = 2;
          if (this_._internal_parent_frame_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_parent_frame_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.StackFrameIndexProto.StackFrame)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StackFrameIndexProto_StackFrame::ByteSizeLong(const MessageLite& base) {
          const StackFrameIndexProto_StackFrame& this_ = static_cast<const StackFrameIndexProto_StackFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StackFrameIndexProto_StackFrame::ByteSizeLong() const {
          const StackFrameIndexProto_StackFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.StackFrameIndexProto.StackFrame)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 file_location_id = 1;
            if (this_._internal_file_location_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_file_location_id());
            }
            // int32 parent_frame_id = 2;
            if (this_._internal_parent_frame_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_parent_frame_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StackFrameIndexProto_StackFrame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StackFrameIndexProto_StackFrame*>(&to_msg);
  auto& from = static_cast<const StackFrameIndexProto_StackFrame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.StackFrameIndexProto.StackFrame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_file_location_id() != 0) {
    _this->_impl_.file_location_id_ = from._impl_.file_location_id_;
  }
  if (from._internal_parent_frame_id() != 0) {
    _this->_impl_.parent_frame_id_ = from._impl_.parent_frame_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StackFrameIndexProto_StackFrame::CopyFrom(const StackFrameIndexProto_StackFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.StackFrameIndexProto.StackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StackFrameIndexProto_StackFrame::InternalSwap(StackFrameIndexProto_StackFrame* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_.parent_frame_id_)
      + sizeof(StackFrameIndexProto_StackFrame::_impl_.parent_frame_id_)
      - PROTOBUF_FIELD_OFFSET(StackFrameIndexProto_StackFrame, _impl_.file_location_id_)>(
          reinterpret_cast<char*>(&_impl_.file_location_id_),
          reinterpret_cast<char*>(&other->_impl_.file_location_id_));
}

::google::protobuf::Metadata StackFrameIndexProto_StackFrame::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StackFrameIndexProto::_Internal {
 public:
};

StackFrameIndexProto::StackFrameIndexProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.StackFrameIndexProto)
}
inline PROTOBUF_NDEBUG_INLINE StackFrameIndexProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::StackFrameIndexProto& from_msg)
      : file_names_{visibility, arena, from.file_names_},
        function_names_{visibility, arena, from.function_names_},
        file_locations_{visibility, arena, from.file_locations_},
        stack_frames_{visibility, arena, from.stack_frames_},
        _cached_size_{0} {}

StackFrameIndexProto::StackFrameIndexProto(
    ::google::protobuf::Arena* arena,
    const StackFrameIndexProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StackFrameIndexProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.StackFrameIndexProto)
}
inline PROTOBUF_NDEBUG_INLINE StackFrameIndexProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : file_names_{visibility, arena},
        function_names_{visibility, arena},
        file_locations_{visibility, arena},
        stack_frames_{visibility, arena},
        _cached_size_{0} {}

inline void StackFrameIndexProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StackFrameIndexProto::~StackFrameIndexProto() {
  // @@protoc_insertion_point(destructor:xla.StackFrameIndexProto)
  SharedDtor(*this);
}
inline void StackFrameIndexProto::SharedDtor(MessageLite& self) {
  StackFrameIndexProto& this_ = static_cast<StackFrameIndexProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StackFrameIndexProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StackFrameIndexProto(arena);
}
constexpr auto StackFrameIndexProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.file_names_) +
          decltype(StackFrameIndexProto::_impl_.file_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.function_names_) +
          decltype(StackFrameIndexProto::_impl_.function_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.file_locations_) +
          decltype(StackFrameIndexProto::_impl_.file_locations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.stack_frames_) +
          decltype(StackFrameIndexProto::_impl_.stack_frames_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StackFrameIndexProto), alignof(StackFrameIndexProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StackFrameIndexProto::PlacementNew_,
                                 sizeof(StackFrameIndexProto),
                                 alignof(StackFrameIndexProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StackFrameIndexProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StackFrameIndexProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StackFrameIndexProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StackFrameIndexProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StackFrameIndexProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StackFrameIndexProto>(), &StackFrameIndexProto::ByteSizeLong,
            &StackFrameIndexProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_._cached_size_),
        false,
    },
    &StackFrameIndexProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StackFrameIndexProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 57, 2> StackFrameIndexProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::StackFrameIndexProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xla.StackFrameIndexProto.StackFrame stack_frames = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.stack_frames_)}},
    // repeated string file_names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.file_names_)}},
    // repeated string function_names = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.function_names_)}},
    // repeated .xla.StackFrameIndexProto.FileLocation file_locations = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.file_locations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string file_names = 1;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.file_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string function_names = 2;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.function_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .xla.StackFrameIndexProto.FileLocation file_locations = 3;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.file_locations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.StackFrameIndexProto.StackFrame stack_frames = 4;
    {PROTOBUF_FIELD_OFFSET(StackFrameIndexProto, _impl_.stack_frames_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::StackFrameIndexProto_FileLocation>()},
    {::_pbi::TcParser::GetTable<::xla::StackFrameIndexProto_StackFrame>()},
  }}, {{
    "\30\12\16\0\0\0\0\0"
    "xla.StackFrameIndexProto"
    "file_names"
    "function_names"
  }},
};

PROTOBUF_NOINLINE void StackFrameIndexProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.StackFrameIndexProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_names_.Clear();
  _impl_.function_names_.Clear();
  _impl_.file_locations_.Clear();
  _impl_.stack_frames_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StackFrameIndexProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StackFrameIndexProto& this_ = static_cast<const StackFrameIndexProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StackFrameIndexProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StackFrameIndexProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.StackFrameIndexProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string file_names = 1;
          for (int i = 0, n = this_._internal_file_names_size(); i < n; ++i) {
            const auto& s = this_._internal_file_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.StackFrameIndexProto.file_names");
            target = stream->WriteString(1, s, target);
          }

          // repeated string function_names = 2;
          for (int i = 0, n = this_._internal_function_names_size(); i < n; ++i) {
            const auto& s = this_._internal_function_names().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.StackFrameIndexProto.function_names");
            target = stream->WriteString(2, s, target);
          }

          // repeated .xla.StackFrameIndexProto.FileLocation file_locations = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_file_locations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_file_locations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .xla.StackFrameIndexProto.StackFrame stack_frames = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_stack_frames_size());
               i < n; i++) {
            const auto& repfield = this_._internal_stack_frames().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.StackFrameIndexProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StackFrameIndexProto::ByteSizeLong(const MessageLite& base) {
          const StackFrameIndexProto& this_ = static_cast<const StackFrameIndexProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StackFrameIndexProto::ByteSizeLong() const {
          const StackFrameIndexProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.StackFrameIndexProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string file_names = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_file_names().size());
              for (int i = 0, n = this_._internal_file_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_file_names().Get(i));
              }
            }
            // repeated string function_names = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_function_names().size());
              for (int i = 0, n = this_._internal_function_names().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_function_names().Get(i));
              }
            }
            // repeated .xla.StackFrameIndexProto.FileLocation file_locations = 3;
            {
              total_size += 1UL * this_._internal_file_locations_size();
              for (const auto& msg : this_._internal_file_locations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.StackFrameIndexProto.StackFrame stack_frames = 4;
            {
              total_size += 1UL * this_._internal_stack_frames_size();
              for (const auto& msg : this_._internal_stack_frames()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StackFrameIndexProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StackFrameIndexProto*>(&to_msg);
  auto& from = static_cast<const StackFrameIndexProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.StackFrameIndexProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_file_names()->MergeFrom(from._internal_file_names());
  _this->_internal_mutable_function_names()->MergeFrom(from._internal_function_names());
  _this->_internal_mutable_file_locations()->MergeFrom(
      from._internal_file_locations());
  _this->_internal_mutable_stack_frames()->MergeFrom(
      from._internal_stack_frames());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StackFrameIndexProto::CopyFrom(const StackFrameIndexProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.StackFrameIndexProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StackFrameIndexProto::InternalSwap(StackFrameIndexProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.file_names_.InternalSwap(&other->_impl_.file_names_);
  _impl_.function_names_.InternalSwap(&other->_impl_.function_names_);
  _impl_.file_locations_.InternalSwap(&other->_impl_.file_locations_);
  _impl_.stack_frames_.InternalSwap(&other->_impl_.stack_frames_);
}

::google::protobuf::Metadata StackFrameIndexProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloModuleProto_ProfileInfo::_Internal {
 public:
};

HloModuleProto_ProfileInfo::HloModuleProto_ProfileInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleProto.ProfileInfo)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleProto_ProfileInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloModuleProto_ProfileInfo& from_msg)
      : fingerprint_(arena, from.fingerprint_),
        _cached_size_{0} {}

HloModuleProto_ProfileInfo::HloModuleProto_ProfileInfo(
    ::google::protobuf::Arena* arena,
    const HloModuleProto_ProfileInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloModuleProto_ProfileInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, relative_speedup_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, relative_speedup_),
           offsetof(Impl_, compilation_event_) -
               offsetof(Impl_, relative_speedup_) +
               sizeof(Impl_::compilation_event_));

  // @@protoc_insertion_point(copy_constructor:xla.HloModuleProto.ProfileInfo)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleProto_ProfileInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : fingerprint_(arena),
        _cached_size_{0} {}

inline void HloModuleProto_ProfileInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, relative_speedup_),
           0,
           offsetof(Impl_, compilation_event_) -
               offsetof(Impl_, relative_speedup_) +
               sizeof(Impl_::compilation_event_));
}
HloModuleProto_ProfileInfo::~HloModuleProto_ProfileInfo() {
  // @@protoc_insertion_point(destructor:xla.HloModuleProto.ProfileInfo)
  SharedDtor(*this);
}
inline void HloModuleProto_ProfileInfo::SharedDtor(MessageLite& self) {
  HloModuleProto_ProfileInfo& this_ = static_cast<HloModuleProto_ProfileInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.fingerprint_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HloModuleProto_ProfileInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloModuleProto_ProfileInfo(arena);
}
constexpr auto HloModuleProto_ProfileInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HloModuleProto_ProfileInfo),
                                            alignof(HloModuleProto_ProfileInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloModuleProto_ProfileInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloModuleProto_ProfileInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloModuleProto_ProfileInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloModuleProto_ProfileInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloModuleProto_ProfileInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloModuleProto_ProfileInfo>(), &HloModuleProto_ProfileInfo::ByteSizeLong,
            &HloModuleProto_ProfileInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_._cached_size_),
        false,
    },
    &HloModuleProto_ProfileInfo::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloModuleProto_ProfileInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 50, 2> HloModuleProto_ProfileInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloModuleProto_ProfileInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .xla.HloModuleProto.ProfileType profile_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HloModuleProto_ProfileInfo, _impl_.profile_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.profile_type_)}},
    // double relative_speedup = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.relative_speedup_)}},
    // .xla.ProfileSource profile_source = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HloModuleProto_ProfileInfo, _impl_.profile_source_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.profile_source_)}},
    // .xla.CompilationEvent compilation_event = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HloModuleProto_ProfileInfo, _impl_.compilation_event_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.compilation_event_)}},
    // string fingerprint = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.fingerprint_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .xla.HloModuleProto.ProfileType profile_type = 1;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.profile_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double relative_speedup = 2;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.relative_speedup_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .xla.ProfileSource profile_source = 3;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.profile_source_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .xla.CompilationEvent compilation_event = 4;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.compilation_event_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string fingerprint = 5;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.fingerprint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\0\0\0\13\0\0"
    "xla.HloModuleProto.ProfileInfo"
    "fingerprint"
  }},
};

PROTOBUF_NOINLINE void HloModuleProto_ProfileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleProto.ProfileInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fingerprint_.ClearToEmpty();
  ::memset(&_impl_.relative_speedup_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.compilation_event_) -
      reinterpret_cast<char*>(&_impl_.relative_speedup_)) + sizeof(_impl_.compilation_event_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloModuleProto_ProfileInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloModuleProto_ProfileInfo& this_ = static_cast<const HloModuleProto_ProfileInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloModuleProto_ProfileInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloModuleProto_ProfileInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleProto.ProfileInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .xla.HloModuleProto.ProfileType profile_type = 1;
          if (this_._internal_profile_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_profile_type(), target);
          }

          // double relative_speedup = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_relative_speedup()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_relative_speedup(), target);
          }

          // .xla.ProfileSource profile_source = 3;
          if (this_._internal_profile_source() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_profile_source(), target);
          }

          // .xla.CompilationEvent compilation_event = 4;
          if (this_._internal_compilation_event() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_compilation_event(), target);
          }

          // string fingerprint = 5;
          if (!this_._internal_fingerprint().empty()) {
            const std::string& _s = this_._internal_fingerprint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloModuleProto.ProfileInfo.fingerprint");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleProto.ProfileInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloModuleProto_ProfileInfo::ByteSizeLong(const MessageLite& base) {
          const HloModuleProto_ProfileInfo& this_ = static_cast<const HloModuleProto_ProfileInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloModuleProto_ProfileInfo::ByteSizeLong() const {
          const HloModuleProto_ProfileInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloModuleProto.ProfileInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string fingerprint = 5;
            if (!this_._internal_fingerprint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fingerprint());
            }
            // double relative_speedup = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_relative_speedup()) != 0) {
              total_size += 9;
            }
            // .xla.HloModuleProto.ProfileType profile_type = 1;
            if (this_._internal_profile_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_profile_type());
            }
            // .xla.ProfileSource profile_source = 3;
            if (this_._internal_profile_source() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_profile_source());
            }
            // .xla.CompilationEvent compilation_event = 4;
            if (this_._internal_compilation_event() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_compilation_event());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloModuleProto_ProfileInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloModuleProto_ProfileInfo*>(&to_msg);
  auto& from = static_cast<const HloModuleProto_ProfileInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleProto.ProfileInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fingerprint().empty()) {
    _this->_internal_set_fingerprint(from._internal_fingerprint());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_relative_speedup()) != 0) {
    _this->_impl_.relative_speedup_ = from._impl_.relative_speedup_;
  }
  if (from._internal_profile_type() != 0) {
    _this->_impl_.profile_type_ = from._impl_.profile_type_;
  }
  if (from._internal_profile_source() != 0) {
    _this->_impl_.profile_source_ = from._impl_.profile_source_;
  }
  if (from._internal_compilation_event() != 0) {
    _this->_impl_.compilation_event_ = from._impl_.compilation_event_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloModuleProto_ProfileInfo::CopyFrom(const HloModuleProto_ProfileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleProto.ProfileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloModuleProto_ProfileInfo::InternalSwap(HloModuleProto_ProfileInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fingerprint_, &other->_impl_.fingerprint_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.compilation_event_)
      + sizeof(HloModuleProto_ProfileInfo::_impl_.compilation_event_)
      - PROTOBUF_FIELD_OFFSET(HloModuleProto_ProfileInfo, _impl_.relative_speedup_)>(
          reinterpret_cast<char*>(&_impl_.relative_speedup_),
          reinterpret_cast<char*>(&other->_impl_.relative_speedup_));
}

::google::protobuf::Metadata HloModuleProto_ProfileInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloModuleProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HloModuleProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_._has_bits_);
};

void HloModuleProto::clear_host_program_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.host_program_shape_ != nullptr) _impl_.host_program_shape_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void HloModuleProto::clear_spmd_output_sharding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spmd_output_sharding_ != nullptr) _impl_.spmd_output_sharding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void HloModuleProto::clear_spmd_parameters_shardings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spmd_parameters_shardings_.Clear();
}
void HloModuleProto::clear_device_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.device_assignment_ != nullptr) _impl_.device_assignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void HloModuleProto::clear_frontend_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.frontend_attributes_ != nullptr) _impl_.frontend_attributes_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
HloModuleProto::HloModuleProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleProto)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloModuleProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        computations_{visibility, arena, from.computations_},
        cross_program_prefetches_{visibility, arena, from.cross_program_prefetches_},
        profile_info_{visibility, arena, from.profile_info_},
        spmd_parameters_shardings_{visibility, arena, from.spmd_parameters_shardings_},
        name_(arena, from.name_),
        entry_computation_name_(arena, from.entry_computation_name_) {}

HloModuleProto::HloModuleProto(
    ::google::protobuf::Arena* arena,
    const HloModuleProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloModuleProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.host_program_shape_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::ProgramShapeProto>(
                              arena, *from._impl_.host_program_shape_)
                        : nullptr;
  _impl_.schedule_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::xla::HloScheduleProto>(
                              arena, *from._impl_.schedule_)
                        : nullptr;
  _impl_.input_output_alias_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::xla::HloInputOutputAliasProto>(
                              arena, *from._impl_.input_output_alias_)
                        : nullptr;
  _impl_.spmd_output_sharding_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(
                              arena, *from._impl_.spmd_output_sharding_)
                        : nullptr;
  _impl_.device_assignment_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::xla::DeviceAssignmentProto>(
                              arena, *from._impl_.device_assignment_)
                        : nullptr;
  _impl_.stack_frame_index_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::xla::StackFrameIndexProto>(
                              arena, *from._impl_.stack_frame_index_)
                        : nullptr;
  _impl_.buffer_donor_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::xla::HloBufferDonorProto>(
                              arena, *from._impl_.buffer_donor_)
                        : nullptr;
  _impl_.frontend_attributes_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::xla::FrontendAttributes>(
                              arena, *from._impl_.frontend_attributes_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, use_auto_spmd_partitioning_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::use_auto_spmd_partitioning_));

  // @@protoc_insertion_point(copy_constructor:xla.HloModuleProto)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        computations_{visibility, arena},
        cross_program_prefetches_{visibility, arena},
        profile_info_{visibility, arena},
        spmd_parameters_shardings_{visibility, arena},
        name_(arena),
        entry_computation_name_(arena) {}

inline void HloModuleProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, host_program_shape_),
           0,
           offsetof(Impl_, use_auto_spmd_partitioning_) -
               offsetof(Impl_, host_program_shape_) +
               sizeof(Impl_::use_auto_spmd_partitioning_));
}
HloModuleProto::~HloModuleProto() {
  // @@protoc_insertion_point(destructor:xla.HloModuleProto)
  SharedDtor(*this);
}
inline void HloModuleProto::SharedDtor(MessageLite& self) {
  HloModuleProto& this_ = static_cast<HloModuleProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.entry_computation_name_.Destroy();
  delete this_._impl_.host_program_shape_;
  delete this_._impl_.schedule_;
  delete this_._impl_.input_output_alias_;
  delete this_._impl_.spmd_output_sharding_;
  delete this_._impl_.device_assignment_;
  delete this_._impl_.stack_frame_index_;
  delete this_._impl_.buffer_donor_;
  delete this_._impl_.frontend_attributes_;
  this_._impl_.~Impl_();
}

inline void* HloModuleProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloModuleProto(arena);
}
constexpr auto HloModuleProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.computations_) +
          decltype(HloModuleProto::_impl_.computations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.cross_program_prefetches_) +
          decltype(HloModuleProto::_impl_.cross_program_prefetches_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.spmd_parameters_shardings_) +
          decltype(HloModuleProto::_impl_.spmd_parameters_shardings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.profile_info_) +
          decltype(HloModuleProto::_impl_.profile_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloModuleProto), alignof(HloModuleProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloModuleProto::PlacementNew_,
                                 sizeof(HloModuleProto),
                                 alignof(HloModuleProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloModuleProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloModuleProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloModuleProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloModuleProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloModuleProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloModuleProto>(), &HloModuleProto::ByteSizeLong,
            &HloModuleProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_._cached_size_),
        false,
    },
    &HloModuleProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloModuleProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 12, 69, 2> HloModuleProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloModuleProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.name_)}},
    // string entry_computation_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.entry_computation_name_)}},
    // repeated .xla.HloComputationProto computations = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.computations_)}},
    // .xla.ProgramShapeProto host_program_shape = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.host_program_shape_)}},
    // int64 id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloModuleProto, _impl_.id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.id_)}},
    // int64 entry_computation_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloModuleProto, _impl_.entry_computation_id_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.entry_computation_id_)}},
    // .xla.HloScheduleProto schedule = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 2, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.schedule_)}},
    // .xla.HloInputOutputAliasProto input_output_alias = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 3, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.input_output_alias_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 4, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.cross_program_prefetches_)}},
    // bool is_dynamic = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HloModuleProto, _impl_.is_dynamic_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.is_dynamic_)}},
    // .xla.OpSharding spmd_output_sharding = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 3, 5, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.spmd_output_sharding_)}},
    // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 6, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.profile_info_)}},
    // repeated .xla.OpSharding spmd_parameters_shardings = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 7, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.spmd_parameters_shardings_)}},
    // .xla.DeviceAssignmentProto device_assignment = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 4, 8, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.device_assignment_)}},
    // bool use_auto_spmd_partitioning = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.use_auto_spmd_partitioning_)}},
    // .xla.StackFrameIndexProto stack_frame_index = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 5, 9, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.stack_frame_index_)}},
    // .xla.HloBufferDonorProto buffer_donor = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 6, 10, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.buffer_donor_)}},
    // .xla.FrontendAttributes frontend_attributes = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 7, 11, PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.frontend_attributes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entry_computation_name = 2;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.entry_computation_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .xla.HloComputationProto computations = 3;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.computations_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.ProgramShapeProto host_program_shape = 4;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.host_program_shape_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 id = 5;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 entry_computation_id = 6;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.entry_computation_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.HloScheduleProto schedule = 7;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.schedule_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.HloInputOutputAliasProto input_output_alias = 8;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.input_output_alias_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.cross_program_prefetches_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_dynamic = 11;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.is_dynamic_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .xla.OpSharding spmd_output_sharding = 12;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.spmd_output_sharding_), _Internal::kHasBitsOffset + 3, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.profile_info_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.OpSharding spmd_parameters_shardings = 14;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.spmd_parameters_shardings_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.DeviceAssignmentProto device_assignment = 15;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.device_assignment_), _Internal::kHasBitsOffset + 4, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool use_auto_spmd_partitioning = 16;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.use_auto_spmd_partitioning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .xla.StackFrameIndexProto stack_frame_index = 17;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.stack_frame_index_), _Internal::kHasBitsOffset + 5, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.HloBufferDonorProto buffer_donor = 18;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.buffer_donor_), _Internal::kHasBitsOffset + 6, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.FrontendAttributes frontend_attributes = 19;
    {PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.frontend_attributes_), _Internal::kHasBitsOffset + 7, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloComputationProto>()},
    {::_pbi::TcParser::GetTable<::xla::ProgramShapeProto>()},
    {::_pbi::TcParser::GetTable<::xla::HloScheduleProto>()},
    {::_pbi::TcParser::GetTable<::xla::HloInputOutputAliasProto>()},
    {::_pbi::TcParser::GetTable<::xla::CrossProgramPrefetch>()},
    {::_pbi::TcParser::GetTable<::xla::OpSharding>()},
    {::_pbi::TcParser::GetTable<::xla::HloModuleProto_ProfileInfo>()},
    {::_pbi::TcParser::GetTable<::xla::OpSharding>()},
    {::_pbi::TcParser::GetTable<::xla::DeviceAssignmentProto>()},
    {::_pbi::TcParser::GetTable<::xla::StackFrameIndexProto>()},
    {::_pbi::TcParser::GetTable<::xla::HloBufferDonorProto>()},
    {::_pbi::TcParser::GetTable<::xla::FrontendAttributes>()},
  }}, {{
    "\22\4\26\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "xla.HloModuleProto"
    "name"
    "entry_computation_name"
  }},
};

PROTOBUF_NOINLINE void HloModuleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.computations_.Clear();
  _impl_.cross_program_prefetches_.Clear();
  _impl_.profile_info_.Clear();
  _impl_.spmd_parameters_shardings_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.entry_computation_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.host_program_shape_ != nullptr);
      _impl_.host_program_shape_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.schedule_ != nullptr);
      _impl_.schedule_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.input_output_alias_ != nullptr);
      _impl_.input_output_alias_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.spmd_output_sharding_ != nullptr);
      _impl_.spmd_output_sharding_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.device_assignment_ != nullptr);
      _impl_.device_assignment_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.stack_frame_index_ != nullptr);
      _impl_.stack_frame_index_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.buffer_donor_ != nullptr);
      _impl_.buffer_donor_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.frontend_attributes_ != nullptr);
      _impl_.frontend_attributes_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.use_auto_spmd_partitioning_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.use_auto_spmd_partitioning_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloModuleProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloModuleProto& this_ = static_cast<const HloModuleProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloModuleProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloModuleProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloModuleProto.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string entry_computation_name = 2;
          if (!this_._internal_entry_computation_name().empty()) {
            const std::string& _s = this_._internal_entry_computation_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloModuleProto.entry_computation_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .xla.HloComputationProto computations = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_computations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_computations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.ProgramShapeProto host_program_shape = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.host_program_shape_, this_._impl_.host_program_shape_->GetCachedSize(), target,
                stream);
          }

          // int64 id = 5;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_id(), target);
          }

          // int64 entry_computation_id = 6;
          if (this_._internal_entry_computation_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_entry_computation_id(), target);
          }

          // .xla.HloScheduleProto schedule = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.schedule_, this_._impl_.schedule_->GetCachedSize(), target,
                stream);
          }

          // .xla.HloInputOutputAliasProto input_output_alias = 8;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.input_output_alias_, this_._impl_.input_output_alias_->GetCachedSize(), target,
                stream);
          }

          // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_cross_program_prefetches_size());
               i < n; i++) {
            const auto& repfield = this_._internal_cross_program_prefetches().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool is_dynamic = 11;
          if (this_._internal_is_dynamic() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_is_dynamic(), target);
          }

          // .xla.OpSharding spmd_output_sharding = 12;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.spmd_output_sharding_, this_._impl_.spmd_output_sharding_->GetCachedSize(), target,
                stream);
          }

          // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_profile_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_profile_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .xla.OpSharding spmd_parameters_shardings = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_spmd_parameters_shardings_size());
               i < n; i++) {
            const auto& repfield = this_._internal_spmd_parameters_shardings().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .xla.DeviceAssignmentProto device_assignment = 15;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.device_assignment_, this_._impl_.device_assignment_->GetCachedSize(), target,
                stream);
          }

          // bool use_auto_spmd_partitioning = 16;
          if (this_._internal_use_auto_spmd_partitioning() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_use_auto_spmd_partitioning(), target);
          }

          // .xla.StackFrameIndexProto stack_frame_index = 17;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                17, *this_._impl_.stack_frame_index_, this_._impl_.stack_frame_index_->GetCachedSize(), target,
                stream);
          }

          // .xla.HloBufferDonorProto buffer_donor = 18;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.buffer_donor_, this_._impl_.buffer_donor_->GetCachedSize(), target,
                stream);
          }

          // .xla.FrontendAttributes frontend_attributes = 19;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                19, *this_._impl_.frontend_attributes_, this_._impl_.frontend_attributes_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloModuleProto::ByteSizeLong(const MessageLite& base) {
          const HloModuleProto& this_ = static_cast<const HloModuleProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloModuleProto::ByteSizeLong() const {
          const HloModuleProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloModuleProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.HloComputationProto computations = 3;
            {
              total_size += 1UL * this_._internal_computations_size();
              for (const auto& msg : this_._internal_computations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.CrossProgramPrefetch cross_program_prefetches = 10;
            {
              total_size += 1UL * this_._internal_cross_program_prefetches_size();
              for (const auto& msg : this_._internal_cross_program_prefetches()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.HloModuleProto.ProfileInfo profile_info = 13;
            {
              total_size += 1UL * this_._internal_profile_info_size();
              for (const auto& msg : this_._internal_profile_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.OpSharding spmd_parameters_shardings = 14;
            {
              total_size += 1UL * this_._internal_spmd_parameters_shardings_size();
              for (const auto& msg : this_._internal_spmd_parameters_shardings()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string entry_computation_name = 2;
            if (!this_._internal_entry_computation_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_entry_computation_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .xla.ProgramShapeProto host_program_shape = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.host_program_shape_);
            }
            // .xla.HloScheduleProto schedule = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.schedule_);
            }
            // .xla.HloInputOutputAliasProto input_output_alias = 8;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.input_output_alias_);
            }
            // .xla.OpSharding spmd_output_sharding = 12;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spmd_output_sharding_);
            }
            // .xla.DeviceAssignmentProto device_assignment = 15;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_assignment_);
            }
            // .xla.StackFrameIndexProto stack_frame_index = 17;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stack_frame_index_);
            }
            // .xla.HloBufferDonorProto buffer_donor = 18;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.buffer_donor_);
            }
            // .xla.FrontendAttributes frontend_attributes = 19;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.frontend_attributes_);
            }
          }
           {
            // int64 id = 5;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_id());
            }
            // int64 entry_computation_id = 6;
            if (this_._internal_entry_computation_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_entry_computation_id());
            }
            // bool is_dynamic = 11;
            if (this_._internal_is_dynamic() != 0) {
              total_size += 2;
            }
            // bool use_auto_spmd_partitioning = 16;
            if (this_._internal_use_auto_spmd_partitioning() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloModuleProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloModuleProto*>(&to_msg);
  auto& from = static_cast<const HloModuleProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_computations()->MergeFrom(
      from._internal_computations());
  _this->_internal_mutable_cross_program_prefetches()->MergeFrom(
      from._internal_cross_program_prefetches());
  _this->_internal_mutable_profile_info()->MergeFrom(
      from._internal_profile_info());
  _this->_internal_mutable_spmd_parameters_shardings()->MergeFrom(
      from._internal_spmd_parameters_shardings());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_entry_computation_name().empty()) {
    _this->_internal_set_entry_computation_name(from._internal_entry_computation_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.host_program_shape_ != nullptr);
      if (_this->_impl_.host_program_shape_ == nullptr) {
        _this->_impl_.host_program_shape_ =
            ::google::protobuf::Message::CopyConstruct<::xla::ProgramShapeProto>(arena, *from._impl_.host_program_shape_);
      } else {
        _this->_impl_.host_program_shape_->MergeFrom(*from._impl_.host_program_shape_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.schedule_ != nullptr);
      if (_this->_impl_.schedule_ == nullptr) {
        _this->_impl_.schedule_ =
            ::google::protobuf::Message::CopyConstruct<::xla::HloScheduleProto>(arena, *from._impl_.schedule_);
      } else {
        _this->_impl_.schedule_->MergeFrom(*from._impl_.schedule_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.input_output_alias_ != nullptr);
      if (_this->_impl_.input_output_alias_ == nullptr) {
        _this->_impl_.input_output_alias_ =
            ::google::protobuf::Message::CopyConstruct<::xla::HloInputOutputAliasProto>(arena, *from._impl_.input_output_alias_);
      } else {
        _this->_impl_.input_output_alias_->MergeFrom(*from._impl_.input_output_alias_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.spmd_output_sharding_ != nullptr);
      if (_this->_impl_.spmd_output_sharding_ == nullptr) {
        _this->_impl_.spmd_output_sharding_ =
            ::google::protobuf::Message::CopyConstruct<::xla::OpSharding>(arena, *from._impl_.spmd_output_sharding_);
      } else {
        _this->_impl_.spmd_output_sharding_->MergeFrom(*from._impl_.spmd_output_sharding_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.device_assignment_ != nullptr);
      if (_this->_impl_.device_assignment_ == nullptr) {
        _this->_impl_.device_assignment_ =
            ::google::protobuf::Message::CopyConstruct<::xla::DeviceAssignmentProto>(arena, *from._impl_.device_assignment_);
      } else {
        _this->_impl_.device_assignment_->MergeFrom(*from._impl_.device_assignment_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.stack_frame_index_ != nullptr);
      if (_this->_impl_.stack_frame_index_ == nullptr) {
        _this->_impl_.stack_frame_index_ =
            ::google::protobuf::Message::CopyConstruct<::xla::StackFrameIndexProto>(arena, *from._impl_.stack_frame_index_);
      } else {
        _this->_impl_.stack_frame_index_->MergeFrom(*from._impl_.stack_frame_index_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.buffer_donor_ != nullptr);
      if (_this->_impl_.buffer_donor_ == nullptr) {
        _this->_impl_.buffer_donor_ =
            ::google::protobuf::Message::CopyConstruct<::xla::HloBufferDonorProto>(arena, *from._impl_.buffer_donor_);
      } else {
        _this->_impl_.buffer_donor_->MergeFrom(*from._impl_.buffer_donor_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.frontend_attributes_ != nullptr);
      if (_this->_impl_.frontend_attributes_ == nullptr) {
        _this->_impl_.frontend_attributes_ =
            ::google::protobuf::Message::CopyConstruct<::xla::FrontendAttributes>(arena, *from._impl_.frontend_attributes_);
      } else {
        _this->_impl_.frontend_attributes_->MergeFrom(*from._impl_.frontend_attributes_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_entry_computation_id() != 0) {
    _this->_impl_.entry_computation_id_ = from._impl_.entry_computation_id_;
  }
  if (from._internal_is_dynamic() != 0) {
    _this->_impl_.is_dynamic_ = from._impl_.is_dynamic_;
  }
  if (from._internal_use_auto_spmd_partitioning() != 0) {
    _this->_impl_.use_auto_spmd_partitioning_ = from._impl_.use_auto_spmd_partitioning_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloModuleProto::CopyFrom(const HloModuleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloModuleProto::InternalSwap(HloModuleProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.computations_.InternalSwap(&other->_impl_.computations_);
  _impl_.cross_program_prefetches_.InternalSwap(&other->_impl_.cross_program_prefetches_);
  _impl_.profile_info_.InternalSwap(&other->_impl_.profile_info_);
  _impl_.spmd_parameters_shardings_.InternalSwap(&other->_impl_.spmd_parameters_shardings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entry_computation_name_, &other->_impl_.entry_computation_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.use_auto_spmd_partitioning_)
      + sizeof(HloModuleProto::_impl_.use_auto_spmd_partitioning_)
      - PROTOBUF_FIELD_OFFSET(HloModuleProto, _impl_.host_program_shape_)>(
          reinterpret_cast<char*>(&_impl_.host_program_shape_),
          reinterpret_cast<char*>(&other->_impl_.host_program_shape_));
}

::google::protobuf::Metadata HloModuleProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogicalBufferProto_Location::_Internal {
 public:
};

LogicalBufferProto_Location::LogicalBufferProto_Location(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.LogicalBufferProto.Location)
}
inline PROTOBUF_NDEBUG_INLINE LogicalBufferProto_Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::LogicalBufferProto_Location& from_msg)
      : shape_index_{visibility, arena, from.shape_index_},
        _shape_index_cached_byte_size_{0},
        instruction_name_(arena, from.instruction_name_),
        _cached_size_{0} {}

LogicalBufferProto_Location::LogicalBufferProto_Location(
    ::google::protobuf::Arena* arena,
    const LogicalBufferProto_Location& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogicalBufferProto_Location* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.instruction_id_ = from._impl_.instruction_id_;

  // @@protoc_insertion_point(copy_constructor:xla.LogicalBufferProto.Location)
}
inline PROTOBUF_NDEBUG_INLINE LogicalBufferProto_Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shape_index_{visibility, arena},
        _shape_index_cached_byte_size_{0},
        instruction_name_(arena),
        _cached_size_{0} {}

inline void LogicalBufferProto_Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instruction_id_ = {};
}
LogicalBufferProto_Location::~LogicalBufferProto_Location() {
  // @@protoc_insertion_point(destructor:xla.LogicalBufferProto.Location)
  SharedDtor(*this);
}
inline void LogicalBufferProto_Location::SharedDtor(MessageLite& self) {
  LogicalBufferProto_Location& this_ = static_cast<LogicalBufferProto_Location&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instruction_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogicalBufferProto_Location::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogicalBufferProto_Location(arena);
}
constexpr auto LogicalBufferProto_Location::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.shape_index_) +
          decltype(LogicalBufferProto_Location::_impl_.shape_index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(LogicalBufferProto_Location), alignof(LogicalBufferProto_Location), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LogicalBufferProto_Location::PlacementNew_,
                                 sizeof(LogicalBufferProto_Location),
                                 alignof(LogicalBufferProto_Location));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogicalBufferProto_Location::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogicalBufferProto_Location_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogicalBufferProto_Location::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogicalBufferProto_Location>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogicalBufferProto_Location::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogicalBufferProto_Location>(), &LogicalBufferProto_Location::ByteSizeLong,
            &LogicalBufferProto_Location::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_._cached_size_),
        false,
    },
    &LogicalBufferProto_Location::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogicalBufferProto_Location::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> LogicalBufferProto_Location::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967281,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::LogicalBufferProto_Location>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 instruction_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LogicalBufferProto_Location, _impl_.instruction_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.instruction_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string instruction_name = 2 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.instruction_name_)}},
    // repeated int64 shape_index = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.shape_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string instruction_name = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.instruction_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int64 shape_index = 3;
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.shape_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // int64 instruction_id = 4;
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto_Location, _impl_.instruction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\37\20\0\0\0\0\0\0"
    "xla.LogicalBufferProto.Location"
    "instruction_name"
  }},
};

PROTOBUF_NOINLINE void LogicalBufferProto_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LogicalBufferProto.Location)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_index_.Clear();
  _impl_.instruction_name_.ClearToEmpty();
  _impl_.instruction_id_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogicalBufferProto_Location::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogicalBufferProto_Location& this_ = static_cast<const LogicalBufferProto_Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogicalBufferProto_Location::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogicalBufferProto_Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.LogicalBufferProto.Location)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instruction_name = 2 [deprecated = true];
          if (!this_._internal_instruction_name().empty()) {
            const std::string& _s = this_._internal_instruction_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.LogicalBufferProto.Location.instruction_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated int64 shape_index = 3;
          {
            int byte_size = this_._impl_._shape_index_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  3, this_._internal_shape_index(), byte_size, target);
            }
          }

          // int64 instruction_id = 4;
          if (this_._internal_instruction_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_instruction_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.LogicalBufferProto.Location)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogicalBufferProto_Location::ByteSizeLong(const MessageLite& base) {
          const LogicalBufferProto_Location& this_ = static_cast<const LogicalBufferProto_Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogicalBufferProto_Location::ByteSizeLong() const {
          const LogicalBufferProto_Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.LogicalBufferProto.Location)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 shape_index = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_shape_index(), 1,
                      this_._impl_._shape_index_cached_byte_size_);
            }
          }
           {
            // string instruction_name = 2 [deprecated = true];
            if (!this_._internal_instruction_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instruction_name());
            }
            // int64 instruction_id = 4;
            if (this_._internal_instruction_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_instruction_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogicalBufferProto_Location::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogicalBufferProto_Location*>(&to_msg);
  auto& from = static_cast<const LogicalBufferProto_Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.LogicalBufferProto.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_shape_index()->MergeFrom(from._internal_shape_index());
  if (!from._internal_instruction_name().empty()) {
    _this->_internal_set_instruction_name(from._internal_instruction_name());
  }
  if (from._internal_instruction_id() != 0) {
    _this->_impl_.instruction_id_ = from._impl_.instruction_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogicalBufferProto_Location::CopyFrom(const LogicalBufferProto_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LogicalBufferProto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogicalBufferProto_Location::InternalSwap(LogicalBufferProto_Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shape_index_.InternalSwap(&other->_impl_.shape_index_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instruction_name_, &other->_impl_.instruction_name_, arena);
        swap(_impl_.instruction_id_, other->_impl_.instruction_id_);
}

::google::protobuf::Metadata LogicalBufferProto_Location::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogicalBufferProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LogicalBufferProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_._has_bits_);
};

LogicalBufferProto::LogicalBufferProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.LogicalBufferProto)
}
inline PROTOBUF_NDEBUG_INLINE LogicalBufferProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::LogicalBufferProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

LogicalBufferProto::LogicalBufferProto(
    ::google::protobuf::Arena* arena,
    const LogicalBufferProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogicalBufferProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.defined_at_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::LogicalBufferProto_Location>(
                              arena, *from._impl_.defined_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, color_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::color_));

  // @@protoc_insertion_point(copy_constructor:xla.LogicalBufferProto)
}
inline PROTOBUF_NDEBUG_INLINE LogicalBufferProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LogicalBufferProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, defined_at_),
           0,
           offsetof(Impl_, color_) -
               offsetof(Impl_, defined_at_) +
               sizeof(Impl_::color_));
}
LogicalBufferProto::~LogicalBufferProto() {
  // @@protoc_insertion_point(destructor:xla.LogicalBufferProto)
  SharedDtor(*this);
}
inline void LogicalBufferProto::SharedDtor(MessageLite& self) {
  LogicalBufferProto& this_ = static_cast<LogicalBufferProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.defined_at_;
  this_._impl_.~Impl_();
}

inline void* LogicalBufferProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogicalBufferProto(arena);
}
constexpr auto LogicalBufferProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LogicalBufferProto),
                                            alignof(LogicalBufferProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogicalBufferProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogicalBufferProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogicalBufferProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogicalBufferProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogicalBufferProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogicalBufferProto>(), &LogicalBufferProto::ByteSizeLong,
            &LogicalBufferProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_._cached_size_),
        false,
    },
    &LogicalBufferProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogicalBufferProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> LogicalBufferProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::LogicalBufferProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 color = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LogicalBufferProto, _impl_.color_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.color_)}},
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LogicalBufferProto, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.id_)}},
    // int64 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LogicalBufferProto, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.size_)}},
    // .xla.LogicalBufferProto.Location defined_at = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.defined_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 size = 2;
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.LogicalBufferProto.Location defined_at = 3;
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.defined_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 color = 4;
    {PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::LogicalBufferProto_Location>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LogicalBufferProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.LogicalBufferProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.defined_at_ != nullptr);
    _impl_.defined_at_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.color_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.color_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogicalBufferProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogicalBufferProto& this_ = static_cast<const LogicalBufferProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogicalBufferProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogicalBufferProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.LogicalBufferProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // int64 size = 2;
          if (this_._internal_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_size(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.LogicalBufferProto.Location defined_at = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.defined_at_, this_._impl_.defined_at_->GetCachedSize(), target,
                stream);
          }

          // int64 color = 4;
          if (this_._internal_color() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_color(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.LogicalBufferProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogicalBufferProto::ByteSizeLong(const MessageLite& base) {
          const LogicalBufferProto& this_ = static_cast<const LogicalBufferProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogicalBufferProto::ByteSizeLong() const {
          const LogicalBufferProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.LogicalBufferProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .xla.LogicalBufferProto.Location defined_at = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.defined_at_);
            }
          }
           {
            // int64 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_id());
            }
            // int64 size = 2;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_size());
            }
            // int64 color = 4;
            if (this_._internal_color() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_color());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogicalBufferProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogicalBufferProto*>(&to_msg);
  auto& from = static_cast<const LogicalBufferProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.LogicalBufferProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.defined_at_ != nullptr);
    if (_this->_impl_.defined_at_ == nullptr) {
      _this->_impl_.defined_at_ =
          ::google::protobuf::Message::CopyConstruct<::xla::LogicalBufferProto_Location>(arena, *from._impl_.defined_at_);
    } else {
      _this->_impl_.defined_at_->MergeFrom(*from._impl_.defined_at_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  if (from._internal_color() != 0) {
    _this->_impl_.color_ = from._impl_.color_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogicalBufferProto::CopyFrom(const LogicalBufferProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.LogicalBufferProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogicalBufferProto::InternalSwap(LogicalBufferProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.color_)
      + sizeof(LogicalBufferProto::_impl_.color_)
      - PROTOBUF_FIELD_OFFSET(LogicalBufferProto, _impl_.defined_at_)>(
          reinterpret_cast<char*>(&_impl_.defined_at_),
          reinterpret_cast<char*>(&other->_impl_.defined_at_));
}

::google::protobuf::Metadata LogicalBufferProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BufferAllocationProto_Assigned::_Internal {
 public:
};

BufferAllocationProto_Assigned::BufferAllocationProto_Assigned(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAllocationProto.Assigned)
}
BufferAllocationProto_Assigned::BufferAllocationProto_Assigned(
    ::google::protobuf::Arena* arena, const BufferAllocationProto_Assigned& from)
    : BufferAllocationProto_Assigned(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BufferAllocationProto_Assigned::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BufferAllocationProto_Assigned::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, logical_buffer_id_),
           0,
           offsetof(Impl_, size_) -
               offsetof(Impl_, logical_buffer_id_) +
               sizeof(Impl_::size_));
}
BufferAllocationProto_Assigned::~BufferAllocationProto_Assigned() {
  // @@protoc_insertion_point(destructor:xla.BufferAllocationProto.Assigned)
  SharedDtor(*this);
}
inline void BufferAllocationProto_Assigned::SharedDtor(MessageLite& self) {
  BufferAllocationProto_Assigned& this_ = static_cast<BufferAllocationProto_Assigned&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BufferAllocationProto_Assigned::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BufferAllocationProto_Assigned(arena);
}
constexpr auto BufferAllocationProto_Assigned::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BufferAllocationProto_Assigned),
                                            alignof(BufferAllocationProto_Assigned));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BufferAllocationProto_Assigned::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BufferAllocationProto_Assigned_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BufferAllocationProto_Assigned::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BufferAllocationProto_Assigned>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BufferAllocationProto_Assigned::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BufferAllocationProto_Assigned>(), &BufferAllocationProto_Assigned::ByteSizeLong,
            &BufferAllocationProto_Assigned::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_._cached_size_),
        false,
    },
    &BufferAllocationProto_Assigned::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BufferAllocationProto_Assigned::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BufferAllocationProto_Assigned::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::BufferAllocationProto_Assigned>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 logical_buffer_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto_Assigned, _impl_.logical_buffer_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.logical_buffer_id_)}},
    // int64 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto_Assigned, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.offset_)}},
    // int64 size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto_Assigned, _impl_.size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 logical_buffer_id = 1;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.logical_buffer_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 offset = 2;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 size = 3;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BufferAllocationProto_Assigned::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAllocationProto.Assigned)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.logical_buffer_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.logical_buffer_id_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BufferAllocationProto_Assigned::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BufferAllocationProto_Assigned& this_ = static_cast<const BufferAllocationProto_Assigned&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BufferAllocationProto_Assigned::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BufferAllocationProto_Assigned& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAllocationProto.Assigned)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 logical_buffer_id = 1;
          if (this_._internal_logical_buffer_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_logical_buffer_id(), target);
          }

          // int64 offset = 2;
          if (this_._internal_offset() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_offset(), target);
          }

          // int64 size = 3;
          if (this_._internal_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAllocationProto.Assigned)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BufferAllocationProto_Assigned::ByteSizeLong(const MessageLite& base) {
          const BufferAllocationProto_Assigned& this_ = static_cast<const BufferAllocationProto_Assigned&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BufferAllocationProto_Assigned::ByteSizeLong() const {
          const BufferAllocationProto_Assigned& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.BufferAllocationProto.Assigned)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 logical_buffer_id = 1;
            if (this_._internal_logical_buffer_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_logical_buffer_id());
            }
            // int64 offset = 2;
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset());
            }
            // int64 size = 3;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BufferAllocationProto_Assigned::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BufferAllocationProto_Assigned*>(&to_msg);
  auto& from = static_cast<const BufferAllocationProto_Assigned&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAllocationProto.Assigned)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_logical_buffer_id() != 0) {
    _this->_impl_.logical_buffer_id_ = from._impl_.logical_buffer_id_;
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BufferAllocationProto_Assigned::CopyFrom(const BufferAllocationProto_Assigned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAllocationProto.Assigned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BufferAllocationProto_Assigned::InternalSwap(BufferAllocationProto_Assigned* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.size_)
      + sizeof(BufferAllocationProto_Assigned::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(BufferAllocationProto_Assigned, _impl_.logical_buffer_id_)>(
          reinterpret_cast<char*>(&_impl_.logical_buffer_id_),
          reinterpret_cast<char*>(&other->_impl_.logical_buffer_id_));
}

::google::protobuf::Metadata BufferAllocationProto_Assigned::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BufferAllocationProto::_Internal {
 public:
};

BufferAllocationProto::BufferAllocationProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAllocationProto)
}
inline PROTOBUF_NDEBUG_INLINE BufferAllocationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::BufferAllocationProto& from_msg)
      : assigned_{visibility, arena, from.assigned_},
        parameter_shape_index_{visibility, arena, from.parameter_shape_index_},
        _parameter_shape_index_cached_byte_size_{0},
        _cached_size_{0} {}

BufferAllocationProto::BufferAllocationProto(
    ::google::protobuf::Arena* arena,
    const BufferAllocationProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BufferAllocationProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, color_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::color_));

  // @@protoc_insertion_point(copy_constructor:xla.BufferAllocationProto)
}
inline PROTOBUF_NDEBUG_INLINE BufferAllocationProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : assigned_{visibility, arena},
        parameter_shape_index_{visibility, arena},
        _parameter_shape_index_cached_byte_size_{0},
        _cached_size_{0} {}

inline void BufferAllocationProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, color_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::color_));
}
BufferAllocationProto::~BufferAllocationProto() {
  // @@protoc_insertion_point(destructor:xla.BufferAllocationProto)
  SharedDtor(*this);
}
inline void BufferAllocationProto::SharedDtor(MessageLite& self) {
  BufferAllocationProto& this_ = static_cast<BufferAllocationProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BufferAllocationProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BufferAllocationProto(arena);
}
constexpr auto BufferAllocationProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.parameter_shape_index_) +
          decltype(BufferAllocationProto::_impl_.parameter_shape_index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.assigned_) +
          decltype(BufferAllocationProto::_impl_.assigned_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BufferAllocationProto), alignof(BufferAllocationProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BufferAllocationProto::PlacementNew_,
                                 sizeof(BufferAllocationProto),
                                 alignof(BufferAllocationProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BufferAllocationProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BufferAllocationProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BufferAllocationProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BufferAllocationProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BufferAllocationProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BufferAllocationProto>(), &BufferAllocationProto::ByteSizeLong,
            &BufferAllocationProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_._cached_size_),
        false,
    },
    &BufferAllocationProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BufferAllocationProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 0, 2> BufferAllocationProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::BufferAllocationProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.index_)}},
    // int64 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.size_)}},
    // bool is_thread_local = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BufferAllocationProto, _impl_.is_thread_local_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_thread_local_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_entry_computation_parameter = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BufferAllocationProto, _impl_.is_entry_computation_parameter_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_entry_computation_parameter_)}},
    // int64 parameter_number = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto, _impl_.parameter_number_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.parameter_number_)}},
    // bool maybe_live_out = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BufferAllocationProto, _impl_.maybe_live_out_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.maybe_live_out_)}},
    // int64 color = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAllocationProto, _impl_.color_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.color_)}},
    // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.assigned_)}},
    // repeated int64 parameter_shape_index = 10;
    {::_pbi::TcParser::FastV64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.parameter_shape_index_)}},
    // bool is_tuple = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BufferAllocationProto, _impl_.is_tuple_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_tuple_)}},
    // bool is_constant = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BufferAllocationProto, _impl_.is_constant_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_constant_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 index = 1;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 size = 2;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool is_thread_local = 3;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_thread_local_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_entry_computation_parameter = 5;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_entry_computation_parameter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 parameter_number = 6;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.parameter_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool maybe_live_out = 7;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.maybe_live_out_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 color = 8;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.color_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.assigned_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int64 parameter_shape_index = 10;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.parameter_shape_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // bool is_tuple = 11;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_tuple_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_constant = 12;
    {PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.is_constant_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::BufferAllocationProto_Assigned>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BufferAllocationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAllocationProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assigned_.Clear();
  _impl_.parameter_shape_index_.Clear();
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.color_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.color_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BufferAllocationProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BufferAllocationProto& this_ = static_cast<const BufferAllocationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BufferAllocationProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BufferAllocationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAllocationProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 index = 1;
          if (this_._internal_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_index(), target);
          }

          // int64 size = 2;
          if (this_._internal_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_size(), target);
          }

          // bool is_thread_local = 3;
          if (this_._internal_is_thread_local() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_thread_local(), target);
          }

          // bool is_entry_computation_parameter = 5;
          if (this_._internal_is_entry_computation_parameter() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_entry_computation_parameter(), target);
          }

          // int64 parameter_number = 6;
          if (this_._internal_parameter_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_parameter_number(), target);
          }

          // bool maybe_live_out = 7;
          if (this_._internal_maybe_live_out() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_maybe_live_out(), target);
          }

          // int64 color = 8;
          if (this_._internal_color() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_color(), target);
          }

          // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_assigned_size());
               i < n; i++) {
            const auto& repfield = this_._internal_assigned().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated int64 parameter_shape_index = 10;
          {
            int byte_size = this_._impl_._parameter_shape_index_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  10, this_._internal_parameter_shape_index(), byte_size, target);
            }
          }

          // bool is_tuple = 11;
          if (this_._internal_is_tuple() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_is_tuple(), target);
          }

          // bool is_constant = 12;
          if (this_._internal_is_constant() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_is_constant(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAllocationProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BufferAllocationProto::ByteSizeLong(const MessageLite& base) {
          const BufferAllocationProto& this_ = static_cast<const BufferAllocationProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BufferAllocationProto::ByteSizeLong() const {
          const BufferAllocationProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.BufferAllocationProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.BufferAllocationProto.Assigned assigned = 9;
            {
              total_size += 1UL * this_._internal_assigned_size();
              for (const auto& msg : this_._internal_assigned()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated int64 parameter_shape_index = 10;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_parameter_shape_index(), 1,
                      this_._impl_._parameter_shape_index_cached_byte_size_);
            }
          }
           {
            // int64 index = 1;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_index());
            }
            // int64 size = 2;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_size());
            }
            // int64 parameter_number = 6;
            if (this_._internal_parameter_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_parameter_number());
            }
            // bool maybe_live_out = 7;
            if (this_._internal_maybe_live_out() != 0) {
              total_size += 2;
            }
            // bool is_thread_local = 3;
            if (this_._internal_is_thread_local() != 0) {
              total_size += 2;
            }
            // bool is_tuple = 11;
            if (this_._internal_is_tuple() != 0) {
              total_size += 2;
            }
            // bool is_entry_computation_parameter = 5;
            if (this_._internal_is_entry_computation_parameter() != 0) {
              total_size += 2;
            }
            // bool is_constant = 12;
            if (this_._internal_is_constant() != 0) {
              total_size += 2;
            }
            // int64 color = 8;
            if (this_._internal_color() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_color());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BufferAllocationProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BufferAllocationProto*>(&to_msg);
  auto& from = static_cast<const BufferAllocationProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAllocationProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_assigned()->MergeFrom(
      from._internal_assigned());
  _this->_internal_mutable_parameter_shape_index()->MergeFrom(from._internal_parameter_shape_index());
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  if (from._internal_parameter_number() != 0) {
    _this->_impl_.parameter_number_ = from._impl_.parameter_number_;
  }
  if (from._internal_maybe_live_out() != 0) {
    _this->_impl_.maybe_live_out_ = from._impl_.maybe_live_out_;
  }
  if (from._internal_is_thread_local() != 0) {
    _this->_impl_.is_thread_local_ = from._impl_.is_thread_local_;
  }
  if (from._internal_is_tuple() != 0) {
    _this->_impl_.is_tuple_ = from._impl_.is_tuple_;
  }
  if (from._internal_is_entry_computation_parameter() != 0) {
    _this->_impl_.is_entry_computation_parameter_ = from._impl_.is_entry_computation_parameter_;
  }
  if (from._internal_is_constant() != 0) {
    _this->_impl_.is_constant_ = from._impl_.is_constant_;
  }
  if (from._internal_color() != 0) {
    _this->_impl_.color_ = from._impl_.color_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BufferAllocationProto::CopyFrom(const BufferAllocationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAllocationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BufferAllocationProto::InternalSwap(BufferAllocationProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.assigned_.InternalSwap(&other->_impl_.assigned_);
  _impl_.parameter_shape_index_.InternalSwap(&other->_impl_.parameter_shape_index_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.color_)
      + sizeof(BufferAllocationProto::_impl_.color_)
      - PROTOBUF_FIELD_OFFSET(BufferAllocationProto, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata BufferAllocationProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeapSimulatorTrace_Event::_Internal {
 public:
};

HeapSimulatorTrace_Event::HeapSimulatorTrace_Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HeapSimulatorTrace.Event)
}
inline PROTOBUF_NDEBUG_INLINE HeapSimulatorTrace_Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HeapSimulatorTrace_Event& from_msg)
      : computation_name_(arena, from.computation_name_),
        instruction_name_(arena, from.instruction_name_),
        _cached_size_{0} {}

HeapSimulatorTrace_Event::HeapSimulatorTrace_Event(
    ::google::protobuf::Arena* arena,
    const HeapSimulatorTrace_Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeapSimulatorTrace_Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buffer_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, buffer_id_),
           offsetof(Impl_, kind_) -
               offsetof(Impl_, buffer_id_) +
               sizeof(Impl_::kind_));

  // @@protoc_insertion_point(copy_constructor:xla.HeapSimulatorTrace.Event)
}
inline PROTOBUF_NDEBUG_INLINE HeapSimulatorTrace_Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : computation_name_(arena),
        instruction_name_(arena),
        _cached_size_{0} {}

inline void HeapSimulatorTrace_Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buffer_id_),
           0,
           offsetof(Impl_, kind_) -
               offsetof(Impl_, buffer_id_) +
               sizeof(Impl_::kind_));
}
HeapSimulatorTrace_Event::~HeapSimulatorTrace_Event() {
  // @@protoc_insertion_point(destructor:xla.HeapSimulatorTrace.Event)
  SharedDtor(*this);
}
inline void HeapSimulatorTrace_Event::SharedDtor(MessageLite& self) {
  HeapSimulatorTrace_Event& this_ = static_cast<HeapSimulatorTrace_Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.computation_name_.Destroy();
  this_._impl_.instruction_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HeapSimulatorTrace_Event::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeapSimulatorTrace_Event(arena);
}
constexpr auto HeapSimulatorTrace_Event::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HeapSimulatorTrace_Event),
                                            alignof(HeapSimulatorTrace_Event));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeapSimulatorTrace_Event::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeapSimulatorTrace_Event_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeapSimulatorTrace_Event::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeapSimulatorTrace_Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeapSimulatorTrace_Event::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeapSimulatorTrace_Event>(), &HeapSimulatorTrace_Event::ByteSizeLong,
            &HeapSimulatorTrace_Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_._cached_size_),
        false,
    },
    &HeapSimulatorTrace_Event::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeapSimulatorTrace_Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 69, 2> HeapSimulatorTrace_Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HeapSimulatorTrace_Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeapSimulatorTrace_Event, _impl_.kind_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.kind_)}},
    // int64 buffer_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeapSimulatorTrace_Event, _impl_.buffer_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.buffer_id_)}},
    // string computation_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.computation_name_)}},
    // string instruction_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.instruction_name_)}},
    // int64 share_with_canonical_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeapSimulatorTrace_Event, _impl_.share_with_canonical_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.share_with_canonical_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.kind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 buffer_id = 2;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.buffer_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string computation_name = 3;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.computation_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instruction_name = 4;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.instruction_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 share_with_canonical_id = 5;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.share_with_canonical_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\34\0\0\20\20\0\0\0"
    "xla.HeapSimulatorTrace.Event"
    "computation_name"
    "instruction_name"
  }},
};

PROTOBUF_NOINLINE void HeapSimulatorTrace_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HeapSimulatorTrace.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.computation_name_.ClearToEmpty();
  _impl_.instruction_name_.ClearToEmpty();
  ::memset(&_impl_.buffer_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.kind_) -
      reinterpret_cast<char*>(&_impl_.buffer_id_)) + sizeof(_impl_.kind_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeapSimulatorTrace_Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeapSimulatorTrace_Event& this_ = static_cast<const HeapSimulatorTrace_Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeapSimulatorTrace_Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeapSimulatorTrace_Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HeapSimulatorTrace.Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
          if (this_._internal_kind() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_kind(), target);
          }

          // int64 buffer_id = 2;
          if (this_._internal_buffer_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_buffer_id(), target);
          }

          // string computation_name = 3;
          if (!this_._internal_computation_name().empty()) {
            const std::string& _s = this_._internal_computation_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HeapSimulatorTrace.Event.computation_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string instruction_name = 4;
          if (!this_._internal_instruction_name().empty()) {
            const std::string& _s = this_._internal_instruction_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HeapSimulatorTrace.Event.instruction_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int64 share_with_canonical_id = 5;
          if (this_._internal_share_with_canonical_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_share_with_canonical_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HeapSimulatorTrace.Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeapSimulatorTrace_Event::ByteSizeLong(const MessageLite& base) {
          const HeapSimulatorTrace_Event& this_ = static_cast<const HeapSimulatorTrace_Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeapSimulatorTrace_Event::ByteSizeLong() const {
          const HeapSimulatorTrace_Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HeapSimulatorTrace.Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string computation_name = 3;
            if (!this_._internal_computation_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_computation_name());
            }
            // string instruction_name = 4;
            if (!this_._internal_instruction_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instruction_name());
            }
            // int64 buffer_id = 2;
            if (this_._internal_buffer_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_buffer_id());
            }
            // int64 share_with_canonical_id = 5;
            if (this_._internal_share_with_canonical_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_share_with_canonical_id());
            }
            // .xla.HeapSimulatorTrace.Event.Kind kind = 1;
            if (this_._internal_kind() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeapSimulatorTrace_Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeapSimulatorTrace_Event*>(&to_msg);
  auto& from = static_cast<const HeapSimulatorTrace_Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HeapSimulatorTrace.Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_computation_name().empty()) {
    _this->_internal_set_computation_name(from._internal_computation_name());
  }
  if (!from._internal_instruction_name().empty()) {
    _this->_internal_set_instruction_name(from._internal_instruction_name());
  }
  if (from._internal_buffer_id() != 0) {
    _this->_impl_.buffer_id_ = from._impl_.buffer_id_;
  }
  if (from._internal_share_with_canonical_id() != 0) {
    _this->_impl_.share_with_canonical_id_ = from._impl_.share_with_canonical_id_;
  }
  if (from._internal_kind() != 0) {
    _this->_impl_.kind_ = from._impl_.kind_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeapSimulatorTrace_Event::CopyFrom(const HeapSimulatorTrace_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HeapSimulatorTrace.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeapSimulatorTrace_Event::InternalSwap(HeapSimulatorTrace_Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.computation_name_, &other->_impl_.computation_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instruction_name_, &other->_impl_.instruction_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.kind_)
      + sizeof(HeapSimulatorTrace_Event::_impl_.kind_)
      - PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace_Event, _impl_.buffer_id_)>(
          reinterpret_cast<char*>(&_impl_.buffer_id_),
          reinterpret_cast<char*>(&other->_impl_.buffer_id_));
}

::google::protobuf::Metadata HeapSimulatorTrace_Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeapSimulatorTrace::_Internal {
 public:
};

HeapSimulatorTrace::HeapSimulatorTrace(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HeapSimulatorTrace)
}
inline PROTOBUF_NDEBUG_INLINE HeapSimulatorTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HeapSimulatorTrace& from_msg)
      : events_{visibility, arena, from.events_},
        _cached_size_{0} {}

HeapSimulatorTrace::HeapSimulatorTrace(
    ::google::protobuf::Arena* arena,
    const HeapSimulatorTrace& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeapSimulatorTrace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buffer_allocation_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, buffer_allocation_index_),
           offsetof(Impl_, whole_module_simulation_) -
               offsetof(Impl_, buffer_allocation_index_) +
               sizeof(Impl_::whole_module_simulation_));

  // @@protoc_insertion_point(copy_constructor:xla.HeapSimulatorTrace)
}
inline PROTOBUF_NDEBUG_INLINE HeapSimulatorTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : events_{visibility, arena},
        _cached_size_{0} {}

inline void HeapSimulatorTrace::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buffer_allocation_index_),
           0,
           offsetof(Impl_, whole_module_simulation_) -
               offsetof(Impl_, buffer_allocation_index_) +
               sizeof(Impl_::whole_module_simulation_));
}
HeapSimulatorTrace::~HeapSimulatorTrace() {
  // @@protoc_insertion_point(destructor:xla.HeapSimulatorTrace)
  SharedDtor(*this);
}
inline void HeapSimulatorTrace::SharedDtor(MessageLite& self) {
  HeapSimulatorTrace& this_ = static_cast<HeapSimulatorTrace&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HeapSimulatorTrace::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeapSimulatorTrace(arena);
}
constexpr auto HeapSimulatorTrace::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.events_) +
          decltype(HeapSimulatorTrace::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HeapSimulatorTrace), alignof(HeapSimulatorTrace), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HeapSimulatorTrace::PlacementNew_,
                                 sizeof(HeapSimulatorTrace),
                                 alignof(HeapSimulatorTrace));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeapSimulatorTrace::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeapSimulatorTrace_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeapSimulatorTrace::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeapSimulatorTrace>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeapSimulatorTrace::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeapSimulatorTrace>(), &HeapSimulatorTrace::ByteSizeLong,
            &HeapSimulatorTrace::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_._cached_size_),
        false,
    },
    &HeapSimulatorTrace::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeapSimulatorTrace::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> HeapSimulatorTrace::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HeapSimulatorTrace>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .xla.HeapSimulatorTrace.Event events = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.events_)}},
    // bool whole_module_simulation = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HeapSimulatorTrace, _impl_.whole_module_simulation_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.whole_module_simulation_)}},
    // int64 buffer_allocation_index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeapSimulatorTrace, _impl_.buffer_allocation_index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.buffer_allocation_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xla.HeapSimulatorTrace.Event events = 1;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool whole_module_simulation = 2;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.whole_module_simulation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 buffer_allocation_index = 3;
    {PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.buffer_allocation_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HeapSimulatorTrace_Event>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HeapSimulatorTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HeapSimulatorTrace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  ::memset(&_impl_.buffer_allocation_index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.whole_module_simulation_) -
      reinterpret_cast<char*>(&_impl_.buffer_allocation_index_)) + sizeof(_impl_.whole_module_simulation_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeapSimulatorTrace::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeapSimulatorTrace& this_ = static_cast<const HeapSimulatorTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeapSimulatorTrace::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeapSimulatorTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HeapSimulatorTrace)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .xla.HeapSimulatorTrace.Event events = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool whole_module_simulation = 2;
          if (this_._internal_whole_module_simulation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_whole_module_simulation(), target);
          }

          // int64 buffer_allocation_index = 3;
          if (this_._internal_buffer_allocation_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_buffer_allocation_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HeapSimulatorTrace)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeapSimulatorTrace::ByteSizeLong(const MessageLite& base) {
          const HeapSimulatorTrace& this_ = static_cast<const HeapSimulatorTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeapSimulatorTrace::ByteSizeLong() const {
          const HeapSimulatorTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HeapSimulatorTrace)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.HeapSimulatorTrace.Event events = 1;
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int64 buffer_allocation_index = 3;
            if (this_._internal_buffer_allocation_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_buffer_allocation_index());
            }
            // bool whole_module_simulation = 2;
            if (this_._internal_whole_module_simulation() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeapSimulatorTrace::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeapSimulatorTrace*>(&to_msg);
  auto& from = static_cast<const HeapSimulatorTrace&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HeapSimulatorTrace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  if (from._internal_buffer_allocation_index() != 0) {
    _this->_impl_.buffer_allocation_index_ = from._impl_.buffer_allocation_index_;
  }
  if (from._internal_whole_module_simulation() != 0) {
    _this->_impl_.whole_module_simulation_ = from._impl_.whole_module_simulation_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeapSimulatorTrace::CopyFrom(const HeapSimulatorTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HeapSimulatorTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeapSimulatorTrace::InternalSwap(HeapSimulatorTrace* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.whole_module_simulation_)
      + sizeof(HeapSimulatorTrace::_impl_.whole_module_simulation_)
      - PROTOBUF_FIELD_OFFSET(HeapSimulatorTrace, _impl_.buffer_allocation_index_)>(
          reinterpret_cast<char*>(&_impl_.buffer_allocation_index_),
          reinterpret_cast<char*>(&other->_impl_.buffer_allocation_index_));
}

::google::protobuf::Metadata HeapSimulatorTrace::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloModuleGroupProto::_Internal {
 public:
};

HloModuleGroupProto::HloModuleGroupProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleGroupProto)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleGroupProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloModuleGroupProto& from_msg)
      : hlo_modules_{visibility, arena, from.hlo_modules_},
        name_(arena, from.name_),
        _cached_size_{0} {}

HloModuleGroupProto::HloModuleGroupProto(
    ::google::protobuf::Arena* arena,
    const HloModuleGroupProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloModuleGroupProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.HloModuleGroupProto)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleGroupProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hlo_modules_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void HloModuleGroupProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HloModuleGroupProto::~HloModuleGroupProto() {
  // @@protoc_insertion_point(destructor:xla.HloModuleGroupProto)
  SharedDtor(*this);
}
inline void HloModuleGroupProto::SharedDtor(MessageLite& self) {
  HloModuleGroupProto& this_ = static_cast<HloModuleGroupProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HloModuleGroupProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloModuleGroupProto(arena);
}
constexpr auto HloModuleGroupProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloModuleGroupProto, _impl_.hlo_modules_) +
          decltype(HloModuleGroupProto::_impl_.hlo_modules_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloModuleGroupProto), alignof(HloModuleGroupProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloModuleGroupProto::PlacementNew_,
                                 sizeof(HloModuleGroupProto),
                                 alignof(HloModuleGroupProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloModuleGroupProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloModuleGroupProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloModuleGroupProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloModuleGroupProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloModuleGroupProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloModuleGroupProto>(), &HloModuleGroupProto::ByteSizeLong,
            &HloModuleGroupProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloModuleGroupProto, _impl_._cached_size_),
        false,
    },
    &HloModuleGroupProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloModuleGroupProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 36, 2> HloModuleGroupProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloModuleGroupProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xla.HloModuleProto hlo_modules = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleGroupProto, _impl_.hlo_modules_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleGroupProto, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(HloModuleGroupProto, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .xla.HloModuleProto hlo_modules = 2;
    {PROTOBUF_FIELD_OFFSET(HloModuleGroupProto, _impl_.hlo_modules_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloModuleProto>()},
  }}, {{
    "\27\4\0\0\0\0\0\0"
    "xla.HloModuleGroupProto"
    "name"
  }},
};

PROTOBUF_NOINLINE void HloModuleGroupProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleGroupProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hlo_modules_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloModuleGroupProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloModuleGroupProto& this_ = static_cast<const HloModuleGroupProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloModuleGroupProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloModuleGroupProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleGroupProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloModuleGroupProto.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .xla.HloModuleProto hlo_modules = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hlo_modules_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hlo_modules().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleGroupProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloModuleGroupProto::ByteSizeLong(const MessageLite& base) {
          const HloModuleGroupProto& this_ = static_cast<const HloModuleGroupProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloModuleGroupProto::ByteSizeLong() const {
          const HloModuleGroupProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloModuleGroupProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.HloModuleProto hlo_modules = 2;
            {
              total_size += 1UL * this_._internal_hlo_modules_size();
              for (const auto& msg : this_._internal_hlo_modules()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloModuleGroupProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloModuleGroupProto*>(&to_msg);
  auto& from = static_cast<const HloModuleGroupProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleGroupProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hlo_modules()->MergeFrom(
      from._internal_hlo_modules());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloModuleGroupProto::CopyFrom(const HloModuleGroupProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleGroupProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloModuleGroupProto::InternalSwap(HloModuleGroupProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hlo_modules_.InternalSwap(&other->_impl_.hlo_modules_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata HloModuleGroupProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BufferAssignmentProto_BufferAlias::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BufferAssignmentProto_BufferAlias>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_._has_bits_);
};

BufferAssignmentProto_BufferAlias::BufferAssignmentProto_BufferAlias(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAssignmentProto.BufferAlias)
}
inline PROTOBUF_NDEBUG_INLINE BufferAssignmentProto_BufferAlias::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::BufferAssignmentProto_BufferAlias& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BufferAssignmentProto_BufferAlias::BufferAssignmentProto_BufferAlias(
    ::google::protobuf::Arena* arena,
    const BufferAssignmentProto_BufferAlias& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BufferAssignmentProto_BufferAlias* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::LogicalBufferProto_Location>(
                              arena, *from._impl_.location_)
                        : nullptr;
  _impl_.source_buffer_id_ = from._impl_.source_buffer_id_;

  // @@protoc_insertion_point(copy_constructor:xla.BufferAssignmentProto.BufferAlias)
}
inline PROTOBUF_NDEBUG_INLINE BufferAssignmentProto_BufferAlias::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BufferAssignmentProto_BufferAlias::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, location_),
           0,
           offsetof(Impl_, source_buffer_id_) -
               offsetof(Impl_, location_) +
               sizeof(Impl_::source_buffer_id_));
}
BufferAssignmentProto_BufferAlias::~BufferAssignmentProto_BufferAlias() {
  // @@protoc_insertion_point(destructor:xla.BufferAssignmentProto.BufferAlias)
  SharedDtor(*this);
}
inline void BufferAssignmentProto_BufferAlias::SharedDtor(MessageLite& self) {
  BufferAssignmentProto_BufferAlias& this_ = static_cast<BufferAssignmentProto_BufferAlias&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.location_;
  this_._impl_.~Impl_();
}

inline void* BufferAssignmentProto_BufferAlias::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BufferAssignmentProto_BufferAlias(arena);
}
constexpr auto BufferAssignmentProto_BufferAlias::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BufferAssignmentProto_BufferAlias),
                                            alignof(BufferAssignmentProto_BufferAlias));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BufferAssignmentProto_BufferAlias::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BufferAssignmentProto_BufferAlias_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BufferAssignmentProto_BufferAlias::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BufferAssignmentProto_BufferAlias>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BufferAssignmentProto_BufferAlias::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BufferAssignmentProto_BufferAlias>(), &BufferAssignmentProto_BufferAlias::ByteSizeLong,
            &BufferAssignmentProto_BufferAlias::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_._cached_size_),
        false,
    },
    &BufferAssignmentProto_BufferAlias::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BufferAssignmentProto_BufferAlias::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> BufferAssignmentProto_BufferAlias::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::BufferAssignmentProto_BufferAlias>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .xla.LogicalBufferProto.Location location = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_.location_)}},
    // int64 source_buffer_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BufferAssignmentProto_BufferAlias, _impl_.source_buffer_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_.source_buffer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 source_buffer_id = 1;
    {PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_.source_buffer_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .xla.LogicalBufferProto.Location location = 2;
    {PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::LogicalBufferProto_Location>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BufferAssignmentProto_BufferAlias::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAssignmentProto.BufferAlias)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_ != nullptr);
    _impl_.location_->Clear();
  }
  _impl_.source_buffer_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BufferAssignmentProto_BufferAlias::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BufferAssignmentProto_BufferAlias& this_ = static_cast<const BufferAssignmentProto_BufferAlias&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BufferAssignmentProto_BufferAlias::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BufferAssignmentProto_BufferAlias& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAssignmentProto.BufferAlias)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 source_buffer_id = 1;
          if (this_._internal_source_buffer_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_source_buffer_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.LogicalBufferProto.Location location = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.location_, this_._impl_.location_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAssignmentProto.BufferAlias)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BufferAssignmentProto_BufferAlias::ByteSizeLong(const MessageLite& base) {
          const BufferAssignmentProto_BufferAlias& this_ = static_cast<const BufferAssignmentProto_BufferAlias&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BufferAssignmentProto_BufferAlias::ByteSizeLong() const {
          const BufferAssignmentProto_BufferAlias& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.BufferAssignmentProto.BufferAlias)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .xla.LogicalBufferProto.Location location = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.location_);
            }
          }
           {
            // int64 source_buffer_id = 1;
            if (this_._internal_source_buffer_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_source_buffer_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BufferAssignmentProto_BufferAlias::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BufferAssignmentProto_BufferAlias*>(&to_msg);
  auto& from = static_cast<const BufferAssignmentProto_BufferAlias&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAssignmentProto.BufferAlias)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.location_ != nullptr);
    if (_this->_impl_.location_ == nullptr) {
      _this->_impl_.location_ =
          ::google::protobuf::Message::CopyConstruct<::xla::LogicalBufferProto_Location>(arena, *from._impl_.location_);
    } else {
      _this->_impl_.location_->MergeFrom(*from._impl_.location_);
    }
  }
  if (from._internal_source_buffer_id() != 0) {
    _this->_impl_.source_buffer_id_ = from._impl_.source_buffer_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BufferAssignmentProto_BufferAlias::CopyFrom(const BufferAssignmentProto_BufferAlias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAssignmentProto.BufferAlias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BufferAssignmentProto_BufferAlias::InternalSwap(BufferAssignmentProto_BufferAlias* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_.source_buffer_id_)
      + sizeof(BufferAssignmentProto_BufferAlias::_impl_.source_buffer_id_)
      - PROTOBUF_FIELD_OFFSET(BufferAssignmentProto_BufferAlias, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata BufferAssignmentProto_BufferAlias::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BufferAssignmentProto::_Internal {
 public:
};

BufferAssignmentProto::BufferAssignmentProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.BufferAssignmentProto)
}
inline PROTOBUF_NDEBUG_INLINE BufferAssignmentProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::BufferAssignmentProto& from_msg)
      : logical_buffers_{visibility, arena, from.logical_buffers_},
        buffer_aliases_{visibility, arena, from.buffer_aliases_},
        buffer_allocations_{visibility, arena, from.buffer_allocations_},
        heap_simulator_traces_{visibility, arena, from.heap_simulator_traces_},
        _cached_size_{0} {}

BufferAssignmentProto::BufferAssignmentProto(
    ::google::protobuf::Arena* arena,
    const BufferAssignmentProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BufferAssignmentProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xla.BufferAssignmentProto)
}
inline PROTOBUF_NDEBUG_INLINE BufferAssignmentProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logical_buffers_{visibility, arena},
        buffer_aliases_{visibility, arena},
        buffer_allocations_{visibility, arena},
        heap_simulator_traces_{visibility, arena},
        _cached_size_{0} {}

inline void BufferAssignmentProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BufferAssignmentProto::~BufferAssignmentProto() {
  // @@protoc_insertion_point(destructor:xla.BufferAssignmentProto)
  SharedDtor(*this);
}
inline void BufferAssignmentProto::SharedDtor(MessageLite& self) {
  BufferAssignmentProto& this_ = static_cast<BufferAssignmentProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BufferAssignmentProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BufferAssignmentProto(arena);
}
constexpr auto BufferAssignmentProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.logical_buffers_) +
          decltype(BufferAssignmentProto::_impl_.logical_buffers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.buffer_aliases_) +
          decltype(BufferAssignmentProto::_impl_.buffer_aliases_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.buffer_allocations_) +
          decltype(BufferAssignmentProto::_impl_.buffer_allocations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.heap_simulator_traces_) +
          decltype(BufferAssignmentProto::_impl_.heap_simulator_traces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BufferAssignmentProto), alignof(BufferAssignmentProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BufferAssignmentProto::PlacementNew_,
                                 sizeof(BufferAssignmentProto),
                                 alignof(BufferAssignmentProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BufferAssignmentProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BufferAssignmentProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BufferAssignmentProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BufferAssignmentProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BufferAssignmentProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BufferAssignmentProto>(), &BufferAssignmentProto::ByteSizeLong,
            &BufferAssignmentProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_._cached_size_),
        false,
    },
    &BufferAssignmentProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BufferAssignmentProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> BufferAssignmentProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::BufferAssignmentProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.heap_simulator_traces_)}},
    // repeated .xla.LogicalBufferProto logical_buffers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.logical_buffers_)}},
    // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.buffer_aliases_)}},
    // repeated .xla.BufferAllocationProto buffer_allocations = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.buffer_allocations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xla.LogicalBufferProto logical_buffers = 1;
    {PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.logical_buffers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
    {PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.buffer_aliases_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.BufferAllocationProto buffer_allocations = 3;
    {PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.buffer_allocations_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
    {PROTOBUF_FIELD_OFFSET(BufferAssignmentProto, _impl_.heap_simulator_traces_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::LogicalBufferProto>()},
    {::_pbi::TcParser::GetTable<::xla::BufferAssignmentProto_BufferAlias>()},
    {::_pbi::TcParser::GetTable<::xla::BufferAllocationProto>()},
    {::_pbi::TcParser::GetTable<::xla::HeapSimulatorTrace>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BufferAssignmentProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.BufferAssignmentProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logical_buffers_.Clear();
  _impl_.buffer_aliases_.Clear();
  _impl_.buffer_allocations_.Clear();
  _impl_.heap_simulator_traces_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BufferAssignmentProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BufferAssignmentProto& this_ = static_cast<const BufferAssignmentProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BufferAssignmentProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BufferAssignmentProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.BufferAssignmentProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .xla.LogicalBufferProto logical_buffers = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logical_buffers_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logical_buffers().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_buffer_aliases_size());
               i < n; i++) {
            const auto& repfield = this_._internal_buffer_aliases().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .xla.BufferAllocationProto buffer_allocations = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_buffer_allocations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_buffer_allocations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_heap_simulator_traces_size());
               i < n; i++) {
            const auto& repfield = this_._internal_heap_simulator_traces().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.BufferAssignmentProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BufferAssignmentProto::ByteSizeLong(const MessageLite& base) {
          const BufferAssignmentProto& this_ = static_cast<const BufferAssignmentProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BufferAssignmentProto::ByteSizeLong() const {
          const BufferAssignmentProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.BufferAssignmentProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.LogicalBufferProto logical_buffers = 1;
            {
              total_size += 1UL * this_._internal_logical_buffers_size();
              for (const auto& msg : this_._internal_logical_buffers()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.BufferAssignmentProto.BufferAlias buffer_aliases = 2;
            {
              total_size += 1UL * this_._internal_buffer_aliases_size();
              for (const auto& msg : this_._internal_buffer_aliases()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.BufferAllocationProto buffer_allocations = 3;
            {
              total_size += 1UL * this_._internal_buffer_allocations_size();
              for (const auto& msg : this_._internal_buffer_allocations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .xla.HeapSimulatorTrace heap_simulator_traces = 4;
            {
              total_size += 1UL * this_._internal_heap_simulator_traces_size();
              for (const auto& msg : this_._internal_heap_simulator_traces()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BufferAssignmentProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BufferAssignmentProto*>(&to_msg);
  auto& from = static_cast<const BufferAssignmentProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.BufferAssignmentProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logical_buffers()->MergeFrom(
      from._internal_logical_buffers());
  _this->_internal_mutable_buffer_aliases()->MergeFrom(
      from._internal_buffer_aliases());
  _this->_internal_mutable_buffer_allocations()->MergeFrom(
      from._internal_buffer_allocations());
  _this->_internal_mutable_heap_simulator_traces()->MergeFrom(
      from._internal_heap_simulator_traces());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BufferAssignmentProto::CopyFrom(const BufferAssignmentProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.BufferAssignmentProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BufferAssignmentProto::InternalSwap(BufferAssignmentProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.logical_buffers_.InternalSwap(&other->_impl_.logical_buffers_);
  _impl_.buffer_aliases_.InternalSwap(&other->_impl_.buffer_aliases_);
  _impl_.buffer_allocations_.InternalSwap(&other->_impl_.buffer_allocations_);
  _impl_.heap_simulator_traces_.InternalSwap(&other->_impl_.heap_simulator_traces_);
}

::google::protobuf::Metadata BufferAssignmentProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HloProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HloProto, _impl_._has_bits_);
};

HloProto::HloProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloProto)
}
inline PROTOBUF_NDEBUG_INLINE HloProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HloProto::HloProto(
    ::google::protobuf::Arena* arena,
    const HloProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hlo_module_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::HloModuleProto>(
                              arena, *from._impl_.hlo_module_)
                        : nullptr;
  _impl_.buffer_assignment_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::xla::BufferAssignmentProto>(
                              arena, *from._impl_.buffer_assignment_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:xla.HloProto)
}
inline PROTOBUF_NDEBUG_INLINE HloProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HloProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hlo_module_),
           0,
           offsetof(Impl_, buffer_assignment_) -
               offsetof(Impl_, hlo_module_) +
               sizeof(Impl_::buffer_assignment_));
}
HloProto::~HloProto() {
  // @@protoc_insertion_point(destructor:xla.HloProto)
  SharedDtor(*this);
}
inline void HloProto::SharedDtor(MessageLite& self) {
  HloProto& this_ = static_cast<HloProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.hlo_module_;
  delete this_._impl_.buffer_assignment_;
  this_._impl_.~Impl_();
}

inline void* HloProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloProto(arena);
}
constexpr auto HloProto::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HloProto),
                                            alignof(HloProto));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloProto>(), &HloProto::ByteSizeLong,
            &HloProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloProto, _impl_._cached_size_),
        false,
    },
    &HloProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 2, 0, 2> HloProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloProto, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .xla.HloModuleProto hlo_module = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HloProto, _impl_.hlo_module_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .xla.BufferAssignmentProto buffer_assignment = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(HloProto, _impl_.buffer_assignment_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .xla.HloModuleProto hlo_module = 1;
    {PROTOBUF_FIELD_OFFSET(HloProto, _impl_.hlo_module_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.BufferAssignmentProto buffer_assignment = 3;
    {PROTOBUF_FIELD_OFFSET(HloProto, _impl_.buffer_assignment_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloModuleProto>()},
    {::_pbi::TcParser::GetTable<::xla::BufferAssignmentProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HloProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hlo_module_ != nullptr);
      _impl_.hlo_module_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.buffer_assignment_ != nullptr);
      _impl_.buffer_assignment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloProto& this_ = static_cast<const HloProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.HloModuleProto hlo_module = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.hlo_module_, this_._impl_.hlo_module_->GetCachedSize(), target,
                stream);
          }

          // .xla.BufferAssignmentProto buffer_assignment = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.buffer_assignment_, this_._impl_.buffer_assignment_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloProto::ByteSizeLong(const MessageLite& base) {
          const HloProto& this_ = static_cast<const HloProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloProto::ByteSizeLong() const {
          const HloProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .xla.HloModuleProto hlo_module = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hlo_module_);
            }
            // .xla.BufferAssignmentProto buffer_assignment = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.buffer_assignment_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloProto*>(&to_msg);
  auto& from = static_cast<const HloProto&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hlo_module_ != nullptr);
      if (_this->_impl_.hlo_module_ == nullptr) {
        _this->_impl_.hlo_module_ =
            ::google::protobuf::Message::CopyConstruct<::xla::HloModuleProto>(arena, *from._impl_.hlo_module_);
      } else {
        _this->_impl_.hlo_module_->MergeFrom(*from._impl_.hlo_module_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.buffer_assignment_ != nullptr);
      if (_this->_impl_.buffer_assignment_ == nullptr) {
        _this->_impl_.buffer_assignment_ =
            ::google::protobuf::Message::CopyConstruct<::xla::BufferAssignmentProto>(arena, *from._impl_.buffer_assignment_);
      } else {
        _this->_impl_.buffer_assignment_->MergeFrom(*from._impl_.buffer_assignment_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloProto::CopyFrom(const HloProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloProto::InternalSwap(HloProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloProto, _impl_.buffer_assignment_)
      + sizeof(HloProto::_impl_.buffer_assignment_)
      - PROTOBUF_FIELD_OFFSET(HloProto, _impl_.hlo_module_)>(
          reinterpret_cast<char*>(&_impl_.hlo_module_),
          reinterpret_cast<char*>(&other->_impl_.hlo_module_));
}

::google::protobuf::Metadata HloProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloSnapshot::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HloSnapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_._has_bits_);
};

void HloSnapshot::clear_arguments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arguments_.Clear();
}
void HloSnapshot::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
HloSnapshot::HloSnapshot(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloSnapshot)
}
inline PROTOBUF_NDEBUG_INLINE HloSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloSnapshot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        arguments_{visibility, arena, from.arguments_},
        execution_platform_(arena, from.execution_platform_) {}

HloSnapshot::HloSnapshot(
    ::google::protobuf::Arena* arena,
    const HloSnapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloSnapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hlo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::xla::HloProto>(
                              arena, *from._impl_.hlo_)
                        : nullptr;
  _impl_.result_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::xla::LiteralProto>(
                              arena, *from._impl_.result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:xla.HloSnapshot)
}
inline PROTOBUF_NDEBUG_INLINE HloSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        arguments_{visibility, arena},
        execution_platform_(arena) {}

inline void HloSnapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hlo_),
           0,
           offsetof(Impl_, result_) -
               offsetof(Impl_, hlo_) +
               sizeof(Impl_::result_));
}
HloSnapshot::~HloSnapshot() {
  // @@protoc_insertion_point(destructor:xla.HloSnapshot)
  SharedDtor(*this);
}
inline void HloSnapshot::SharedDtor(MessageLite& self) {
  HloSnapshot& this_ = static_cast<HloSnapshot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.execution_platform_.Destroy();
  delete this_._impl_.hlo_;
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* HloSnapshot::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloSnapshot(arena);
}
constexpr auto HloSnapshot::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.arguments_) +
          decltype(HloSnapshot::_impl_.arguments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloSnapshot), alignof(HloSnapshot), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloSnapshot::PlacementNew_,
                                 sizeof(HloSnapshot),
                                 alignof(HloSnapshot));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloSnapshot::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloSnapshot_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloSnapshot::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloSnapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloSnapshot::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloSnapshot>(), &HloSnapshot::ByteSizeLong,
            &HloSnapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_._cached_size_),
        false,
    },
    &HloSnapshot::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloSnapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 42, 2> HloSnapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloSnapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string execution_platform = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.execution_platform_)}},
    // .xla.HloProto hlo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.hlo_)}},
    // repeated .xla.LiteralProto arguments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.arguments_)}},
    // .xla.LiteralProto result = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .xla.HloProto hlo = 1;
    {PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.hlo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .xla.LiteralProto arguments = 2;
    {PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.arguments_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .xla.LiteralProto result = 3;
    {PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.result_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string execution_platform = 4;
    {PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.execution_platform_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloProto>()},
    {::_pbi::TcParser::GetTable<::xla::LiteralProto>()},
    {::_pbi::TcParser::GetTable<::xla::LiteralProto>()},
  }}, {{
    "\17\0\0\0\22\0\0\0"
    "xla.HloSnapshot"
    "execution_platform"
  }},
};

PROTOBUF_NOINLINE void HloSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloSnapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arguments_.Clear();
  _impl_.execution_platform_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hlo_ != nullptr);
      _impl_.hlo_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloSnapshot::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloSnapshot& this_ = static_cast<const HloSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloSnapshot::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloSnapshot)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .xla.HloProto hlo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.hlo_, this_._impl_.hlo_->GetCachedSize(), target,
                stream);
          }

          // repeated .xla.LiteralProto arguments = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_arguments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_arguments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .xla.LiteralProto result = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          // string execution_platform = 4;
          if (!this_._internal_execution_platform().empty()) {
            const std::string& _s = this_._internal_execution_platform();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloSnapshot.execution_platform");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloSnapshot)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloSnapshot::ByteSizeLong(const MessageLite& base) {
          const HloSnapshot& this_ = static_cast<const HloSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloSnapshot::ByteSizeLong() const {
          const HloSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloSnapshot)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xla.LiteralProto arguments = 2;
            {
              total_size += 1UL * this_._internal_arguments_size();
              for (const auto& msg : this_._internal_arguments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string execution_platform = 4;
            if (!this_._internal_execution_platform().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_execution_platform());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .xla.HloProto hlo = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hlo_);
            }
            // .xla.LiteralProto result = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloSnapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloSnapshot*>(&to_msg);
  auto& from = static_cast<const HloSnapshot&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_arguments()->MergeFrom(
      from._internal_arguments());
  if (!from._internal_execution_platform().empty()) {
    _this->_internal_set_execution_platform(from._internal_execution_platform());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hlo_ != nullptr);
      if (_this->_impl_.hlo_ == nullptr) {
        _this->_impl_.hlo_ =
            ::google::protobuf::Message::CopyConstruct<::xla::HloProto>(arena, *from._impl_.hlo_);
      } else {
        _this->_impl_.hlo_->MergeFrom(*from._impl_.hlo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::xla::LiteralProto>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloSnapshot::CopyFrom(const HloSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloSnapshot::InternalSwap(HloSnapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.arguments_.InternalSwap(&other->_impl_.arguments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.execution_platform_, &other->_impl_.execution_platform_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.result_)
      + sizeof(HloSnapshot::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(HloSnapshot, _impl_.hlo_)>(
          reinterpret_cast<char*>(&_impl_.hlo_),
          reinterpret_cast<char*>(&other->_impl_.hlo_));
}

::google::protobuf::Metadata HloSnapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloModuleMetadataProto::_Internal {
 public:
};

HloModuleMetadataProto::HloModuleMetadataProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloModuleMetadataProto)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleMetadataProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloModuleMetadataProto& from_msg)
      : partitioned_module_ids_{visibility, arena, from.partitioned_module_ids_},
        _partitioned_module_ids_cached_byte_size_{0},
        pass_metadata_{visibility, arena, from.pass_metadata_},
        module_group_name_(arena, from.module_group_name_),
        _cached_size_{0} {}

HloModuleMetadataProto::HloModuleMetadataProto(
    ::google::protobuf::Arena* arena,
    const HloModuleMetadataProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloModuleMetadataProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, canonical_module_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, canonical_module_id_),
           offsetof(Impl_, original_module_id_) -
               offsetof(Impl_, canonical_module_id_) +
               sizeof(Impl_::original_module_id_));

  // @@protoc_insertion_point(copy_constructor:xla.HloModuleMetadataProto)
}
inline PROTOBUF_NDEBUG_INLINE HloModuleMetadataProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : partitioned_module_ids_{visibility, arena},
        _partitioned_module_ids_cached_byte_size_{0},
        pass_metadata_{visibility, arena},
        module_group_name_(arena),
        _cached_size_{0} {}

inline void HloModuleMetadataProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, canonical_module_id_),
           0,
           offsetof(Impl_, original_module_id_) -
               offsetof(Impl_, canonical_module_id_) +
               sizeof(Impl_::original_module_id_));
}
HloModuleMetadataProto::~HloModuleMetadataProto() {
  // @@protoc_insertion_point(destructor:xla.HloModuleMetadataProto)
  SharedDtor(*this);
}
inline void HloModuleMetadataProto::SharedDtor(MessageLite& self) {
  HloModuleMetadataProto& this_ = static_cast<HloModuleMetadataProto&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.module_group_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HloModuleMetadataProto::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloModuleMetadataProto(arena);
}
constexpr auto HloModuleMetadataProto::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.partitioned_module_ids_) +
          decltype(HloModuleMetadataProto::_impl_.partitioned_module_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.pass_metadata_) +
          decltype(HloModuleMetadataProto::_impl_.pass_metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloModuleMetadataProto), alignof(HloModuleMetadataProto), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloModuleMetadataProto::PlacementNew_,
                                 sizeof(HloModuleMetadataProto),
                                 alignof(HloModuleMetadataProto));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloModuleMetadataProto::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloModuleMetadataProto_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloModuleMetadataProto::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloModuleMetadataProto>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloModuleMetadataProto::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloModuleMetadataProto>(), &HloModuleMetadataProto::ByteSizeLong,
            &HloModuleMetadataProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_._cached_size_),
        false,
    },
    &HloModuleMetadataProto::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloModuleMetadataProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 52, 2> HloModuleMetadataProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloModuleMetadataProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 canonical_module_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloModuleMetadataProto, _impl_.canonical_module_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.canonical_module_id_)}},
    // string module_group_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.module_group_name_)}},
    // int64 original_module_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloModuleMetadataProto, _impl_.original_module_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.original_module_id_)}},
    // repeated int64 partitioned_module_ids = 4;
    {::_pbi::TcParser::FastV64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.partitioned_module_ids_)}},
    // repeated .xla.HloPassMetadata pass_metadata = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.pass_metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 canonical_module_id = 1;
    {PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.canonical_module_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string module_group_name = 2;
    {PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.module_group_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 original_module_id = 3;
    {PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.original_module_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 partitioned_module_ids = 4;
    {PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.partitioned_module_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated .xla.HloPassMetadata pass_metadata = 5;
    {PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.pass_metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xla::HloPassMetadata>()},
  }}, {{
    "\32\0\21\0\0\0\0\0"
    "xla.HloModuleMetadataProto"
    "module_group_name"
  }},
};

PROTOBUF_NOINLINE void HloModuleMetadataProto::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloModuleMetadataProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.partitioned_module_ids_.Clear();
  _impl_.pass_metadata_.Clear();
  _impl_.module_group_name_.ClearToEmpty();
  ::memset(&_impl_.canonical_module_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.original_module_id_) -
      reinterpret_cast<char*>(&_impl_.canonical_module_id_)) + sizeof(_impl_.original_module_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloModuleMetadataProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloModuleMetadataProto& this_ = static_cast<const HloModuleMetadataProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloModuleMetadataProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloModuleMetadataProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloModuleMetadataProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 canonical_module_id = 1;
          if (this_._internal_canonical_module_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_canonical_module_id(), target);
          }

          // string module_group_name = 2;
          if (!this_._internal_module_group_name().empty()) {
            const std::string& _s = this_._internal_module_group_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloModuleMetadataProto.module_group_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 original_module_id = 3;
          if (this_._internal_original_module_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_original_module_id(), target);
          }

          // repeated int64 partitioned_module_ids = 4;
          {
            int byte_size = this_._impl_._partitioned_module_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  4, this_._internal_partitioned_module_ids(), byte_size, target);
            }
          }

          // repeated .xla.HloPassMetadata pass_metadata = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_pass_metadata_size());
               i < n; i++) {
            const auto& repfield = this_._internal_pass_metadata().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloModuleMetadataProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloModuleMetadataProto::ByteSizeLong(const MessageLite& base) {
          const HloModuleMetadataProto& this_ = static_cast<const HloModuleMetadataProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloModuleMetadataProto::ByteSizeLong() const {
          const HloModuleMetadataProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloModuleMetadataProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 partitioned_module_ids = 4;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_partitioned_module_ids(), 1,
                      this_._impl_._partitioned_module_ids_cached_byte_size_);
            }
            // repeated .xla.HloPassMetadata pass_metadata = 5;
            {
              total_size += 1UL * this_._internal_pass_metadata_size();
              for (const auto& msg : this_._internal_pass_metadata()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string module_group_name = 2;
            if (!this_._internal_module_group_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_module_group_name());
            }
            // int64 canonical_module_id = 1;
            if (this_._internal_canonical_module_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_canonical_module_id());
            }
            // int64 original_module_id = 3;
            if (this_._internal_original_module_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_original_module_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloModuleMetadataProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloModuleMetadataProto*>(&to_msg);
  auto& from = static_cast<const HloModuleMetadataProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloModuleMetadataProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_partitioned_module_ids()->MergeFrom(from._internal_partitioned_module_ids());
  _this->_internal_mutable_pass_metadata()->MergeFrom(
      from._internal_pass_metadata());
  if (!from._internal_module_group_name().empty()) {
    _this->_internal_set_module_group_name(from._internal_module_group_name());
  }
  if (from._internal_canonical_module_id() != 0) {
    _this->_impl_.canonical_module_id_ = from._impl_.canonical_module_id_;
  }
  if (from._internal_original_module_id() != 0) {
    _this->_impl_.original_module_id_ = from._impl_.original_module_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloModuleMetadataProto::CopyFrom(const HloModuleMetadataProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloModuleMetadataProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloModuleMetadataProto::InternalSwap(HloModuleMetadataProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.partitioned_module_ids_.InternalSwap(&other->_impl_.partitioned_module_ids_);
  _impl_.pass_metadata_.InternalSwap(&other->_impl_.pass_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_group_name_, &other->_impl_.module_group_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.original_module_id_)
      + sizeof(HloModuleMetadataProto::_impl_.original_module_id_)
      - PROTOBUF_FIELD_OFFSET(HloModuleMetadataProto, _impl_.canonical_module_id_)>(
          reinterpret_cast<char*>(&_impl_.canonical_module_id_),
          reinterpret_cast<char*>(&other->_impl_.canonical_module_id_));
}

::google::protobuf::Metadata HloModuleMetadataProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HloPassMetadata::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HloPassMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_._has_bits_);
};

void HloPassMetadata::clear_custom_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.custom_metadata_ != nullptr) _impl_.custom_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HloPassMetadata::HloPassMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xla.HloPassMetadata)
}
inline PROTOBUF_NDEBUG_INLINE HloPassMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xla::HloPassMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dump_filenames_{visibility, arena, from.dump_filenames_},
        module_group_module_ids_{visibility, arena, from.module_group_module_ids_},
        _module_group_module_ids_cached_byte_size_{0},
        pass_name_(arena, from.pass_name_),
        pipeline_name_(arena, from.pipeline_name_) {}

HloPassMetadata::HloPassMetadata(
    ::google::protobuf::Arena* arena,
    const HloPassMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HloPassMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.custom_metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.custom_metadata_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pass_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pass_id_),
           offsetof(Impl_, module_changed_) -
               offsetof(Impl_, pass_id_) +
               sizeof(Impl_::module_changed_));

  // @@protoc_insertion_point(copy_constructor:xla.HloPassMetadata)
}
inline PROTOBUF_NDEBUG_INLINE HloPassMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        dump_filenames_{visibility, arena},
        module_group_module_ids_{visibility, arena},
        _module_group_module_ids_cached_byte_size_{0},
        pass_name_(arena),
        pipeline_name_(arena) {}

inline void HloPassMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, custom_metadata_),
           0,
           offsetof(Impl_, module_changed_) -
               offsetof(Impl_, custom_metadata_) +
               sizeof(Impl_::module_changed_));
}
HloPassMetadata::~HloPassMetadata() {
  // @@protoc_insertion_point(destructor:xla.HloPassMetadata)
  SharedDtor(*this);
}
inline void HloPassMetadata::SharedDtor(MessageLite& self) {
  HloPassMetadata& this_ = static_cast<HloPassMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pass_name_.Destroy();
  this_._impl_.pipeline_name_.Destroy();
  delete this_._impl_.custom_metadata_;
  this_._impl_.~Impl_();
}

inline void* HloPassMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HloPassMetadata(arena);
}
constexpr auto HloPassMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.dump_filenames_) +
          decltype(HloPassMetadata::_impl_.dump_filenames_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_group_module_ids_) +
          decltype(HloPassMetadata::_impl_.module_group_module_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HloPassMetadata), alignof(HloPassMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HloPassMetadata::PlacementNew_,
                                 sizeof(HloPassMetadata),
                                 alignof(HloPassMetadata));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HloPassMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HloPassMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HloPassMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HloPassMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HloPassMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HloPassMetadata>(), &HloPassMetadata::ByteSizeLong,
            &HloPassMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_._cached_size_),
        false,
    },
    &HloPassMetadata::kDescriptorMethods,
    &descriptor_table_xla_2fservice_2fhlo_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HloPassMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 72, 2> HloPassMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xla::HloPassMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 pass_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloPassMetadata, _impl_.pass_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.pass_id_)}},
    // string pass_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.pass_name_)}},
    // string pipeline_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.pipeline_name_)}},
    // repeated string dump_filenames = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.dump_filenames_)}},
    // bool module_changed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HloPassMetadata, _impl_.module_changed_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_changed_)}},
    // int64 module_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloPassMetadata, _impl_.module_id_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_id_)}},
    // repeated int64 module_group_module_ids = 7;
    {::_pbi::TcParser::FastV64P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_group_module_ids_)}},
    // int64 start_timestamp_usec = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloPassMetadata, _impl_.start_timestamp_usec_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.start_timestamp_usec_)}},
    // int64 end_timestamp_usec = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HloPassMetadata, _impl_.end_timestamp_usec_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.end_timestamp_usec_)}},
    // .google.protobuf.Any custom_metadata = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.custom_metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 pass_id = 1;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.pass_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string pass_name = 2;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.pass_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pipeline_name = 3;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.pipeline_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string dump_filenames = 4;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.dump_filenames_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool module_changed = 5;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_changed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 module_id = 6;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 module_group_module_ids = 7;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_group_module_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // int64 start_timestamp_usec = 8;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.start_timestamp_usec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 end_timestamp_usec = 9;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.end_timestamp_usec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Any custom_metadata = 10;
    {PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.custom_metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\23\0\11\15\16\0\0\0\0\0\0\0\0\0\0\0"
    "xla.HloPassMetadata"
    "pass_name"
    "pipeline_name"
    "dump_filenames"
  }},
};

PROTOBUF_NOINLINE void HloPassMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloPassMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dump_filenames_.Clear();
  _impl_.module_group_module_ids_.Clear();
  _impl_.pass_name_.ClearToEmpty();
  _impl_.pipeline_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.custom_metadata_ != nullptr);
    _impl_.custom_metadata_->Clear();
  }
  ::memset(&_impl_.pass_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.module_changed_) -
      reinterpret_cast<char*>(&_impl_.pass_id_)) + sizeof(_impl_.module_changed_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HloPassMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HloPassMetadata& this_ = static_cast<const HloPassMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HloPassMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HloPassMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xla.HloPassMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 pass_id = 1;
          if (this_._internal_pass_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_pass_id(), target);
          }

          // string pass_name = 2;
          if (!this_._internal_pass_name().empty()) {
            const std::string& _s = this_._internal_pass_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloPassMetadata.pass_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string pipeline_name = 3;
          if (!this_._internal_pipeline_name().empty()) {
            const std::string& _s = this_._internal_pipeline_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloPassMetadata.pipeline_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string dump_filenames = 4;
          for (int i = 0, n = this_._internal_dump_filenames_size(); i < n; ++i) {
            const auto& s = this_._internal_dump_filenames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xla.HloPassMetadata.dump_filenames");
            target = stream->WriteString(4, s, target);
          }

          // bool module_changed = 5;
          if (this_._internal_module_changed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_module_changed(), target);
          }

          // int64 module_id = 6;
          if (this_._internal_module_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_module_id(), target);
          }

          // repeated int64 module_group_module_ids = 7;
          {
            int byte_size = this_._impl_._module_group_module_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  7, this_._internal_module_group_module_ids(), byte_size, target);
            }
          }

          // int64 start_timestamp_usec = 8;
          if (this_._internal_start_timestamp_usec() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_start_timestamp_usec(), target);
          }

          // int64 end_timestamp_usec = 9;
          if (this_._internal_end_timestamp_usec() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_end_timestamp_usec(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any custom_metadata = 10;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.custom_metadata_, this_._impl_.custom_metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xla.HloPassMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HloPassMetadata::ByteSizeLong(const MessageLite& base) {
          const HloPassMetadata& this_ = static_cast<const HloPassMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HloPassMetadata::ByteSizeLong() const {
          const HloPassMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xla.HloPassMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string dump_filenames = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_dump_filenames().size());
              for (int i = 0, n = this_._internal_dump_filenames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_dump_filenames().Get(i));
              }
            }
            // repeated int64 module_group_module_ids = 7;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
                      this_._internal_module_group_module_ids(), 1,
                      this_._impl_._module_group_module_ids_cached_byte_size_);
            }
          }
           {
            // string pass_name = 2;
            if (!this_._internal_pass_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pass_name());
            }
            // string pipeline_name = 3;
            if (!this_._internal_pipeline_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pipeline_name());
            }
          }
           {
            // .google.protobuf.Any custom_metadata = 10;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.custom_metadata_);
            }
          }
           {
            // int64 pass_id = 1;
            if (this_._internal_pass_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_pass_id());
            }
            // int64 module_id = 6;
            if (this_._internal_module_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_module_id());
            }
            // int64 start_timestamp_usec = 8;
            if (this_._internal_start_timestamp_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start_timestamp_usec());
            }
            // int64 end_timestamp_usec = 9;
            if (this_._internal_end_timestamp_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_end_timestamp_usec());
            }
            // bool module_changed = 5;
            if (this_._internal_module_changed() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HloPassMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HloPassMetadata*>(&to_msg);
  auto& from = static_cast<const HloPassMetadata&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloPassMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dump_filenames()->MergeFrom(from._internal_dump_filenames());
  _this->_internal_mutable_module_group_module_ids()->MergeFrom(from._internal_module_group_module_ids());
  if (!from._internal_pass_name().empty()) {
    _this->_internal_set_pass_name(from._internal_pass_name());
  }
  if (!from._internal_pipeline_name().empty()) {
    _this->_internal_set_pipeline_name(from._internal_pipeline_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.custom_metadata_ != nullptr);
    if (_this->_impl_.custom_metadata_ == nullptr) {
      _this->_impl_.custom_metadata_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.custom_metadata_);
    } else {
      _this->_impl_.custom_metadata_->MergeFrom(*from._impl_.custom_metadata_);
    }
  }
  if (from._internal_pass_id() != 0) {
    _this->_impl_.pass_id_ = from._impl_.pass_id_;
  }
  if (from._internal_module_id() != 0) {
    _this->_impl_.module_id_ = from._impl_.module_id_;
  }
  if (from._internal_start_timestamp_usec() != 0) {
    _this->_impl_.start_timestamp_usec_ = from._impl_.start_timestamp_usec_;
  }
  if (from._internal_end_timestamp_usec() != 0) {
    _this->_impl_.end_timestamp_usec_ = from._impl_.end_timestamp_usec_;
  }
  if (from._internal_module_changed() != 0) {
    _this->_impl_.module_changed_ = from._impl_.module_changed_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HloPassMetadata::CopyFrom(const HloPassMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloPassMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HloPassMetadata::InternalSwap(HloPassMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dump_filenames_.InternalSwap(&other->_impl_.dump_filenames_);
  _impl_.module_group_module_ids_.InternalSwap(&other->_impl_.module_group_module_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pass_name_, &other->_impl_.pass_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pipeline_name_, &other->_impl_.pipeline_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.module_changed_)
      + sizeof(HloPassMetadata::_impl_.module_changed_)
      - PROTOBUF_FIELD_OFFSET(HloPassMetadata, _impl_.custom_metadata_)>(
          reinterpret_cast<char*>(&_impl_.custom_metadata_),
          reinterpret_cast<char*>(&other->_impl_.custom_metadata_));
}

::google::protobuf::Metadata HloPassMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_xla_2fservice_2fhlo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
