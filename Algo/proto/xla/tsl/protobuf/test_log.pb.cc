// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xla/tsl/protobuf/test_log.proto
// Protobuf C++ Version: 5.29.0

#include "xla/tsl/protobuf/test_log.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tensorflow {
              template <typename>
PROTOBUF_CONSTEXPR RunConfiguration_EnvVarsEntry_DoNotUse::RunConfiguration_EnvVarsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RunConfiguration_EnvVarsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RunConfiguration_EnvVarsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RunConfiguration_EnvVarsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunConfiguration_EnvVarsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunConfiguration_EnvVarsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RunConfiguration_EnvVarsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunConfiguration_EnvVarsEntry_DoNotUseDefaultTypeInternal _RunConfiguration_EnvVarsEntry_DoNotUse_default_instance_;

inline constexpr PlatformInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bits_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        linkage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        machine_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        release_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        system_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlatformInfo::PlatformInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlatformInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformInfoDefaultTypeInternal() {}
  union {
    PlatformInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformInfoDefaultTypeInternal _PlatformInfo_default_instance_;

inline constexpr MemoryInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : total_{::int64_t{0}},
        available_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MemoryInfo::MemoryInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MemoryInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MemoryInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MemoryInfoDefaultTypeInternal() {}
  union {
    MemoryInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MemoryInfoDefaultTypeInternal _MemoryInfo_default_instance_;

inline constexpr GPUInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : model_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uuid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bus_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GPUInfo::GPUInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GPUInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GPUInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GPUInfoDefaultTypeInternal() {}
  union {
    GPUInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GPUInfoDefaultTypeInternal _GPUInfo_default_instance_;

inline constexpr EntryValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR EntryValue::EntryValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntryValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntryValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntryValueDefaultTypeInternal() {}
  union {
    EntryValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntryValueDefaultTypeInternal _EntryValue_default_instance_;

inline constexpr CommitId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshot_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pending_changelist_{::int64_t{0}},
        kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CommitId::CommitId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommitIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitIdDefaultTypeInternal() {}
  union {
    CommitId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitIdDefaultTypeInternal _CommitId_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR CPUInfo_CacheSizeEntry_DoNotUse::CPUInfo_CacheSizeEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CPUInfo_CacheSizeEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CPUInfo_CacheSizeEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CPUInfo_CacheSizeEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CPUInfo_CacheSizeEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CPUInfo_CacheSizeEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CPUInfo_CacheSizeEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CPUInfo_CacheSizeEntry_DoNotUseDefaultTypeInternal _CPUInfo_CacheSizeEntry_DoNotUse_default_instance_;

inline constexpr BuildConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cc_flags_{},
        opts_{},
        mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BuildConfiguration::BuildConfiguration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuildConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuildConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuildConfigurationDefaultTypeInternal() {}
  union {
    BuildConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuildConfigurationDefaultTypeInternal _BuildConfiguration_default_instance_;

inline constexpr AvailableDeviceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        physical_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memory_limit_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AvailableDeviceInfo::AvailableDeviceInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AvailableDeviceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AvailableDeviceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AvailableDeviceInfoDefaultTypeInternal() {}
  union {
    AvailableDeviceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AvailableDeviceInfoDefaultTypeInternal _AvailableDeviceInfo_default_instance_;

inline constexpr RunConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : argument_{},
        env_vars_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RunConfiguration::RunConfiguration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RunConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunConfigurationDefaultTypeInternal() {}
  union {
    RunConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunConfigurationDefaultTypeInternal _RunConfiguration_default_instance_;

inline constexpr MetricEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_value_{nullptr},
        max_value_{nullptr},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MetricEntry::MetricEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricEntryDefaultTypeInternal() {}
  union {
    MetricEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricEntryDefaultTypeInternal _MetricEntry_default_instance_;

inline constexpr CPUInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cache_size_{},
        cpu_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cpu_governor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_cores_{::int64_t{0}},
        num_cores_allowed_{::int64_t{0}},
        mhz_per_cpu_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CPUInfo::CPUInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CPUInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CPUInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CPUInfoDefaultTypeInternal() {}
  union {
    CPUInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CPUInfoDefaultTypeInternal _CPUInfo_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR BenchmarkEntry_ExtrasEntry_DoNotUse::BenchmarkEntry_ExtrasEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : BenchmarkEntry_ExtrasEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : BenchmarkEntry_ExtrasEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BenchmarkEntry_ExtrasEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BenchmarkEntry_ExtrasEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BenchmarkEntry_ExtrasEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BenchmarkEntry_ExtrasEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BenchmarkEntry_ExtrasEntry_DoNotUseDefaultTypeInternal _BenchmarkEntry_ExtrasEntry_DoNotUse_default_instance_;

inline constexpr MachineConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_info_{},
        available_device_info_{},
        hostname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serial_identifier_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        platform_info_{nullptr},
        cpu_info_{nullptr},
        memory_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MachineConfiguration::MachineConfiguration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MachineConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MachineConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MachineConfigurationDefaultTypeInternal() {}
  union {
    MachineConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MachineConfigurationDefaultTypeInternal _MachineConfiguration_default_instance_;

inline constexpr BenchmarkEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : extras_{},
        metrics_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        iters_{::int64_t{0}},
        cpu_time_{0},
        wall_time_{0},
        throughput_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BenchmarkEntry::BenchmarkEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BenchmarkEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BenchmarkEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BenchmarkEntryDefaultTypeInternal() {}
  union {
    BenchmarkEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BenchmarkEntryDefaultTypeInternal _BenchmarkEntry_default_instance_;

inline constexpr BenchmarkEntries::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entry_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BenchmarkEntries::BenchmarkEntries(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BenchmarkEntriesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BenchmarkEntriesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BenchmarkEntriesDefaultTypeInternal() {}
  union {
    BenchmarkEntries _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BenchmarkEntriesDefaultTypeInternal _BenchmarkEntries_default_instance_;

inline constexpr TestResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        run_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tf_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entries_{nullptr},
        build_configuration_{nullptr},
        commit_id_{nullptr},
        machine_configuration_{nullptr},
        run_configuration_{nullptr},
        start_time_{::int64_t{0}},
        run_time_{0},
        benchmark_type_{static_cast< ::tensorflow::TestResults_BenchmarkType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TestResults::TestResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestResultsDefaultTypeInternal() {}
  union {
    TestResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestResultsDefaultTypeInternal _TestResults_default_instance_;
}  // namespace tensorflow
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto = nullptr;
const ::uint32_t
    TableStruct_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::EntryValue, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tensorflow::EntryValue, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tensorflow::EntryValue, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MetricEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MetricEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::MetricEntry, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MetricEntry, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MetricEntry, _impl_.min_value_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MetricEntry, _impl_.max_value_),
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry_ExtrasEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.iters_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.cpu_time_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.wall_time_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.throughput_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.extras_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntry, _impl_.metrics_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntries, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::BenchmarkEntries, _impl_.entry_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::BuildConfiguration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::BuildConfiguration, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BuildConfiguration, _impl_.cc_flags_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::BuildConfiguration, _impl_.opts_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::CommitId, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tensorflow::CommitId, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tensorflow::CommitId, _impl_.snapshot_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CommitId, _impl_.pending_changelist_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CommitId, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo_CacheSizeEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo_CacheSizeEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo_CacheSizeEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo_CacheSizeEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _impl_.num_cores_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _impl_.num_cores_allowed_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _impl_.mhz_per_cpu_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _impl_.cpu_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _impl_.cpu_governor_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::CPUInfo, _impl_.cache_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::MemoryInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::MemoryInfo, _impl_.total_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MemoryInfo, _impl_.available_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::GPUInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::GPUInfo, _impl_.model_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GPUInfo, _impl_.uuid_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::GPUInfo, _impl_.bus_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _impl_.bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _impl_.linkage_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _impl_.machine_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _impl_.release_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _impl_.system_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::PlatformInfo, _impl_.version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::AvailableDeviceInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::AvailableDeviceInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::AvailableDeviceInfo, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::AvailableDeviceInfo, _impl_.memory_limit_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::AvailableDeviceInfo, _impl_.physical_description_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.hostname_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.serial_identifier_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.platform_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.cpu_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.device_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.available_device_info_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::MachineConfiguration, _impl_.memory_info_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        2,
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration_EnvVarsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration_EnvVarsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration_EnvVarsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration_EnvVarsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration, _impl_.argument_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::RunConfiguration, _impl_.env_vars_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.build_configuration_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.commit_id_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.run_time_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.machine_configuration_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.run_configuration_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.benchmark_type_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.run_mode_),
        PROTOBUF_FIELD_OFFSET(::tensorflow::TestResults, _impl_.tf_version_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tensorflow::EntryValue)},
        {11, 23, -1, sizeof(::tensorflow::MetricEntry)},
        {27, 37, -1, sizeof(::tensorflow::BenchmarkEntry_ExtrasEntry_DoNotUse)},
        {39, -1, -1, sizeof(::tensorflow::BenchmarkEntry)},
        {54, -1, -1, sizeof(::tensorflow::BenchmarkEntries)},
        {63, -1, -1, sizeof(::tensorflow::BuildConfiguration)},
        {74, -1, -1, sizeof(::tensorflow::CommitId)},
        {87, 97, -1, sizeof(::tensorflow::CPUInfo_CacheSizeEntry_DoNotUse)},
        {99, -1, -1, sizeof(::tensorflow::CPUInfo)},
        {113, -1, -1, sizeof(::tensorflow::MemoryInfo)},
        {123, -1, -1, sizeof(::tensorflow::GPUInfo)},
        {134, -1, -1, sizeof(::tensorflow::PlatformInfo)},
        {148, -1, -1, sizeof(::tensorflow::AvailableDeviceInfo)},
        {160, 175, -1, sizeof(::tensorflow::MachineConfiguration)},
        {182, 192, -1, sizeof(::tensorflow::RunConfiguration_EnvVarsEntry_DoNotUse)},
        {194, -1, -1, sizeof(::tensorflow::RunConfiguration)},
        {204, 224, -1, sizeof(::tensorflow::TestResults)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tensorflow::_EntryValue_default_instance_._instance,
    &::tensorflow::_MetricEntry_default_instance_._instance,
    &::tensorflow::_BenchmarkEntry_ExtrasEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_BenchmarkEntry_default_instance_._instance,
    &::tensorflow::_BenchmarkEntries_default_instance_._instance,
    &::tensorflow::_BuildConfiguration_default_instance_._instance,
    &::tensorflow::_CommitId_default_instance_._instance,
    &::tensorflow::_CPUInfo_CacheSizeEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_CPUInfo_default_instance_._instance,
    &::tensorflow::_MemoryInfo_default_instance_._instance,
    &::tensorflow::_GPUInfo_default_instance_._instance,
    &::tensorflow::_PlatformInfo_default_instance_._instance,
    &::tensorflow::_AvailableDeviceInfo_default_instance_._instance,
    &::tensorflow::_MachineConfiguration_default_instance_._instance,
    &::tensorflow::_RunConfiguration_EnvVarsEntry_DoNotUse_default_instance_._instance,
    &::tensorflow::_RunConfiguration_default_instance_._instance,
    &::tensorflow::_TestResults_default_instance_._instance,
};
const char descriptor_table_protodef_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037xla/tsl/protobuf/test_log.proto\022\ntenso"
    "rflow\032\031google/protobuf/any.proto\032\036google"
    "/protobuf/wrappers.proto\"D\n\nEntryValue\022\026"
    "\n\014double_value\030\001 \001(\001H\000\022\026\n\014string_value\030\002"
    " \001(\tH\000B\006\n\004kind\"\214\001\n\013MetricEntry\022\014\n\004name\030\001"
    " \001(\t\022\r\n\005value\030\002 \001(\001\022/\n\tmin_value\030\003 \001(\0132\034"
    ".google.protobuf.DoubleValue\022/\n\tmax_valu"
    "e\030\004 \001(\0132\034.google.protobuf.DoubleValue\"\217\002"
    "\n\016BenchmarkEntry\022\014\n\004name\030\001 \001(\t\022\r\n\005iters\030"
    "\002 \001(\003\022\020\n\010cpu_time\030\003 \001(\001\022\021\n\twall_time\030\004 \001"
    "(\001\022\022\n\nthroughput\030\005 \001(\001\0226\n\006extras\030\006 \003(\0132&"
    ".tensorflow.BenchmarkEntry.ExtrasEntry\022("
    "\n\007metrics\030\007 \003(\0132\027.tensorflow.MetricEntry"
    "\032E\n\013ExtrasEntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 "
    "\001(\0132\026.tensorflow.EntryValue:\0028\001\"=\n\020Bench"
    "markEntries\022)\n\005entry\030\001 \003(\0132\032.tensorflow."
    "BenchmarkEntry\"B\n\022BuildConfiguration\022\014\n\004"
    "mode\030\001 \001(\t\022\020\n\010cc_flags\030\002 \003(\t\022\014\n\004opts\030\003 \003"
    "(\t\"f\n\010CommitId\022\024\n\nchangelist\030\001 \001(\003H\000\022\016\n\004"
    "hash\030\002 \001(\tH\000\022\020\n\010snapshot\030\003 \001(\t\022\032\n\022pendin"
    "g_changelist\030\004 \001(\003B\006\n\004kind\"\336\001\n\007CPUInfo\022\021"
    "\n\tnum_cores\030\001 \001(\003\022\031\n\021num_cores_allowed\030\002"
    " \001(\003\022\023\n\013mhz_per_cpu\030\003 \001(\001\022\020\n\010cpu_info\030\004 "
    "\001(\t\022\024\n\014cpu_governor\030\005 \001(\t\0226\n\ncache_size\030"
    "\006 \003(\0132\".tensorflow.CPUInfo.CacheSizeEntr"
    "y\0320\n\016CacheSizeEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
    "e\030\002 \001(\003:\0028\001\".\n\nMemoryInfo\022\r\n\005total\030\001 \001(\003"
    "\022\021\n\tavailable\030\002 \001(\003\"6\n\007GPUInfo\022\r\n\005model\030"
    "\001 \001(\t\022\014\n\004uuid\030\002 \001(\t\022\016\n\006bus_id\030\003 \001(\t\"p\n\014P"
    "latformInfo\022\014\n\004bits\030\001 \001(\t\022\017\n\007linkage\030\002 \001"
    "(\t\022\017\n\007machine\030\003 \001(\t\022\017\n\007release\030\004 \001(\t\022\016\n\006"
    "system\030\005 \001(\t\022\017\n\007version\030\006 \001(\t\"e\n\023Availab"
    "leDeviceInfo\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t"
    "\022\024\n\014memory_limit\030\003 \001(\003\022\034\n\024physical_descr"
    "iption\030\004 \001(\t\"\263\002\n\024MachineConfiguration\022\020\n"
    "\010hostname\030\001 \001(\t\022\031\n\021serial_identifier\030\007 \001"
    "(\t\022/\n\rplatform_info\030\002 \001(\0132\030.tensorflow.P"
    "latformInfo\022%\n\010cpu_info\030\003 \001(\0132\023.tensorfl"
    "ow.CPUInfo\022)\n\013device_info\030\004 \003(\0132\024.google"
    ".protobuf.Any\022>\n\025available_device_info\030\005"
    " \003(\0132\037.tensorflow.AvailableDeviceInfo\022+\n"
    "\013memory_info\030\006 \001(\0132\026.tensorflow.MemoryIn"
    "fo\"\221\001\n\020RunConfiguration\022\020\n\010argument\030\001 \003("
    "\t\022;\n\010env_vars\030\002 \003(\0132).tensorflow.RunConf"
    "iguration.EnvVarsEntry\032.\n\014EnvVarsEntry\022\013"
    "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\320\004\n\013TestR"
    "esults\022\016\n\006target\030\001 \001(\t\022-\n\007entries\030\002 \001(\0132"
    "\034.tensorflow.BenchmarkEntries\022;\n\023build_c"
    "onfiguration\030\003 \001(\0132\036.tensorflow.BuildCon"
    "figuration\022\'\n\tcommit_id\030\004 \001(\0132\024.tensorfl"
    "ow.CommitId\022\022\n\nstart_time\030\005 \001(\003\022\020\n\010run_t"
    "ime\030\006 \001(\001\022\?\n\025machine_configuration\030\007 \001(\013"
    "2 .tensorflow.MachineConfiguration\0227\n\021ru"
    "n_configuration\030\010 \001(\0132\034.tensorflow.RunCo"
    "nfiguration\022\014\n\004name\030\t \001(\t\022=\n\016benchmark_t"
    "ype\030\n \001(\0162%.tensorflow.TestResults.Bench"
    "markType\022\020\n\010run_mode\030\013 \001(\t\022\022\n\ntf_version"
    "\030\014 \001(\t\"\210\001\n\rBenchmarkType\022\013\n\007UNKNOWN\020\000\022\026\n"
    "\022CPP_MICROBENCHMARK\020\001\022\024\n\020PYTHON_BENCHMAR"
    "K\020\002\022\025\n\021ANDROID_BENCHMARK\020\003\022\022\n\016EDGE_BENCH"
    "MARK\020\004\022\021\n\rIOS_BENCHMARK\020\005B1\n\033org.tensorf"
    "low.util.testlogB\rTestLogProtosP\001\370\001\001b\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto = {
    false,
    false,
    2484,
    descriptor_table_protodef_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    "xla/tsl/protobuf/test_log.proto",
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto_once,
    descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto_deps,
    2,
    17,
    schemas,
    file_default_instances,
    TableStruct_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto::offsets,
    file_level_enum_descriptors_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    file_level_service_descriptors_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
};
namespace tensorflow {
const ::google::protobuf::EnumDescriptor* TestResults_BenchmarkType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto);
  return file_level_enum_descriptors_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TestResults_BenchmarkType_internal_data_[] = {
    393216u, 0u, };
bool TestResults_BenchmarkType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TestResults_BenchmarkType TestResults::UNKNOWN;
constexpr TestResults_BenchmarkType TestResults::CPP_MICROBENCHMARK;
constexpr TestResults_BenchmarkType TestResults::PYTHON_BENCHMARK;
constexpr TestResults_BenchmarkType TestResults::ANDROID_BENCHMARK;
constexpr TestResults_BenchmarkType TestResults::EDGE_BENCHMARK;
constexpr TestResults_BenchmarkType TestResults::IOS_BENCHMARK;
constexpr TestResults_BenchmarkType TestResults::BenchmarkType_MIN;
constexpr TestResults_BenchmarkType TestResults::BenchmarkType_MAX;
constexpr int TestResults::BenchmarkType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class EntryValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tensorflow::EntryValue, _impl_._oneof_case_);
};

EntryValue::EntryValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.EntryValue)
}
inline PROTOBUF_NDEBUG_INLINE EntryValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::EntryValue& from_msg)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

EntryValue::EntryValue(
    ::google::protobuf::Arena* arena,
    const EntryValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntryValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (kind_case()) {
    case KIND_NOT_SET:
      break;
      case kDoubleValue:
        _impl_.kind_.double_value_ = from._impl_.kind_.double_value_;
        break;
      case kStringValue:
        new (&_impl_.kind_.string_value_) decltype(_impl_.kind_.string_value_){arena, from._impl_.kind_.string_value_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tensorflow.EntryValue)
}
inline PROTOBUF_NDEBUG_INLINE EntryValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void EntryValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EntryValue::~EntryValue() {
  // @@protoc_insertion_point(destructor:tensorflow.EntryValue)
  SharedDtor(*this);
}
inline void EntryValue::SharedDtor(MessageLite& self) {
  EntryValue& this_ = static_cast<EntryValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_kind()) {
    this_.clear_kind();
  }
  this_._impl_.~Impl_();
}

void EntryValue::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.EntryValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (kind_case()) {
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      _impl_.kind_.string_value_.Destroy();
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


inline void* EntryValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EntryValue(arena);
}
constexpr auto EntryValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EntryValue),
                                            alignof(EntryValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EntryValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EntryValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EntryValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EntryValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EntryValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EntryValue>(), &EntryValue::ByteSizeLong,
            &EntryValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EntryValue, _impl_._cached_size_),
        false,
    },
    &EntryValue::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EntryValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 42, 2> EntryValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::EntryValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double double_value = 1;
    {PROTOBUF_FIELD_OFFSET(EntryValue, _impl_.kind_.double_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // string string_value = 2;
    {PROTOBUF_FIELD_OFFSET(EntryValue, _impl_.kind_.string_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\14\0\0\0\0\0"
    "tensorflow.EntryValue"
    "string_value"
  }},
};

PROTOBUF_NOINLINE void EntryValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.EntryValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EntryValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EntryValue& this_ = static_cast<const EntryValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EntryValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EntryValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.EntryValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.kind_case()) {
            case kDoubleValue: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                  1, this_._internal_double_value(), target);
              break;
            }
            case kStringValue: {
              const std::string& _s = this_._internal_string_value();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.EntryValue.string_value");
              target = stream->WriteStringMaybeAliased(2, _s, target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.EntryValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EntryValue::ByteSizeLong(const MessageLite& base) {
          const EntryValue& this_ = static_cast<const EntryValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EntryValue::ByteSizeLong() const {
          const EntryValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.EntryValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.kind_case()) {
            // double double_value = 1;
            case kDoubleValue: {
              total_size += 9;
              break;
            }
            // string string_value = 2;
            case kStringValue: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_string_value());
              break;
            }
            case KIND_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EntryValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntryValue*>(&to_msg);
  auto& from = static_cast<const EntryValue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.EntryValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_kind();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDoubleValue: {
        _this->_impl_.kind_.double_value_ = from._impl_.kind_.double_value_;
        break;
      }
      case kStringValue: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.string_value_.InitDefault();
        }
        _this->_impl_.kind_.string_value_.Set(from._internal_string_value(), arena);
        break;
      }
      case KIND_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntryValue::CopyFrom(const EntryValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.EntryValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntryValue::InternalSwap(EntryValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata EntryValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MetricEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MetricEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_._has_bits_);
};

void MetricEntry::clear_min_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_value_ != nullptr) _impl_.min_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void MetricEntry::clear_max_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_value_ != nullptr) _impl_.max_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MetricEntry::MetricEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.MetricEntry)
}
inline PROTOBUF_NDEBUG_INLINE MetricEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::MetricEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

MetricEntry::MetricEntry(
    ::google::protobuf::Arena* arena,
    const MetricEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MetricEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.min_value_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.min_value_)
                        : nullptr;
  _impl_.max_value_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(
                              arena, *from._impl_.max_value_)
                        : nullptr;
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.MetricEntry)
}
inline PROTOBUF_NDEBUG_INLINE MetricEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void MetricEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_value_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, min_value_) +
               sizeof(Impl_::value_));
}
MetricEntry::~MetricEntry() {
  // @@protoc_insertion_point(destructor:tensorflow.MetricEntry)
  SharedDtor(*this);
}
inline void MetricEntry::SharedDtor(MessageLite& self) {
  MetricEntry& this_ = static_cast<MetricEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.min_value_;
  delete this_._impl_.max_value_;
  this_._impl_.~Impl_();
}

inline void* MetricEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MetricEntry(arena);
}
constexpr auto MetricEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MetricEntry),
                                            alignof(MetricEntry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MetricEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MetricEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MetricEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MetricEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MetricEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MetricEntry>(), &MetricEntry::ByteSizeLong,
            &MetricEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_._cached_size_),
        false,
    },
    &MetricEntry::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MetricEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 35, 2> MetricEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::MetricEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.DoubleValue max_value = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.max_value_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.name_)}},
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.value_)}},
    // .google.protobuf.DoubleValue min_value = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.min_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .google.protobuf.DoubleValue min_value = 3;
    {PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.min_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.DoubleValue max_value = 4;
    {PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.max_value_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::DoubleValue>()},
  }}, {{
    "\26\4\0\0\0\0\0\0"
    "tensorflow.MetricEntry"
    "name"
  }},
};

PROTOBUF_NOINLINE void MetricEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.MetricEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.min_value_ != nullptr);
      _impl_.min_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.max_value_ != nullptr);
      _impl_.max_value_->Clear();
    }
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MetricEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MetricEntry& this_ = static_cast<const MetricEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MetricEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MetricEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MetricEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.MetricEntry.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // double value = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_value(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.DoubleValue min_value = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.min_value_, this_._impl_.min_value_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.DoubleValue max_value = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.max_value_, this_._impl_.max_value_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MetricEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MetricEntry::ByteSizeLong(const MessageLite& base) {
          const MetricEntry& this_ = static_cast<const MetricEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MetricEntry::ByteSizeLong() const {
          const MetricEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.MetricEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.DoubleValue min_value = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.min_value_);
            }
            // .google.protobuf.DoubleValue max_value = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_value_);
            }
          }
           {
            // double value = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MetricEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MetricEntry*>(&to_msg);
  auto& from = static_cast<const MetricEntry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.MetricEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.min_value_ != nullptr);
      if (_this->_impl_.min_value_ == nullptr) {
        _this->_impl_.min_value_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.min_value_);
      } else {
        _this->_impl_.min_value_->MergeFrom(*from._impl_.min_value_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.max_value_ != nullptr);
      if (_this->_impl_.max_value_ == nullptr) {
        _this->_impl_.max_value_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::DoubleValue>(arena, *from._impl_.max_value_);
      } else {
        _this->_impl_.max_value_->MergeFrom(*from._impl_.max_value_);
      }
    }
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricEntry::CopyFrom(const MetricEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.MetricEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MetricEntry::InternalSwap(MetricEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.value_)
      + sizeof(MetricEntry::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(MetricEntry, _impl_.min_value_)>(
          reinterpret_cast<char*>(&_impl_.min_value_),
          reinterpret_cast<char*>(&other->_impl_.min_value_));
}

::google::protobuf::Metadata MetricEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              BenchmarkEntry_ExtrasEntry_DoNotUse::BenchmarkEntry_ExtrasEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              BenchmarkEntry_ExtrasEntry_DoNotUse::BenchmarkEntry_ExtrasEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              BenchmarkEntry_ExtrasEntry_DoNotUse::BenchmarkEntry_ExtrasEntry_DoNotUse() : SuperType() {}
              BenchmarkEntry_ExtrasEntry_DoNotUse::BenchmarkEntry_ExtrasEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* BenchmarkEntry_ExtrasEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) BenchmarkEntry_ExtrasEntry_DoNotUse(arena);
              }
              constexpr auto BenchmarkEntry_ExtrasEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BenchmarkEntry_ExtrasEntry_DoNotUse),
                                                          alignof(BenchmarkEntry_ExtrasEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull BenchmarkEntry_ExtrasEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_BenchmarkEntry_ExtrasEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &BenchmarkEntry_ExtrasEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<BenchmarkEntry_ExtrasEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &BenchmarkEntry_ExtrasEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &BenchmarkEntry_ExtrasEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &BenchmarkEntry_ExtrasEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* BenchmarkEntry_ExtrasEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> BenchmarkEntry_ExtrasEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::BenchmarkEntry_ExtrasEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tensorflow.EntryValue value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.EntryValue value = 2;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry_ExtrasEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::EntryValue>()},
  }}, {{
    "\45\3\0\0\0\0\0\0"
    "tensorflow.BenchmarkEntry.ExtrasEntry"
    "key"
  }},
};

// ===================================================================

class BenchmarkEntry::_Internal {
 public:
};

BenchmarkEntry::BenchmarkEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BenchmarkEntry)
}
inline PROTOBUF_NDEBUG_INLINE BenchmarkEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::BenchmarkEntry& from_msg)
      : extras_{visibility, arena, from.extras_},
        metrics_{visibility, arena, from.metrics_},
        name_(arena, from.name_),
        _cached_size_{0} {}

BenchmarkEntry::BenchmarkEntry(
    ::google::protobuf::Arena* arena,
    const BenchmarkEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BenchmarkEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, iters_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, iters_),
           offsetof(Impl_, throughput_) -
               offsetof(Impl_, iters_) +
               sizeof(Impl_::throughput_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.BenchmarkEntry)
}
inline PROTOBUF_NDEBUG_INLINE BenchmarkEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : extras_{visibility, arena},
        metrics_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void BenchmarkEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, iters_),
           0,
           offsetof(Impl_, throughput_) -
               offsetof(Impl_, iters_) +
               sizeof(Impl_::throughput_));
}
BenchmarkEntry::~BenchmarkEntry() {
  // @@protoc_insertion_point(destructor:tensorflow.BenchmarkEntry)
  SharedDtor(*this);
}
inline void BenchmarkEntry::SharedDtor(MessageLite& self) {
  BenchmarkEntry& this_ = static_cast<BenchmarkEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BenchmarkEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BenchmarkEntry(arena);
}
constexpr auto BenchmarkEntry::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.extras_) +
          decltype(BenchmarkEntry::_impl_.extras_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.extras_) +
          decltype(BenchmarkEntry::_impl_.extras_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.metrics_) +
          decltype(BenchmarkEntry::_impl_.metrics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BenchmarkEntry), alignof(BenchmarkEntry), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BenchmarkEntry::PlacementNew_,
                                 sizeof(BenchmarkEntry),
                                 alignof(BenchmarkEntry));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BenchmarkEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BenchmarkEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BenchmarkEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BenchmarkEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BenchmarkEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BenchmarkEntry>(), &BenchmarkEntry::ByteSizeLong,
            &BenchmarkEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_._cached_size_),
        false,
    },
    &BenchmarkEntry::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BenchmarkEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 44, 2> BenchmarkEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::BenchmarkEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.name_)}},
    // int64 iters = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BenchmarkEntry, _impl_.iters_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.iters_)}},
    // double cpu_time = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.cpu_time_)}},
    // double wall_time = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.wall_time_)}},
    // double throughput = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.throughput_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tensorflow.MetricEntry metrics = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.metrics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 iters = 2;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.iters_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double cpu_time = 3;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.cpu_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double wall_time = 4;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.wall_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double throughput = 5;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.throughput_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // map<string, .tensorflow.EntryValue> extras = 6;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.extras_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .tensorflow.MetricEntry metrics = 7;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.metrics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::MetricEntry>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(BenchmarkEntry()._impl_.extras_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::tensorflow::EntryValue>()},
  }}, {{
    "\31\4\0\0\0\0\6\0"
    "tensorflow.BenchmarkEntry"
    "name"
    "extras"
  }},
};

PROTOBUF_NOINLINE void BenchmarkEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BenchmarkEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extras_.Clear();
  _impl_.metrics_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.iters_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.throughput_) -
      reinterpret_cast<char*>(&_impl_.iters_)) + sizeof(_impl_.throughput_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BenchmarkEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BenchmarkEntry& this_ = static_cast<const BenchmarkEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BenchmarkEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BenchmarkEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BenchmarkEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.BenchmarkEntry.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 iters = 2;
          if (this_._internal_iters() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_iters(), target);
          }

          // double cpu_time = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_cpu_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_cpu_time(), target);
          }

          // double wall_time = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_wall_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_wall_time(), target);
          }

          // double throughput = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_throughput()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_throughput(), target);
          }

          // map<string, .tensorflow.EntryValue> extras = 6;
          if (!this_._internal_extras().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::tensorflow::EntryValue>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::tensorflow::EntryValue,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_extras();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.BenchmarkEntry.extras");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.BenchmarkEntry.extras");
              }
            }
          }

          // repeated .tensorflow.MetricEntry metrics = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_metrics_size());
               i < n; i++) {
            const auto& repfield = this_._internal_metrics().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BenchmarkEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BenchmarkEntry::ByteSizeLong(const MessageLite& base) {
          const BenchmarkEntry& this_ = static_cast<const BenchmarkEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BenchmarkEntry::ByteSizeLong() const {
          const BenchmarkEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.BenchmarkEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .tensorflow.EntryValue> extras = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_extras_size());
              for (const auto& entry : this_._internal_extras()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::tensorflow::EntryValue,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .tensorflow.MetricEntry metrics = 7;
            {
              total_size += 1UL * this_._internal_metrics_size();
              for (const auto& msg : this_._internal_metrics()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // int64 iters = 2;
            if (this_._internal_iters() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_iters());
            }
            // double cpu_time = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_cpu_time()) != 0) {
              total_size += 9;
            }
            // double wall_time = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_wall_time()) != 0) {
              total_size += 9;
            }
            // double throughput = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_throughput()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BenchmarkEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BenchmarkEntry*>(&to_msg);
  auto& from = static_cast<const BenchmarkEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BenchmarkEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extras_.MergeFrom(from._impl_.extras_);
  _this->_internal_mutable_metrics()->MergeFrom(
      from._internal_metrics());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_iters() != 0) {
    _this->_impl_.iters_ = from._impl_.iters_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_cpu_time()) != 0) {
    _this->_impl_.cpu_time_ = from._impl_.cpu_time_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_wall_time()) != 0) {
    _this->_impl_.wall_time_ = from._impl_.wall_time_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_throughput()) != 0) {
    _this->_impl_.throughput_ = from._impl_.throughput_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BenchmarkEntry::CopyFrom(const BenchmarkEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BenchmarkEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BenchmarkEntry::InternalSwap(BenchmarkEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.extras_.InternalSwap(&other->_impl_.extras_);
  _impl_.metrics_.InternalSwap(&other->_impl_.metrics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.throughput_)
      + sizeof(BenchmarkEntry::_impl_.throughput_)
      - PROTOBUF_FIELD_OFFSET(BenchmarkEntry, _impl_.iters_)>(
          reinterpret_cast<char*>(&_impl_.iters_),
          reinterpret_cast<char*>(&other->_impl_.iters_));
}

::google::protobuf::Metadata BenchmarkEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BenchmarkEntries::_Internal {
 public:
};

BenchmarkEntries::BenchmarkEntries(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BenchmarkEntries)
}
inline PROTOBUF_NDEBUG_INLINE BenchmarkEntries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::BenchmarkEntries& from_msg)
      : entry_{visibility, arena, from.entry_},
        _cached_size_{0} {}

BenchmarkEntries::BenchmarkEntries(
    ::google::protobuf::Arena* arena,
    const BenchmarkEntries& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BenchmarkEntries* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.BenchmarkEntries)
}
inline PROTOBUF_NDEBUG_INLINE BenchmarkEntries::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entry_{visibility, arena},
        _cached_size_{0} {}

inline void BenchmarkEntries::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BenchmarkEntries::~BenchmarkEntries() {
  // @@protoc_insertion_point(destructor:tensorflow.BenchmarkEntries)
  SharedDtor(*this);
}
inline void BenchmarkEntries::SharedDtor(MessageLite& self) {
  BenchmarkEntries& this_ = static_cast<BenchmarkEntries&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BenchmarkEntries::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BenchmarkEntries(arena);
}
constexpr auto BenchmarkEntries::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BenchmarkEntries, _impl_.entry_) +
          decltype(BenchmarkEntries::_impl_.entry_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BenchmarkEntries), alignof(BenchmarkEntries), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BenchmarkEntries::PlacementNew_,
                                 sizeof(BenchmarkEntries),
                                 alignof(BenchmarkEntries));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BenchmarkEntries::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BenchmarkEntries_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BenchmarkEntries::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BenchmarkEntries>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BenchmarkEntries::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BenchmarkEntries>(), &BenchmarkEntries::ByteSizeLong,
            &BenchmarkEntries::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BenchmarkEntries, _impl_._cached_size_),
        false,
    },
    &BenchmarkEntries::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BenchmarkEntries::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BenchmarkEntries::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::BenchmarkEntries>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tensorflow.BenchmarkEntry entry = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BenchmarkEntries, _impl_.entry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tensorflow.BenchmarkEntry entry = 1;
    {PROTOBUF_FIELD_OFFSET(BenchmarkEntries, _impl_.entry_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::BenchmarkEntry>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BenchmarkEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BenchmarkEntries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entry_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BenchmarkEntries::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BenchmarkEntries& this_ = static_cast<const BenchmarkEntries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BenchmarkEntries::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BenchmarkEntries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BenchmarkEntries)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tensorflow.BenchmarkEntry entry = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entry_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entry().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BenchmarkEntries)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BenchmarkEntries::ByteSizeLong(const MessageLite& base) {
          const BenchmarkEntries& this_ = static_cast<const BenchmarkEntries&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BenchmarkEntries::ByteSizeLong() const {
          const BenchmarkEntries& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.BenchmarkEntries)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tensorflow.BenchmarkEntry entry = 1;
            {
              total_size += 1UL * this_._internal_entry_size();
              for (const auto& msg : this_._internal_entry()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BenchmarkEntries::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BenchmarkEntries*>(&to_msg);
  auto& from = static_cast<const BenchmarkEntries&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BenchmarkEntries)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entry()->MergeFrom(
      from._internal_entry());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BenchmarkEntries::CopyFrom(const BenchmarkEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BenchmarkEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BenchmarkEntries::InternalSwap(BenchmarkEntries* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entry_.InternalSwap(&other->_impl_.entry_);
}

::google::protobuf::Metadata BenchmarkEntries::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BuildConfiguration::_Internal {
 public:
};

BuildConfiguration::BuildConfiguration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BuildConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE BuildConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::BuildConfiguration& from_msg)
      : cc_flags_{visibility, arena, from.cc_flags_},
        opts_{visibility, arena, from.opts_},
        mode_(arena, from.mode_),
        _cached_size_{0} {}

BuildConfiguration::BuildConfiguration(
    ::google::protobuf::Arena* arena,
    const BuildConfiguration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BuildConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.BuildConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE BuildConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cc_flags_{visibility, arena},
        opts_{visibility, arena},
        mode_(arena),
        _cached_size_{0} {}

inline void BuildConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BuildConfiguration::~BuildConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.BuildConfiguration)
  SharedDtor(*this);
}
inline void BuildConfiguration::SharedDtor(MessageLite& self) {
  BuildConfiguration& this_ = static_cast<BuildConfiguration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.mode_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BuildConfiguration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BuildConfiguration(arena);
}
constexpr auto BuildConfiguration::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.cc_flags_) +
          decltype(BuildConfiguration::_impl_.cc_flags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.opts_) +
          decltype(BuildConfiguration::_impl_.opts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BuildConfiguration), alignof(BuildConfiguration), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BuildConfiguration::PlacementNew_,
                                 sizeof(BuildConfiguration),
                                 alignof(BuildConfiguration));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BuildConfiguration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BuildConfiguration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BuildConfiguration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BuildConfiguration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BuildConfiguration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BuildConfiguration>(), &BuildConfiguration::ByteSizeLong,
            &BuildConfiguration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_._cached_size_),
        false,
    },
    &BuildConfiguration::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BuildConfiguration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2> BuildConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::BuildConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string mode = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.mode_)}},
    // repeated string cc_flags = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.cc_flags_)}},
    // repeated string opts = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.opts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string mode = 1;
    {PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string cc_flags = 2;
    {PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.cc_flags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string opts = 3;
    {PROTOBUF_FIELD_OFFSET(BuildConfiguration, _impl_.opts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\4\10\4\0\0\0\0"
    "tensorflow.BuildConfiguration"
    "mode"
    "cc_flags"
    "opts"
  }},
};

PROTOBUF_NOINLINE void BuildConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BuildConfiguration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cc_flags_.Clear();
  _impl_.opts_.Clear();
  _impl_.mode_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BuildConfiguration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BuildConfiguration& this_ = static_cast<const BuildConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BuildConfiguration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BuildConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BuildConfiguration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string mode = 1;
          if (!this_._internal_mode().empty()) {
            const std::string& _s = this_._internal_mode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.BuildConfiguration.mode");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string cc_flags = 2;
          for (int i = 0, n = this_._internal_cc_flags_size(); i < n; ++i) {
            const auto& s = this_._internal_cc_flags().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.BuildConfiguration.cc_flags");
            target = stream->WriteString(2, s, target);
          }

          // repeated string opts = 3;
          for (int i = 0, n = this_._internal_opts_size(); i < n; ++i) {
            const auto& s = this_._internal_opts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.BuildConfiguration.opts");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BuildConfiguration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BuildConfiguration::ByteSizeLong(const MessageLite& base) {
          const BuildConfiguration& this_ = static_cast<const BuildConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BuildConfiguration::ByteSizeLong() const {
          const BuildConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.BuildConfiguration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string cc_flags = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_cc_flags().size());
              for (int i = 0, n = this_._internal_cc_flags().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_cc_flags().Get(i));
              }
            }
            // repeated string opts = 3;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_opts().size());
              for (int i = 0, n = this_._internal_opts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_opts().Get(i));
              }
            }
          }
           {
            // string mode = 1;
            if (!this_._internal_mode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BuildConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuildConfiguration*>(&to_msg);
  auto& from = static_cast<const BuildConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BuildConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cc_flags()->MergeFrom(from._internal_cc_flags());
  _this->_internal_mutable_opts()->MergeFrom(from._internal_opts());
  if (!from._internal_mode().empty()) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuildConfiguration::CopyFrom(const BuildConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BuildConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BuildConfiguration::InternalSwap(BuildConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cc_flags_.InternalSwap(&other->_impl_.cc_flags_);
  _impl_.opts_.InternalSwap(&other->_impl_.opts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mode_, &other->_impl_.mode_, arena);
}

::google::protobuf::Metadata BuildConfiguration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommitId::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tensorflow::CommitId, _impl_._oneof_case_);
};

CommitId::CommitId(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CommitId)
}
inline PROTOBUF_NDEBUG_INLINE CommitId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::CommitId& from_msg)
      : snapshot_(arena, from.snapshot_),
        kind_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CommitId::CommitId(
    ::google::protobuf::Arena* arena,
    const CommitId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommitId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.pending_changelist_ = from._impl_.pending_changelist_;
  switch (kind_case()) {
    case KIND_NOT_SET:
      break;
      case kChangelist:
        _impl_.kind_.changelist_ = from._impl_.kind_.changelist_;
        break;
      case kHash:
        new (&_impl_.kind_.hash_) decltype(_impl_.kind_.hash_){arena, from._impl_.kind_.hash_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tensorflow.CommitId)
}
inline PROTOBUF_NDEBUG_INLINE CommitId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshot_(arena),
        kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CommitId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pending_changelist_ = {};
}
CommitId::~CommitId() {
  // @@protoc_insertion_point(destructor:tensorflow.CommitId)
  SharedDtor(*this);
}
inline void CommitId::SharedDtor(MessageLite& self) {
  CommitId& this_ = static_cast<CommitId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.snapshot_.Destroy();
  if (this_.has_kind()) {
    this_.clear_kind();
  }
  this_._impl_.~Impl_();
}

void CommitId::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.CommitId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (kind_case()) {
    case kChangelist: {
      // No need to clear
      break;
    }
    case kHash: {
      _impl_.kind_.hash_.Destroy();
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


inline void* CommitId::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommitId(arena);
}
constexpr auto CommitId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommitId),
                                            alignof(CommitId));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommitId::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommitId_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommitId::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommitId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommitId::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommitId>(), &CommitId::ByteSizeLong,
            &CommitId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommitId, _impl_._cached_size_),
        false,
    },
    &CommitId::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommitId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 40, 2> CommitId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::CommitId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 pending_changelist = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CommitId, _impl_.pending_changelist_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CommitId, _impl_.pending_changelist_)}},
    // string snapshot = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CommitId, _impl_.snapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 changelist = 1;
    {PROTOBUF_FIELD_OFFSET(CommitId, _impl_.kind_.changelist_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // string hash = 2;
    {PROTOBUF_FIELD_OFFSET(CommitId, _impl_.kind_.hash_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snapshot = 3;
    {PROTOBUF_FIELD_OFFSET(CommitId, _impl_.snapshot_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 pending_changelist = 4;
    {PROTOBUF_FIELD_OFFSET(CommitId, _impl_.pending_changelist_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\23\0\4\10\0\0\0\0"
    "tensorflow.CommitId"
    "hash"
    "snapshot"
  }},
};

PROTOBUF_NOINLINE void CommitId::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CommitId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshot_.ClearToEmpty();
  _impl_.pending_changelist_ = ::int64_t{0};
  clear_kind();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommitId::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommitId& this_ = static_cast<const CommitId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommitId::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommitId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CommitId)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.kind_case()) {
            case kChangelist: {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt64ToArrayWithField<1>(
                      stream, this_._internal_changelist(), target);
              break;
            }
            case kHash: {
              const std::string& _s = this_._internal_hash();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CommitId.hash");
              target = stream->WriteStringMaybeAliased(2, _s, target);
              break;
            }
            default:
              break;
          }
          // string snapshot = 3;
          if (!this_._internal_snapshot().empty()) {
            const std::string& _s = this_._internal_snapshot();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CommitId.snapshot");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int64 pending_changelist = 4;
          if (this_._internal_pending_changelist() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_pending_changelist(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CommitId)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommitId::ByteSizeLong(const MessageLite& base) {
          const CommitId& this_ = static_cast<const CommitId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommitId::ByteSizeLong() const {
          const CommitId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.CommitId)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string snapshot = 3;
            if (!this_._internal_snapshot().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snapshot());
            }
            // int64 pending_changelist = 4;
            if (this_._internal_pending_changelist() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_pending_changelist());
            }
          }
          switch (this_.kind_case()) {
            // int64 changelist = 1;
            case kChangelist: {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_changelist());
              break;
            }
            // string hash = 2;
            case kHash: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hash());
              break;
            }
            case KIND_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommitId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommitId*>(&to_msg);
  auto& from = static_cast<const CommitId&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CommitId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_snapshot().empty()) {
    _this->_internal_set_snapshot(from._internal_snapshot());
  }
  if (from._internal_pending_changelist() != 0) {
    _this->_impl_.pending_changelist_ = from._impl_.pending_changelist_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_kind();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kChangelist: {
        _this->_impl_.kind_.changelist_ = from._impl_.kind_.changelist_;
        break;
      }
      case kHash: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.hash_.InitDefault();
        }
        _this->_impl_.kind_.hash_.Set(from._internal_hash(), arena);
        break;
      }
      case KIND_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitId::CopyFrom(const CommitId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CommitId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommitId::InternalSwap(CommitId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snapshot_, &other->_impl_.snapshot_, arena);
        swap(_impl_.pending_changelist_, other->_impl_.pending_changelist_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CommitId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CPUInfo_CacheSizeEntry_DoNotUse::CPUInfo_CacheSizeEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CPUInfo_CacheSizeEntry_DoNotUse::CPUInfo_CacheSizeEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CPUInfo_CacheSizeEntry_DoNotUse::CPUInfo_CacheSizeEntry_DoNotUse() : SuperType() {}
              CPUInfo_CacheSizeEntry_DoNotUse::CPUInfo_CacheSizeEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CPUInfo_CacheSizeEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CPUInfo_CacheSizeEntry_DoNotUse(arena);
              }
              constexpr auto CPUInfo_CacheSizeEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CPUInfo_CacheSizeEntry_DoNotUse),
                                                          alignof(CPUInfo_CacheSizeEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CPUInfo_CacheSizeEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CPUInfo_CacheSizeEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CPUInfo_CacheSizeEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CPUInfo_CacheSizeEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CPUInfo_CacheSizeEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CPUInfo_CacheSizeEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CPUInfo_CacheSizeEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CPUInfo_CacheSizeEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CPUInfo_CacheSizeEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 45, 2> CPUInfo_CacheSizeEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CPUInfo_CacheSizeEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::CPUInfo_CacheSizeEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CPUInfo_CacheSizeEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo_CacheSizeEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo_CacheSizeEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CPUInfo_CacheSizeEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 value = 2;
    {PROTOBUF_FIELD_OFFSET(CPUInfo_CacheSizeEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\41\3\0\0\0\0\0\0"
    "tensorflow.CPUInfo.CacheSizeEntry"
    "key"
  }},
};

// ===================================================================

class CPUInfo::_Internal {
 public:
};

CPUInfo::CPUInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CPUInfo)
}
inline PROTOBUF_NDEBUG_INLINE CPUInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::CPUInfo& from_msg)
      : cache_size_{visibility, arena, from.cache_size_},
        cpu_info_(arena, from.cpu_info_),
        cpu_governor_(arena, from.cpu_governor_),
        _cached_size_{0} {}

CPUInfo::CPUInfo(
    ::google::protobuf::Arena* arena,
    const CPUInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CPUInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_cores_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_cores_),
           offsetof(Impl_, mhz_per_cpu_) -
               offsetof(Impl_, num_cores_) +
               sizeof(Impl_::mhz_per_cpu_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.CPUInfo)
}
inline PROTOBUF_NDEBUG_INLINE CPUInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cache_size_{visibility, arena},
        cpu_info_(arena),
        cpu_governor_(arena),
        _cached_size_{0} {}

inline void CPUInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_cores_),
           0,
           offsetof(Impl_, mhz_per_cpu_) -
               offsetof(Impl_, num_cores_) +
               sizeof(Impl_::mhz_per_cpu_));
}
CPUInfo::~CPUInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.CPUInfo)
  SharedDtor(*this);
}
inline void CPUInfo::SharedDtor(MessageLite& self) {
  CPUInfo& this_ = static_cast<CPUInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cpu_info_.Destroy();
  this_._impl_.cpu_governor_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CPUInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CPUInfo(arena);
}
constexpr auto CPUInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cache_size_) +
          decltype(CPUInfo::_impl_.cache_size_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cache_size_) +
          decltype(CPUInfo::_impl_.cache_size_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CPUInfo), alignof(CPUInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CPUInfo::PlacementNew_,
                                 sizeof(CPUInfo),
                                 alignof(CPUInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CPUInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CPUInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CPUInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CPUInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CPUInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CPUInfo>(), &CPUInfo::ByteSizeLong,
            &CPUInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_._cached_size_),
        false,
    },
    &CPUInfo::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CPUInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 57, 2> CPUInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::CPUInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 num_cores = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CPUInfo, _impl_.num_cores_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.num_cores_)}},
    // int64 num_cores_allowed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CPUInfo, _impl_.num_cores_allowed_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.num_cores_allowed_)}},
    // double mhz_per_cpu = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.mhz_per_cpu_)}},
    // string cpu_info = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cpu_info_)}},
    // string cpu_governor = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cpu_governor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 num_cores = 1;
    {PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.num_cores_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 num_cores_allowed = 2;
    {PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.num_cores_allowed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double mhz_per_cpu = 3;
    {PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.mhz_per_cpu_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string cpu_info = 4;
    {PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cpu_info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cpu_governor = 5;
    {PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cpu_governor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, int64> cache_size = 6;
    {PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.cache_size_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CPUInfo()._impl_.cache_size_)>(
        1, 0, 0, 9,
        3)},
  }}, {{
    "\22\0\0\0\10\14\12\0"
    "tensorflow.CPUInfo"
    "cpu_info"
    "cpu_governor"
    "cache_size"
  }},
};

PROTOBUF_NOINLINE void CPUInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CPUInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cache_size_.Clear();
  _impl_.cpu_info_.ClearToEmpty();
  _impl_.cpu_governor_.ClearToEmpty();
  ::memset(&_impl_.num_cores_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mhz_per_cpu_) -
      reinterpret_cast<char*>(&_impl_.num_cores_)) + sizeof(_impl_.mhz_per_cpu_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CPUInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CPUInfo& this_ = static_cast<const CPUInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CPUInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CPUInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CPUInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 num_cores = 1;
          if (this_._internal_num_cores() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_num_cores(), target);
          }

          // int64 num_cores_allowed = 2;
          if (this_._internal_num_cores_allowed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_num_cores_allowed(), target);
          }

          // double mhz_per_cpu = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_mhz_per_cpu()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_mhz_per_cpu(), target);
          }

          // string cpu_info = 4;
          if (!this_._internal_cpu_info().empty()) {
            const std::string& _s = this_._internal_cpu_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CPUInfo.cpu_info");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string cpu_governor = 5;
          if (!this_._internal_cpu_governor().empty()) {
            const std::string& _s = this_._internal_cpu_governor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CPUInfo.cpu_governor");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<string, int64> cache_size = 6;
          if (!this_._internal_cache_size().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int64_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int64_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT64>;
            const auto& field = this_._internal_cache_size();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CPUInfo.cache_size");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.CPUInfo.cache_size");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CPUInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CPUInfo::ByteSizeLong(const MessageLite& base) {
          const CPUInfo& this_ = static_cast<const CPUInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CPUInfo::ByteSizeLong() const {
          const CPUInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.CPUInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, int64> cache_size = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_cache_size_size());
              for (const auto& entry : this_._internal_cache_size()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int64_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string cpu_info = 4;
            if (!this_._internal_cpu_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cpu_info());
            }
            // string cpu_governor = 5;
            if (!this_._internal_cpu_governor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cpu_governor());
            }
            // int64 num_cores = 1;
            if (this_._internal_num_cores() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_num_cores());
            }
            // int64 num_cores_allowed = 2;
            if (this_._internal_num_cores_allowed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_num_cores_allowed());
            }
            // double mhz_per_cpu = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_mhz_per_cpu()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CPUInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CPUInfo*>(&to_msg);
  auto& from = static_cast<const CPUInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CPUInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.cache_size_.MergeFrom(from._impl_.cache_size_);
  if (!from._internal_cpu_info().empty()) {
    _this->_internal_set_cpu_info(from._internal_cpu_info());
  }
  if (!from._internal_cpu_governor().empty()) {
    _this->_internal_set_cpu_governor(from._internal_cpu_governor());
  }
  if (from._internal_num_cores() != 0) {
    _this->_impl_.num_cores_ = from._impl_.num_cores_;
  }
  if (from._internal_num_cores_allowed() != 0) {
    _this->_impl_.num_cores_allowed_ = from._impl_.num_cores_allowed_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_mhz_per_cpu()) != 0) {
    _this->_impl_.mhz_per_cpu_ = from._impl_.mhz_per_cpu_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CPUInfo::CopyFrom(const CPUInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CPUInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CPUInfo::InternalSwap(CPUInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cache_size_.InternalSwap(&other->_impl_.cache_size_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cpu_info_, &other->_impl_.cpu_info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cpu_governor_, &other->_impl_.cpu_governor_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.mhz_per_cpu_)
      + sizeof(CPUInfo::_impl_.mhz_per_cpu_)
      - PROTOBUF_FIELD_OFFSET(CPUInfo, _impl_.num_cores_)>(
          reinterpret_cast<char*>(&_impl_.num_cores_),
          reinterpret_cast<char*>(&other->_impl_.num_cores_));
}

::google::protobuf::Metadata CPUInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MemoryInfo::_Internal {
 public:
};

MemoryInfo::MemoryInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.MemoryInfo)
}
MemoryInfo::MemoryInfo(
    ::google::protobuf::Arena* arena, const MemoryInfo& from)
    : MemoryInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MemoryInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MemoryInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           0,
           offsetof(Impl_, available_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::available_));
}
MemoryInfo::~MemoryInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.MemoryInfo)
  SharedDtor(*this);
}
inline void MemoryInfo::SharedDtor(MessageLite& self) {
  MemoryInfo& this_ = static_cast<MemoryInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MemoryInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MemoryInfo(arena);
}
constexpr auto MemoryInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MemoryInfo),
                                            alignof(MemoryInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MemoryInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MemoryInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MemoryInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MemoryInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MemoryInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MemoryInfo>(), &MemoryInfo::ByteSizeLong,
            &MemoryInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_._cached_size_),
        false,
    },
    &MemoryInfo::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MemoryInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MemoryInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::MemoryInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 available = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MemoryInfo, _impl_.available_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_.available_)}},
    // int64 total = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MemoryInfo, _impl_.total_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_.total_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 total = 1;
    {PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_.total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 available = 2;
    {PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_.available_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MemoryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.MemoryInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.available_) -
      reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.available_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MemoryInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MemoryInfo& this_ = static_cast<const MemoryInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MemoryInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MemoryInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MemoryInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 total = 1;
          if (this_._internal_total() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_total(), target);
          }

          // int64 available = 2;
          if (this_._internal_available() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_available(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MemoryInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MemoryInfo::ByteSizeLong(const MessageLite& base) {
          const MemoryInfo& this_ = static_cast<const MemoryInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MemoryInfo::ByteSizeLong() const {
          const MemoryInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.MemoryInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 total = 1;
            if (this_._internal_total() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_total());
            }
            // int64 available = 2;
            if (this_._internal_available() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_available());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MemoryInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MemoryInfo*>(&to_msg);
  auto& from = static_cast<const MemoryInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.MemoryInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total() != 0) {
    _this->_impl_.total_ = from._impl_.total_;
  }
  if (from._internal_available() != 0) {
    _this->_impl_.available_ = from._impl_.available_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MemoryInfo::CopyFrom(const MemoryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.MemoryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MemoryInfo::InternalSwap(MemoryInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_.available_)
      + sizeof(MemoryInfo::_impl_.available_)
      - PROTOBUF_FIELD_OFFSET(MemoryInfo, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::google::protobuf::Metadata MemoryInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GPUInfo::_Internal {
 public:
};

GPUInfo::GPUInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GPUInfo)
}
inline PROTOBUF_NDEBUG_INLINE GPUInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::GPUInfo& from_msg)
      : model_(arena, from.model_),
        uuid_(arena, from.uuid_),
        bus_id_(arena, from.bus_id_),
        _cached_size_{0} {}

GPUInfo::GPUInfo(
    ::google::protobuf::Arena* arena,
    const GPUInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GPUInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.GPUInfo)
}
inline PROTOBUF_NDEBUG_INLINE GPUInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : model_(arena),
        uuid_(arena),
        bus_id_(arena),
        _cached_size_{0} {}

inline void GPUInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GPUInfo::~GPUInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.GPUInfo)
  SharedDtor(*this);
}
inline void GPUInfo::SharedDtor(MessageLite& self) {
  GPUInfo& this_ = static_cast<GPUInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.model_.Destroy();
  this_._impl_.uuid_.Destroy();
  this_._impl_.bus_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GPUInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GPUInfo(arena);
}
constexpr auto GPUInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GPUInfo),
                                            alignof(GPUInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GPUInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GPUInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GPUInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GPUInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GPUInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GPUInfo>(), &GPUInfo::ByteSizeLong,
            &GPUInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_._cached_size_),
        false,
    },
    &GPUInfo::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GPUInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> GPUInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::GPUInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string model = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_.model_)}},
    // string uuid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_.uuid_)}},
    // string bus_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_.bus_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string model = 1;
    {PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_.model_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string uuid = 2;
    {PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bus_id = 3;
    {PROTOBUF_FIELD_OFFSET(GPUInfo, _impl_.bus_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\5\4\6\0\0\0\0"
    "tensorflow.GPUInfo"
    "model"
    "uuid"
    "bus_id"
  }},
};

PROTOBUF_NOINLINE void GPUInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GPUInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_.ClearToEmpty();
  _impl_.uuid_.ClearToEmpty();
  _impl_.bus_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GPUInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GPUInfo& this_ = static_cast<const GPUInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GPUInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GPUInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GPUInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string model = 1;
          if (!this_._internal_model().empty()) {
            const std::string& _s = this_._internal_model();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GPUInfo.model");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string uuid = 2;
          if (!this_._internal_uuid().empty()) {
            const std::string& _s = this_._internal_uuid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GPUInfo.uuid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string bus_id = 3;
          if (!this_._internal_bus_id().empty()) {
            const std::string& _s = this_._internal_bus_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.GPUInfo.bus_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GPUInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GPUInfo::ByteSizeLong(const MessageLite& base) {
          const GPUInfo& this_ = static_cast<const GPUInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GPUInfo::ByteSizeLong() const {
          const GPUInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.GPUInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string model = 1;
            if (!this_._internal_model().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_model());
            }
            // string uuid = 2;
            if (!this_._internal_uuid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_uuid());
            }
            // string bus_id = 3;
            if (!this_._internal_bus_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bus_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GPUInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GPUInfo*>(&to_msg);
  auto& from = static_cast<const GPUInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GPUInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model().empty()) {
    _this->_internal_set_model(from._internal_model());
  }
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_bus_id().empty()) {
    _this->_internal_set_bus_id(from._internal_bus_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GPUInfo::CopyFrom(const GPUInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GPUInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GPUInfo::InternalSwap(GPUInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_, &other->_impl_.model_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uuid_, &other->_impl_.uuid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bus_id_, &other->_impl_.bus_id_, arena);
}

::google::protobuf::Metadata GPUInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlatformInfo::_Internal {
 public:
};

PlatformInfo::PlatformInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.PlatformInfo)
}
inline PROTOBUF_NDEBUG_INLINE PlatformInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::PlatformInfo& from_msg)
      : bits_(arena, from.bits_),
        linkage_(arena, from.linkage_),
        machine_(arena, from.machine_),
        release_(arena, from.release_),
        system_(arena, from.system_),
        version_(arena, from.version_),
        _cached_size_{0} {}

PlatformInfo::PlatformInfo(
    ::google::protobuf::Arena* arena,
    const PlatformInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlatformInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.PlatformInfo)
}
inline PROTOBUF_NDEBUG_INLINE PlatformInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bits_(arena),
        linkage_(arena),
        machine_(arena),
        release_(arena),
        system_(arena),
        version_(arena),
        _cached_size_{0} {}

inline void PlatformInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PlatformInfo::~PlatformInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.PlatformInfo)
  SharedDtor(*this);
}
inline void PlatformInfo::SharedDtor(MessageLite& self) {
  PlatformInfo& this_ = static_cast<PlatformInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.bits_.Destroy();
  this_._impl_.linkage_.Destroy();
  this_._impl_.machine_.Destroy();
  this_._impl_.release_.Destroy();
  this_._impl_.system_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PlatformInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PlatformInfo(arena);
}
constexpr auto PlatformInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlatformInfo),
                                            alignof(PlatformInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PlatformInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PlatformInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PlatformInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PlatformInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PlatformInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PlatformInfo>(), &PlatformInfo::ByteSizeLong,
            &PlatformInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_._cached_size_),
        false,
    },
    &PlatformInfo::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PlatformInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 70, 2> PlatformInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::PlatformInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string bits = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.bits_)}},
    // string linkage = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.linkage_)}},
    // string machine = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.machine_)}},
    // string release = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.release_)}},
    // string system = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.system_)}},
    // string version = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string bits = 1;
    {PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.bits_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string linkage = 2;
    {PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.linkage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string machine = 3;
    {PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.machine_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string release = 4;
    {PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.release_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string system = 5;
    {PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.system_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 6;
    {PROTOBUF_FIELD_OFFSET(PlatformInfo, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\4\7\7\7\6\7\0"
    "tensorflow.PlatformInfo"
    "bits"
    "linkage"
    "machine"
    "release"
    "system"
    "version"
  }},
};

PROTOBUF_NOINLINE void PlatformInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.PlatformInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bits_.ClearToEmpty();
  _impl_.linkage_.ClearToEmpty();
  _impl_.machine_.ClearToEmpty();
  _impl_.release_.ClearToEmpty();
  _impl_.system_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PlatformInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PlatformInfo& this_ = static_cast<const PlatformInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PlatformInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PlatformInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.PlatformInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string bits = 1;
          if (!this_._internal_bits().empty()) {
            const std::string& _s = this_._internal_bits();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.PlatformInfo.bits");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string linkage = 2;
          if (!this_._internal_linkage().empty()) {
            const std::string& _s = this_._internal_linkage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.PlatformInfo.linkage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string machine = 3;
          if (!this_._internal_machine().empty()) {
            const std::string& _s = this_._internal_machine();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.PlatformInfo.machine");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string release = 4;
          if (!this_._internal_release().empty()) {
            const std::string& _s = this_._internal_release();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.PlatformInfo.release");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string system = 5;
          if (!this_._internal_system().empty()) {
            const std::string& _s = this_._internal_system();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.PlatformInfo.system");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string version = 6;
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.PlatformInfo.version");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.PlatformInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PlatformInfo::ByteSizeLong(const MessageLite& base) {
          const PlatformInfo& this_ = static_cast<const PlatformInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PlatformInfo::ByteSizeLong() const {
          const PlatformInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.PlatformInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string bits = 1;
            if (!this_._internal_bits().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bits());
            }
            // string linkage = 2;
            if (!this_._internal_linkage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_linkage());
            }
            // string machine = 3;
            if (!this_._internal_machine().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_machine());
            }
            // string release = 4;
            if (!this_._internal_release().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_release());
            }
            // string system = 5;
            if (!this_._internal_system().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_system());
            }
            // string version = 6;
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PlatformInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlatformInfo*>(&to_msg);
  auto& from = static_cast<const PlatformInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.PlatformInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bits().empty()) {
    _this->_internal_set_bits(from._internal_bits());
  }
  if (!from._internal_linkage().empty()) {
    _this->_internal_set_linkage(from._internal_linkage());
  }
  if (!from._internal_machine().empty()) {
    _this->_internal_set_machine(from._internal_machine());
  }
  if (!from._internal_release().empty()) {
    _this->_internal_set_release(from._internal_release());
  }
  if (!from._internal_system().empty()) {
    _this->_internal_set_system(from._internal_system());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlatformInfo::CopyFrom(const PlatformInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.PlatformInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlatformInfo::InternalSwap(PlatformInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bits_, &other->_impl_.bits_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.linkage_, &other->_impl_.linkage_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.machine_, &other->_impl_.machine_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.release_, &other->_impl_.release_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.system_, &other->_impl_.system_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
}

::google::protobuf::Metadata PlatformInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AvailableDeviceInfo::_Internal {
 public:
};

AvailableDeviceInfo::AvailableDeviceInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.AvailableDeviceInfo)
}
inline PROTOBUF_NDEBUG_INLINE AvailableDeviceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::AvailableDeviceInfo& from_msg)
      : name_(arena, from.name_),
        type_(arena, from.type_),
        physical_description_(arena, from.physical_description_),
        _cached_size_{0} {}

AvailableDeviceInfo::AvailableDeviceInfo(
    ::google::protobuf::Arena* arena,
    const AvailableDeviceInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AvailableDeviceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.memory_limit_ = from._impl_.memory_limit_;

  // @@protoc_insertion_point(copy_constructor:tensorflow.AvailableDeviceInfo)
}
inline PROTOBUF_NDEBUG_INLINE AvailableDeviceInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        type_(arena),
        physical_description_(arena),
        _cached_size_{0} {}

inline void AvailableDeviceInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.memory_limit_ = {};
}
AvailableDeviceInfo::~AvailableDeviceInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.AvailableDeviceInfo)
  SharedDtor(*this);
}
inline void AvailableDeviceInfo::SharedDtor(MessageLite& self) {
  AvailableDeviceInfo& this_ = static_cast<AvailableDeviceInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.physical_description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AvailableDeviceInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AvailableDeviceInfo(arena);
}
constexpr auto AvailableDeviceInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AvailableDeviceInfo),
                                            alignof(AvailableDeviceInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AvailableDeviceInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AvailableDeviceInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AvailableDeviceInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AvailableDeviceInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AvailableDeviceInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AvailableDeviceInfo>(), &AvailableDeviceInfo::ByteSizeLong,
            &AvailableDeviceInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_._cached_size_),
        false,
    },
    &AvailableDeviceInfo::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AvailableDeviceInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 67, 2> AvailableDeviceInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::AvailableDeviceInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string physical_description = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.physical_description_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.name_)}},
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.type_)}},
    // int64 memory_limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AvailableDeviceInfo, _impl_.memory_limit_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.memory_limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 memory_limit = 3;
    {PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.memory_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string physical_description = 4;
    {PROTOBUF_FIELD_OFFSET(AvailableDeviceInfo, _impl_.physical_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\4\4\0\24\0\0\0"
    "tensorflow.AvailableDeviceInfo"
    "name"
    "type"
    "physical_description"
  }},
};

PROTOBUF_NOINLINE void AvailableDeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.AvailableDeviceInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.physical_description_.ClearToEmpty();
  _impl_.memory_limit_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AvailableDeviceInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AvailableDeviceInfo& this_ = static_cast<const AvailableDeviceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AvailableDeviceInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AvailableDeviceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.AvailableDeviceInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.AvailableDeviceInfo.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string type = 2;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.AvailableDeviceInfo.type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 memory_limit = 3;
          if (this_._internal_memory_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_memory_limit(), target);
          }

          // string physical_description = 4;
          if (!this_._internal_physical_description().empty()) {
            const std::string& _s = this_._internal_physical_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.AvailableDeviceInfo.physical_description");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.AvailableDeviceInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AvailableDeviceInfo::ByteSizeLong(const MessageLite& base) {
          const AvailableDeviceInfo& this_ = static_cast<const AvailableDeviceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AvailableDeviceInfo::ByteSizeLong() const {
          const AvailableDeviceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.AvailableDeviceInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string type = 2;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string physical_description = 4;
            if (!this_._internal_physical_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_physical_description());
            }
            // int64 memory_limit = 3;
            if (this_._internal_memory_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_memory_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AvailableDeviceInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AvailableDeviceInfo*>(&to_msg);
  auto& from = static_cast<const AvailableDeviceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.AvailableDeviceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_physical_description().empty()) {
    _this->_internal_set_physical_description(from._internal_physical_description());
  }
  if (from._internal_memory_limit() != 0) {
    _this->_impl_.memory_limit_ = from._impl_.memory_limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AvailableDeviceInfo::CopyFrom(const AvailableDeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.AvailableDeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AvailableDeviceInfo::InternalSwap(AvailableDeviceInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.physical_description_, &other->_impl_.physical_description_, arena);
        swap(_impl_.memory_limit_, other->_impl_.memory_limit_);
}

::google::protobuf::Metadata AvailableDeviceInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MachineConfiguration::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MachineConfiguration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_._has_bits_);
};

void MachineConfiguration::clear_device_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_info_.Clear();
}
MachineConfiguration::MachineConfiguration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.MachineConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE MachineConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::MachineConfiguration& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_info_{visibility, arena, from.device_info_},
        available_device_info_{visibility, arena, from.available_device_info_},
        hostname_(arena, from.hostname_),
        serial_identifier_(arena, from.serial_identifier_) {}

MachineConfiguration::MachineConfiguration(
    ::google::protobuf::Arena* arena,
    const MachineConfiguration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MachineConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.platform_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::PlatformInfo>(
                              arena, *from._impl_.platform_info_)
                        : nullptr;
  _impl_.cpu_info_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::CPUInfo>(
                              arena, *from._impl_.cpu_info_)
                        : nullptr;
  _impl_.memory_info_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::MemoryInfo>(
                              arena, *from._impl_.memory_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tensorflow.MachineConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE MachineConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        device_info_{visibility, arena},
        available_device_info_{visibility, arena},
        hostname_(arena),
        serial_identifier_(arena) {}

inline void MachineConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, platform_info_),
           0,
           offsetof(Impl_, memory_info_) -
               offsetof(Impl_, platform_info_) +
               sizeof(Impl_::memory_info_));
}
MachineConfiguration::~MachineConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.MachineConfiguration)
  SharedDtor(*this);
}
inline void MachineConfiguration::SharedDtor(MessageLite& self) {
  MachineConfiguration& this_ = static_cast<MachineConfiguration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hostname_.Destroy();
  this_._impl_.serial_identifier_.Destroy();
  delete this_._impl_.platform_info_;
  delete this_._impl_.cpu_info_;
  delete this_._impl_.memory_info_;
  this_._impl_.~Impl_();
}

inline void* MachineConfiguration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MachineConfiguration(arena);
}
constexpr auto MachineConfiguration::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.device_info_) +
          decltype(MachineConfiguration::_impl_.device_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.available_device_info_) +
          decltype(MachineConfiguration::_impl_.available_device_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MachineConfiguration), alignof(MachineConfiguration), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MachineConfiguration::PlacementNew_,
                                 sizeof(MachineConfiguration),
                                 alignof(MachineConfiguration));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MachineConfiguration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MachineConfiguration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MachineConfiguration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MachineConfiguration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MachineConfiguration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MachineConfiguration>(), &MachineConfiguration::ByteSizeLong,
            &MachineConfiguration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_._cached_size_),
        false,
    },
    &MachineConfiguration::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MachineConfiguration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 5, 65, 2> MachineConfiguration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::MachineConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string hostname = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.hostname_)}},
    // .tensorflow.PlatformInfo platform_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.platform_info_)}},
    // .tensorflow.CPUInfo cpu_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.cpu_info_)}},
    // repeated .google.protobuf.Any device_info = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.device_info_)}},
    // repeated .tensorflow.AvailableDeviceInfo available_device_info = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.available_device_info_)}},
    // .tensorflow.MemoryInfo memory_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 4, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.memory_info_)}},
    // string serial_identifier = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.serial_identifier_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string hostname = 1;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.hostname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.PlatformInfo platform_info = 2;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.platform_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.CPUInfo cpu_info = 3;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.cpu_info_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any device_info = 4;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.device_info_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tensorflow.AvailableDeviceInfo available_device_info = 5;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.available_device_info_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.MemoryInfo memory_info = 6;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.memory_info_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string serial_identifier = 7;
    {PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.serial_identifier_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::PlatformInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::CPUInfo>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::tensorflow::AvailableDeviceInfo>()},
    {::_pbi::TcParser::GetTable<::tensorflow::MemoryInfo>()},
  }}, {{
    "\37\10\0\0\0\0\0\21"
    "tensorflow.MachineConfiguration"
    "hostname"
    "serial_identifier"
  }},
};

PROTOBUF_NOINLINE void MachineConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.MachineConfiguration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_info_.Clear();
  _impl_.available_device_info_.Clear();
  _impl_.hostname_.ClearToEmpty();
  _impl_.serial_identifier_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.platform_info_ != nullptr);
      _impl_.platform_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.cpu_info_ != nullptr);
      _impl_.cpu_info_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.memory_info_ != nullptr);
      _impl_.memory_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MachineConfiguration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MachineConfiguration& this_ = static_cast<const MachineConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MachineConfiguration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MachineConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.MachineConfiguration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string hostname = 1;
          if (!this_._internal_hostname().empty()) {
            const std::string& _s = this_._internal_hostname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.MachineConfiguration.hostname");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.PlatformInfo platform_info = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.platform_info_, this_._impl_.platform_info_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.CPUInfo cpu_info = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.cpu_info_, this_._impl_.cpu_info_->GetCachedSize(), target,
                stream);
          }

          // repeated .google.protobuf.Any device_info = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_device_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_device_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tensorflow.AvailableDeviceInfo available_device_info = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_available_device_info_size());
               i < n; i++) {
            const auto& repfield = this_._internal_available_device_info().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tensorflow.MemoryInfo memory_info = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.memory_info_, this_._impl_.memory_info_->GetCachedSize(), target,
                stream);
          }

          // string serial_identifier = 7;
          if (!this_._internal_serial_identifier().empty()) {
            const std::string& _s = this_._internal_serial_identifier();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.MachineConfiguration.serial_identifier");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.MachineConfiguration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MachineConfiguration::ByteSizeLong(const MessageLite& base) {
          const MachineConfiguration& this_ = static_cast<const MachineConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MachineConfiguration::ByteSizeLong() const {
          const MachineConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.MachineConfiguration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .google.protobuf.Any device_info = 4;
            {
              total_size += 1UL * this_._internal_device_info_size();
              for (const auto& msg : this_._internal_device_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tensorflow.AvailableDeviceInfo available_device_info = 5;
            {
              total_size += 1UL * this_._internal_available_device_info_size();
              for (const auto& msg : this_._internal_available_device_info()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string hostname = 1;
            if (!this_._internal_hostname().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_hostname());
            }
            // string serial_identifier = 7;
            if (!this_._internal_serial_identifier().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_serial_identifier());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .tensorflow.PlatformInfo platform_info = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.platform_info_);
            }
            // .tensorflow.CPUInfo cpu_info = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cpu_info_);
            }
            // .tensorflow.MemoryInfo memory_info = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.memory_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MachineConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MachineConfiguration*>(&to_msg);
  auto& from = static_cast<const MachineConfiguration&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.MachineConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_info()->MergeFrom(
      from._internal_device_info());
  _this->_internal_mutable_available_device_info()->MergeFrom(
      from._internal_available_device_info());
  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_serial_identifier().empty()) {
    _this->_internal_set_serial_identifier(from._internal_serial_identifier());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.platform_info_ != nullptr);
      if (_this->_impl_.platform_info_ == nullptr) {
        _this->_impl_.platform_info_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::PlatformInfo>(arena, *from._impl_.platform_info_);
      } else {
        _this->_impl_.platform_info_->MergeFrom(*from._impl_.platform_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.cpu_info_ != nullptr);
      if (_this->_impl_.cpu_info_ == nullptr) {
        _this->_impl_.cpu_info_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::CPUInfo>(arena, *from._impl_.cpu_info_);
      } else {
        _this->_impl_.cpu_info_->MergeFrom(*from._impl_.cpu_info_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.memory_info_ != nullptr);
      if (_this->_impl_.memory_info_ == nullptr) {
        _this->_impl_.memory_info_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::MemoryInfo>(arena, *from._impl_.memory_info_);
      } else {
        _this->_impl_.memory_info_->MergeFrom(*from._impl_.memory_info_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MachineConfiguration::CopyFrom(const MachineConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.MachineConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MachineConfiguration::InternalSwap(MachineConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.device_info_.InternalSwap(&other->_impl_.device_info_);
  _impl_.available_device_info_.InternalSwap(&other->_impl_.available_device_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hostname_, &other->_impl_.hostname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serial_identifier_, &other->_impl_.serial_identifier_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.memory_info_)
      + sizeof(MachineConfiguration::_impl_.memory_info_)
      - PROTOBUF_FIELD_OFFSET(MachineConfiguration, _impl_.platform_info_)>(
          reinterpret_cast<char*>(&_impl_.platform_info_),
          reinterpret_cast<char*>(&other->_impl_.platform_info_));
}

::google::protobuf::Metadata MachineConfiguration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RunConfiguration_EnvVarsEntry_DoNotUse::RunConfiguration_EnvVarsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RunConfiguration_EnvVarsEntry_DoNotUse::RunConfiguration_EnvVarsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RunConfiguration_EnvVarsEntry_DoNotUse::RunConfiguration_EnvVarsEntry_DoNotUse() : SuperType() {}
              RunConfiguration_EnvVarsEntry_DoNotUse::RunConfiguration_EnvVarsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RunConfiguration_EnvVarsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RunConfiguration_EnvVarsEntry_DoNotUse(arena);
              }
              constexpr auto RunConfiguration_EnvVarsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RunConfiguration_EnvVarsEntry_DoNotUse),
                                                          alignof(RunConfiguration_EnvVarsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RunConfiguration_EnvVarsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RunConfiguration_EnvVarsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RunConfiguration_EnvVarsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RunConfiguration_EnvVarsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RunConfiguration_EnvVarsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RunConfiguration_EnvVarsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RunConfiguration_EnvVarsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RunConfiguration_EnvVarsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RunConfiguration_EnvVarsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> RunConfiguration_EnvVarsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RunConfiguration_EnvVarsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::RunConfiguration_EnvVarsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RunConfiguration_EnvVarsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RunConfiguration_EnvVarsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(RunConfiguration_EnvVarsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(RunConfiguration_EnvVarsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "tensorflow.RunConfiguration.EnvVarsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class RunConfiguration::_Internal {
 public:
};

RunConfiguration::RunConfiguration(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.RunConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE RunConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::RunConfiguration& from_msg)
      : argument_{visibility, arena, from.argument_},
        env_vars_{visibility, arena, from.env_vars_},
        _cached_size_{0} {}

RunConfiguration::RunConfiguration(
    ::google::protobuf::Arena* arena,
    const RunConfiguration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RunConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tensorflow.RunConfiguration)
}
inline PROTOBUF_NDEBUG_INLINE RunConfiguration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : argument_{visibility, arena},
        env_vars_{visibility, arena},
        _cached_size_{0} {}

inline void RunConfiguration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RunConfiguration::~RunConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.RunConfiguration)
  SharedDtor(*this);
}
inline void RunConfiguration::SharedDtor(MessageLite& self) {
  RunConfiguration& this_ = static_cast<RunConfiguration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RunConfiguration::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RunConfiguration(arena);
}
constexpr auto RunConfiguration::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_.argument_) +
          decltype(RunConfiguration::_impl_.argument_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_.env_vars_) +
          decltype(RunConfiguration::_impl_.env_vars_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_.env_vars_) +
          decltype(RunConfiguration::_impl_.env_vars_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RunConfiguration), alignof(RunConfiguration), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RunConfiguration::PlacementNew_,
                                 sizeof(RunConfiguration),
                                 alignof(RunConfiguration));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RunConfiguration::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RunConfiguration_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RunConfiguration::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RunConfiguration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RunConfiguration::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RunConfiguration>(), &RunConfiguration::ByteSizeLong,
            &RunConfiguration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_._cached_size_),
        false,
    },
    &RunConfiguration::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RunConfiguration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 52, 2> RunConfiguration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::RunConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string argument = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_.argument_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string argument = 1;
    {PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_.argument_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> env_vars = 2;
    {PROTOBUF_FIELD_OFFSET(RunConfiguration, _impl_.env_vars_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RunConfiguration()._impl_.env_vars_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\10\10\0\0\0\0\0"
    "tensorflow.RunConfiguration"
    "argument"
    "env_vars"
  }},
};

PROTOBUF_NOINLINE void RunConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.RunConfiguration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.argument_.Clear();
  _impl_.env_vars_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RunConfiguration::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RunConfiguration& this_ = static_cast<const RunConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RunConfiguration::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RunConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.RunConfiguration)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string argument = 1;
          for (int i = 0, n = this_._internal_argument_size(); i < n; ++i) {
            const auto& s = this_._internal_argument().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RunConfiguration.argument");
            target = stream->WriteString(1, s, target);
          }

          // map<string, string> env_vars = 2;
          if (!this_._internal_env_vars().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_env_vars();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RunConfiguration.env_vars");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RunConfiguration.env_vars");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RunConfiguration.env_vars");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.RunConfiguration.env_vars");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.RunConfiguration)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RunConfiguration::ByteSizeLong(const MessageLite& base) {
          const RunConfiguration& this_ = static_cast<const RunConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RunConfiguration::ByteSizeLong() const {
          const RunConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.RunConfiguration)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string argument = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_argument().size());
              for (int i = 0, n = this_._internal_argument().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_argument().Get(i));
              }
            }
            // map<string, string> env_vars = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_env_vars_size());
              for (const auto& entry : this_._internal_env_vars()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RunConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RunConfiguration*>(&to_msg);
  auto& from = static_cast<const RunConfiguration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.RunConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_argument()->MergeFrom(from._internal_argument());
  _this->_impl_.env_vars_.MergeFrom(from._impl_.env_vars_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RunConfiguration::CopyFrom(const RunConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.RunConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RunConfiguration::InternalSwap(RunConfiguration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.argument_.InternalSwap(&other->_impl_.argument_);
  _impl_.env_vars_.InternalSwap(&other->_impl_.env_vars_);
}

::google::protobuf::Metadata RunConfiguration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestResults::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestResults>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestResults, _impl_._has_bits_);
};

TestResults::TestResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.TestResults)
}
inline PROTOBUF_NDEBUG_INLINE TestResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tensorflow::TestResults& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_(arena, from.target_),
        name_(arena, from.name_),
        run_mode_(arena, from.run_mode_),
        tf_version_(arena, from.tf_version_) {}

TestResults::TestResults(
    ::google::protobuf::Arena* arena,
    const TestResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entries_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::BenchmarkEntries>(
                              arena, *from._impl_.entries_)
                        : nullptr;
  _impl_.build_configuration_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::BuildConfiguration>(
                              arena, *from._impl_.build_configuration_)
                        : nullptr;
  _impl_.commit_id_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::CommitId>(
                              arena, *from._impl_.commit_id_)
                        : nullptr;
  _impl_.machine_configuration_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::MachineConfiguration>(
                              arena, *from._impl_.machine_configuration_)
                        : nullptr;
  _impl_.run_configuration_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tensorflow::RunConfiguration>(
                              arena, *from._impl_.run_configuration_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_time_),
           offsetof(Impl_, benchmark_type_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::benchmark_type_));

  // @@protoc_insertion_point(copy_constructor:tensorflow.TestResults)
}
inline PROTOBUF_NDEBUG_INLINE TestResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        target_(arena),
        name_(arena),
        run_mode_(arena),
        tf_version_(arena) {}

inline void TestResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entries_),
           0,
           offsetof(Impl_, benchmark_type_) -
               offsetof(Impl_, entries_) +
               sizeof(Impl_::benchmark_type_));
}
TestResults::~TestResults() {
  // @@protoc_insertion_point(destructor:tensorflow.TestResults)
  SharedDtor(*this);
}
inline void TestResults::SharedDtor(MessageLite& self) {
  TestResults& this_ = static_cast<TestResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.run_mode_.Destroy();
  this_._impl_.tf_version_.Destroy();
  delete this_._impl_.entries_;
  delete this_._impl_.build_configuration_;
  delete this_._impl_.commit_id_;
  delete this_._impl_.machine_configuration_;
  delete this_._impl_.run_configuration_;
  this_._impl_.~Impl_();
}

inline void* TestResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TestResults(arena);
}
constexpr auto TestResults::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TestResults),
                                            alignof(TestResults));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TestResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TestResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TestResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TestResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TestResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TestResults>(), &TestResults::ByteSizeLong,
            &TestResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TestResults, _impl_._cached_size_),
        false,
    },
    &TestResults::kDescriptorMethods,
    &descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TestResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 5, 67, 2> TestResults::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestResults, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tensorflow::TestResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.target_)}},
    // .tensorflow.BenchmarkEntries entries = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.entries_)}},
    // .tensorflow.BuildConfiguration build_configuration = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.build_configuration_)}},
    // .tensorflow.CommitId commit_id = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.commit_id_)}},
    // int64 start_time = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TestResults, _impl_.start_time_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.start_time_)}},
    // double run_time = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.run_time_)}},
    // .tensorflow.MachineConfiguration machine_configuration = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.machine_configuration_)}},
    // .tensorflow.RunConfiguration run_configuration = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.run_configuration_)}},
    // string name = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.name_)}},
    // .tensorflow.TestResults.BenchmarkType benchmark_type = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestResults, _impl_.benchmark_type_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.benchmark_type_)}},
    // string run_mode = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.run_mode_)}},
    // string tf_version = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.tf_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.target_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.BenchmarkEntries entries = 2;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.entries_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.BuildConfiguration build_configuration = 3;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.build_configuration_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.CommitId commit_id = 4;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.commit_id_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 start_time = 5;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.start_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double run_time = 6;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.run_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .tensorflow.MachineConfiguration machine_configuration = 7;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.machine_configuration_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tensorflow.RunConfiguration run_configuration = 8;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.run_configuration_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 9;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tensorflow.TestResults.BenchmarkType benchmark_type = 10;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.benchmark_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string run_mode = 11;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.run_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tf_version = 12;
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.tf_version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tensorflow::BenchmarkEntries>()},
    {::_pbi::TcParser::GetTable<::tensorflow::BuildConfiguration>()},
    {::_pbi::TcParser::GetTable<::tensorflow::CommitId>()},
    {::_pbi::TcParser::GetTable<::tensorflow::MachineConfiguration>()},
    {::_pbi::TcParser::GetTable<::tensorflow::RunConfiguration>()},
  }}, {{
    "\26\6\0\0\0\0\0\0\0\4\0\10\12\0\0\0"
    "tensorflow.TestResults"
    "target"
    "name"
    "run_mode"
    "tf_version"
  }},
};

PROTOBUF_NOINLINE void TestResults::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.TestResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.run_mode_.ClearToEmpty();
  _impl_.tf_version_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.entries_ != nullptr);
      _impl_.entries_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.build_configuration_ != nullptr);
      _impl_.build_configuration_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.commit_id_ != nullptr);
      _impl_.commit_id_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.machine_configuration_ != nullptr);
      _impl_.machine_configuration_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.run_configuration_ != nullptr);
      _impl_.run_configuration_->Clear();
    }
  }
  ::memset(&_impl_.start_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.benchmark_type_) -
      reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.benchmark_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestResults& this_ = static_cast<const TestResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tensorflow.TestResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1;
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.TestResults.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tensorflow.BenchmarkEntries entries = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.entries_, this_._impl_.entries_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.BuildConfiguration build_configuration = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.build_configuration_, this_._impl_.build_configuration_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.CommitId commit_id = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.commit_id_, this_._impl_.commit_id_->GetCachedSize(), target,
                stream);
          }

          // int64 start_time = 5;
          if (this_._internal_start_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_start_time(), target);
          }

          // double run_time = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_run_time()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_run_time(), target);
          }

          // .tensorflow.MachineConfiguration machine_configuration = 7;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.machine_configuration_, this_._impl_.machine_configuration_->GetCachedSize(), target,
                stream);
          }

          // .tensorflow.RunConfiguration run_configuration = 8;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.run_configuration_, this_._impl_.run_configuration_->GetCachedSize(), target,
                stream);
          }

          // string name = 9;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.TestResults.name");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .tensorflow.TestResults.BenchmarkType benchmark_type = 10;
          if (this_._internal_benchmark_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_benchmark_type(), target);
          }

          // string run_mode = 11;
          if (!this_._internal_run_mode().empty()) {
            const std::string& _s = this_._internal_run_mode();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.TestResults.run_mode");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string tf_version = 12;
          if (!this_._internal_tf_version().empty()) {
            const std::string& _s = this_._internal_tf_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tensorflow.TestResults.tf_version");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tensorflow.TestResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestResults::ByteSizeLong(const MessageLite& base) {
          const TestResults& this_ = static_cast<const TestResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestResults::ByteSizeLong() const {
          const TestResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tensorflow.TestResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target = 1;
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // string name = 9;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string run_mode = 11;
            if (!this_._internal_run_mode().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_run_mode());
            }
            // string tf_version = 12;
            if (!this_._internal_tf_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tf_version());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .tensorflow.BenchmarkEntries entries = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entries_);
            }
            // .tensorflow.BuildConfiguration build_configuration = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.build_configuration_);
            }
            // .tensorflow.CommitId commit_id = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commit_id_);
            }
            // .tensorflow.MachineConfiguration machine_configuration = 7;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.machine_configuration_);
            }
            // .tensorflow.RunConfiguration run_configuration = 8;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.run_configuration_);
            }
          }
           {
            // int64 start_time = 5;
            if (this_._internal_start_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start_time());
            }
            // double run_time = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_run_time()) != 0) {
              total_size += 9;
            }
            // .tensorflow.TestResults.BenchmarkType benchmark_type = 10;
            if (this_._internal_benchmark_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_benchmark_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestResults*>(&to_msg);
  auto& from = static_cast<const TestResults&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.TestResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_run_mode().empty()) {
    _this->_internal_set_run_mode(from._internal_run_mode());
  }
  if (!from._internal_tf_version().empty()) {
    _this->_internal_set_tf_version(from._internal_tf_version());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.entries_ != nullptr);
      if (_this->_impl_.entries_ == nullptr) {
        _this->_impl_.entries_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::BenchmarkEntries>(arena, *from._impl_.entries_);
      } else {
        _this->_impl_.entries_->MergeFrom(*from._impl_.entries_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.build_configuration_ != nullptr);
      if (_this->_impl_.build_configuration_ == nullptr) {
        _this->_impl_.build_configuration_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::BuildConfiguration>(arena, *from._impl_.build_configuration_);
      } else {
        _this->_impl_.build_configuration_->MergeFrom(*from._impl_.build_configuration_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.commit_id_ != nullptr);
      if (_this->_impl_.commit_id_ == nullptr) {
        _this->_impl_.commit_id_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::CommitId>(arena, *from._impl_.commit_id_);
      } else {
        _this->_impl_.commit_id_->MergeFrom(*from._impl_.commit_id_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.machine_configuration_ != nullptr);
      if (_this->_impl_.machine_configuration_ == nullptr) {
        _this->_impl_.machine_configuration_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::MachineConfiguration>(arena, *from._impl_.machine_configuration_);
      } else {
        _this->_impl_.machine_configuration_->MergeFrom(*from._impl_.machine_configuration_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.run_configuration_ != nullptr);
      if (_this->_impl_.run_configuration_ == nullptr) {
        _this->_impl_.run_configuration_ =
            ::google::protobuf::Message::CopyConstruct<::tensorflow::RunConfiguration>(arena, *from._impl_.run_configuration_);
      } else {
        _this->_impl_.run_configuration_->MergeFrom(*from._impl_.run_configuration_);
      }
    }
  }
  if (from._internal_start_time() != 0) {
    _this->_impl_.start_time_ = from._impl_.start_time_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_run_time()) != 0) {
    _this->_impl_.run_time_ = from._impl_.run_time_;
  }
  if (from._internal_benchmark_type() != 0) {
    _this->_impl_.benchmark_type_ = from._impl_.benchmark_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestResults::CopyFrom(const TestResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.TestResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestResults::InternalSwap(TestResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_mode_, &other->_impl_.run_mode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tf_version_, &other->_impl_.tf_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestResults, _impl_.benchmark_type_)
      + sizeof(TestResults::_impl_.benchmark_type_)
      - PROTOBUF_FIELD_OFFSET(TestResults, _impl_.entries_)>(
          reinterpret_cast<char*>(&_impl_.entries_),
          reinterpret_cast<char*>(&other->_impl_.entries_));
}

::google::protobuf::Metadata TestResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_xla_2ftsl_2fprotobuf_2ftest_5flog_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
